{"version":3,"sources":["modules/dutch/containers/CalculateContainer.tsx","modules/dutch/components/Layout/StepHeader.tsx","modules/dutch/components/Layout/TemplateHeader.tsx","modules/dutch/components/Layout/TemplateOptions.tsx","modules/dutch/hooks/usePaymentList.tsx","utils/utils.ts","modules/dutch/components/User/SelectUser.tsx","modules/dutch/components/User/SelectUserListTag.tsx","modules/dutch/components/User/SelectUserList.tsx","modules/dutch/components/Payment/PaymentTable.tsx","modules/dutch/containers/PaymentListContainer.tsx","modules/dutch/containers/UserListContainer.tsx","modules/dutch/containers/DutchContainer.tsx","modules/dutch/hooks/useUserList.tsx","modules/shared/components/layout/Aside.tsx","modules/shared/components/layout/Footer.tsx","modules/shared/components/layout/Header.tsx","modules/shared/components/layout/Sidebar.tsx","modules/dutch/pages/templates/DutchPageTemplate.tsx","modules/shared/routes.ts","modules/dutch/pages/DutchPage.tsx","styles/GlobalStyle.ts","styles/theme/theme.ts","App.tsx","index.tsx"],"names":["CalculateContainer","userList","paymentList","useState","allPaymentTotal","setAllPaymentTotal","allTossList","setAllTossList","calculateList","setCalculateList","initialList","useMemo","map","item","userName","reduce","o","key","Object","assign","paymentTotal","tossList","useEffect","keys","length","userPayment","console","log","payment","paymentPrice","participants","payerName","perPersonPayment","payerInfo","participant","participantInfo","differencePrice","totalPrice","user","payer","floorToss","Math","floor","StyledTitle","StyledPayment","toLocaleString","StyledDesc","StyledUl","index","tossTotal","sum","StyledLi","StyledPayerInfo","StyledPlayer","StyledTossUl","StyledTossLi","StyledGiveMe","StyledTossPayer","StyledTossPrice","StyledTotalPrice","styled","div","span","ul","li","StepHeader","title","description","StyledContainer","StyledDescription","h3","TemplateOptions","StyledButton","theme","layout","section","button","color","point","initialPaymentItem","replace","c","r","random","toString","usePaymentList","setPaymentList","addPayment","updateParticipants","value","items","updatePayerName","selectedUser","updatePaymentPrice","parseInt","formatNumber","updateTitle","Option","Select","SelectUser","placeholder","onChange","style","width","tagColors","SelectUserList","mode","changeSelect","getTagColor","customTag","filteredUser","filter","tagColor","options","label","tagRender","closable","onClose","SelectUserListTag","PaymentTable","columns","align","dataIndex","render","record","StyledInput","maxLength","e","target","sorter","dataSource","footer","StyledFooter","onClick","PlusCircleOutlined","rowKey","input","borderColor","PaymentListContainer","StyledSection","StyledPaymentUl","StyledPaymentLi","StyledPaymentTitle","StyledPaymentPayerName","StyledPaymentPrice","StyledPaymentParticipants","showArrow","UserListContainer","addUser","removeUser","includes","DutchContainer","setUserList","localUserList","localStorage","getItem","JSON","parse","setItem","stringify","prevState","filterList","useUserList","Aside","StyledAside","Footer","Header","StyledHeader","header","Sidebar","StyledSidebar","DutchPageTemplate","children","StyledTemplate","StyledWrap","routes","component","path","GlobalStyle","createGlobalStyle","reset","breakpoint","borderRadius","mediaQuery","lg","md","sm","xl","xs","App","fallback","minHeight","route","ReactDOM","document","getElementById"],"mappings":"o7DAqBO,IAAMA,EAAgC,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAAkB,EAC5BC,mBAAS,GADmB,mBACnEC,EADmE,KAClDC,EADkD,OAEpCF,mBAAkB,IAFkB,mBAEnEG,EAFmE,KAEtDC,EAFsD,OAGhCJ,mBAAuB,IAHS,mBAGnEK,EAHmE,KAGpDC,EAHoD,KAIpEC,EAAcC,mBAClB,kBACEV,EACGW,KAAI,SAACC,GAAD,OAAUA,EAAKC,YACnBC,QACC,SAACC,EAAGC,GAAJ,OACEC,OAAOC,OAAOH,EAAdE,OAAA,IAAAA,CAAA,GACGD,EAAM,CACLG,aAAc,EACdC,SAAUpB,EAASc,QACjB,SAACC,EAAGC,GAAJ,OAAiBC,OAAOC,OAAOH,EAAdE,OAAA,IAAAA,CAAA,GAAoBD,EAAM,MAC3C,SAIR,MAEN,CAAChB,IA0DH,OAvDAqB,qBAAU,WACR,GAAKJ,OAAOK,KAAKb,GAAac,OAA9B,CAEA,IAAMC,EAA4Bf,EAC9BN,EAAkB,EAEtBsB,QAAQC,IAAIF,GAEZvB,EAAYU,KAAI,SAACgB,GAAa,IACpBC,EAA0CD,EAA1CC,aAAcC,EAA4BF,EAA5BE,aAAcC,EAAcH,EAAdG,UACpC,GAAKF,GAAiBE,GAAcD,EAAaN,OAAjD,CACA,IAAMQ,EAAmBH,EAAeC,EAAaN,OAC/CS,EAAYR,EAAYM,GAC9B3B,GAAmByB,EAEnBI,EAAUb,cAAgBS,EAE1BC,EAAalB,KAAI,SAACsB,GAChB,GAAIA,IAAgBH,EAApB,CAGA,IAAMI,EAAkBV,EAAYS,GAE9BE,EACJH,EAAUZ,SAASa,GAAeF,EAChCI,GAAmB,EACrBH,EAAUZ,SAASa,GAAeE,GAElCH,EAAUZ,SAASa,GAAe,EAClCC,EAAgBd,SAASU,KAAeK,WAI9C3B,EAAiBgB,GACjBpB,EAAmBD,MAClB,CAACF,EAAaQ,IAEjBY,qBAAU,WACR,IAAMhB,EAAuB,CAAE+B,WAAY,GAE3CpC,EAASW,KAAI,SAAC0B,GACZpB,OAAOK,KAAKf,GAAeI,KAAI,SAAC2B,GAC9B,IAAMC,EAAYC,KAAKC,MACrBlC,EAAc+B,GAAOlB,SAASiB,EAAKxB,WAErCR,EAAW,YAAkBkC,EAC7BlC,EAAYgC,EAAKxB,UAAYR,EAAYgC,EAAKxB,UAC1CR,EAAYgC,EAAKxB,UAAY0B,EAC7BA,QAIRjC,EAAeD,KACd,CAACE,IAGF,qCACE,eAACmC,EAAD,2CAEE,eAACC,EAAD,WACGxC,EAAgByC,iBADnB,MACwC5C,EAASuB,OADjD,UAEIpB,EAAkBH,EAASuB,QAAQqB,iBAFvC,eAKF,cAACC,EAAD,uLAGA,cAACC,EAAD,UACG7B,OAAOK,KAAKf,GAAeI,KAAI,SAAC2B,EAAOS,GAAW,IAAD,EACbxC,EAAc+B,GAAzCnB,EADwC,EACxCA,aAAcC,EAD0B,EAC1BA,SAChB4B,EAAY/B,OAAOK,KAAKF,GAAUN,QACtC,SAACmC,EAAKjC,GAAN,OAAciC,EAAMT,KAAKC,MAAMrB,EAASJ,IAAQ,KAChD,GAGF,OACE,eAACkC,EAAD,WACE,eAACC,EAAD,WACE,cAACC,EAAD,UAAed,IACf,eAACK,EAAD,0CACWxB,EAAayB,iBADxB,uCACqD,IAClDI,EAAUJ,iBAFb,8CAE4C,KAExCzB,EACA6B,GACC3C,EAAYiC,IAAU,IACvBM,iBAPJ,eAYF,cAACS,EAAD,UACGpC,OAAOK,KAAKF,GAAUT,KAAI,SAACsB,EAAac,GAAd,OACzB3B,EAASa,GACP,eAACqB,EAAD,WACGhB,EADH,OACiBL,EADjB,SAEGO,KAAKC,MAAMrB,EAASa,IAAcW,iBAFrC,WAAmBG,GAIjB,YAtBKA,QA6BpB9B,OAAOK,KAAKjB,GAAakB,OAAS,EACjC,qCACE,eAACmB,EAAD,mEAEE,cAACG,EAAD,6GAEF,cAACU,EAAD,UACE,eAACF,EAAD,WACGpC,OAAOK,KAAKf,GAAeI,KAAI,SAAC2B,EAAOS,GAAW,IAAD,EACbxC,EAAc+B,GAA3BlB,GAD0B,EACxCD,aADwC,EAC1BC,UAChB4B,EAAY/B,OAAOK,KAAKF,GAAUN,QACtC,SAACmC,EAAKjC,GAAN,OAAciC,EAAMT,KAAKC,MAAMrB,EAASJ,IAAQ,KAChD,GAEF,OACE,eAACsC,EAAD,WACE,eAACE,EAAD,WAAkBlB,EAAlB,QACA,eAACmB,EAAD,WACGT,EAAUJ,iBADb,cAFiBG,MAQvB,eAACO,EAAD,WACE,cAACE,EAAD,sBACA,eAACC,EAAD,WACGpD,EAAW,WAAeuC,iBAD7B,oBAMN,8BACE,cAACS,EAAD,UACGpC,OAAOK,KAAKjB,GAAaM,KAAI,SAAC2B,EAAOS,GAAR,MAClB,eAAVT,GAAiD,IAAvBjC,EAAYiC,GACpC,eAACgB,EAAD,WACGhB,EADH,iBAEE,cAACoB,EAAD,UACGrD,EAAYiC,GAAOM,mBAHxB,+CAAmBG,GAOjB,eAKV,SAKJQ,EAAeI,IAAOC,IAAV,KAUZlB,EAAciB,IAAOC,IAAV,KAKXT,EAAkBQ,IAAOC,IAAV,KAGfR,EAAeO,IAAOE,KAAV,KAIZlB,EAAgBgB,IAAOE,KAAV,KAKbhB,EAAac,IAAOC,IAAV,KAKVd,EAAWa,IAAOG,GAAV,KAGRZ,EAAWS,IAAOI,GAAV,KASRV,EAAeM,IAAOG,GAAV,KAIZR,EAAeK,IAAOI,GAAV,KAKZL,EAAmBC,IAAOE,KAAV,KAOhBL,EAAkBG,IAAOE,KAAV,KAIfJ,EAAkBE,IAAOE,KAAV,K,8YCnQd,IAAMG,EAAwB,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YAC7C,OACE,eAACC,EAAD,WACE,cAAC,EAAD,UAAcF,IACbC,GAAe,cAACE,EAAD,UAAoBF,QAIpCC,EAAkBR,IAAOC,IAAV,KAIflB,EAAciB,IAAOU,GAAV,KAKXD,EAAoBT,IAAOE,KAAV,K,yIClBCF,IAAOC,IAAV,K,kTCHd,IAAMU,EAAsB,WACjC,OACE,cAAC,EAAD,UACE,cAACC,EAAD,0CAIAJ,EAAkBR,IAAOC,IAAV,KACjB,qBAAGY,MAAkBC,OAAOC,WAK1BH,EAAeZ,IAAOgB,OAAV,KAII,qBAAGH,MAAkBI,MAAMC,S,SCTpCC,GAAqB,iBAAoB,CACpD9D,ICXO,uBAAuB+D,QAAQ,SAAS,SAAUC,GACvD,IAAMC,EAAqB,GAAhBzC,KAAK0C,SAAiB,EAEjC,OADW,KAALF,EAAWC,EAAS,EAAJA,EAAW,GACxBE,SAAS,ODSpBtD,aAAc,GACdC,UAAW,GACXF,aAAc,EACdqC,MAAO,KAGImB,GAAiB,WAAO,IAAD,EACIlF,mBAAwB,IAD5B,mBAC3BD,EAD2B,KACdoF,EADc,KAGlChE,qBAAU,WACHpB,EAAYsB,QACf8D,EAAe,CAACP,SAEjB,IA0BH,MAAO,CACLQ,WAzBiB,WACjBD,EAAe,GAAD,oBAAKpF,GAAL,CAAkB6E,SAyBhC7E,cACAsF,mBATyB,SAACC,EAAiBzC,GAC3C,IAAM0C,EAAK,aAAOxF,GAClBwF,EAAM1C,GAAN,aAA+ByC,EAC/BH,EAAeI,IAOfC,gBAfsB,SAACC,EAAsB5C,GAC7C,IAAM0C,EAAK,aAAOxF,GAClBwF,EAAM1C,GAAN,UAA4B4C,EAC5BN,EAAeI,IAafG,mBArByB,SAACJ,EAAezC,GACzC,IAAM0C,EAAK,aAAOxF,GAClBwF,EAAM1C,GAAN,aC9BwB,SAACyC,GAC3B,OAAOK,SAASL,EAAMT,QAAQ,UAAW,KD6BRe,CAAaN,GAC5CH,EAAeI,IAmBfM,YA3BkB,SAACP,EAAezC,GAClC,IAAM0C,EAAK,aAAOxF,GAClBwF,EAAM1C,GAAN,MAAwByC,EACxBH,EAAeI,M,6BEtBXO,GAAWC,KAAXD,OACKE,GAAwB,SAAC,GAK/B,IAJLC,EAII,EAJJA,YACAX,EAGI,EAHJA,MACAxF,EAEI,EAFJA,SACAoG,EACI,EADJA,SAEA,OACE,cAAC,KAAD,CACED,YAAaA,EACbE,MAAO,CAAEC,MAAO,QAChBd,MAAOA,EACPY,SAAUA,EAJZ,SAMGpG,EAASW,KAAI,SAAC0B,EAAMU,GAAP,OACZ,cAACiD,GAAD,CAAoBR,MAAOnD,EAAKxB,SAAhC,SACGwB,EAAKxB,UADKkC,S,UCvBRwD,GAAY,CACvB,OACA,MACA,SACA,OACA,QACA,OACA,SACA,WACA,UACA,UACA,OACA,OACA,UACA,aACA,QACA,UACA,WCPWC,GAA4B,SAAC,GAMnC,IAAD,IALJC,YAKI,MALG,OAKH,EAJJjB,EAII,EAJJA,MACAxF,EAGI,EAHJA,SACAmG,EAEI,EAFJA,YACAO,EACI,EADJA,aAEMC,EAAc,SAACC,GACnB,IAAMC,EAAe7G,EAAS8G,QAC5B,SAACzE,GAAD,OAAUA,EAAKxB,WAAa+F,EAAUpB,SAExC,OAAIqB,EAAatF,OACRsF,EAAa,GAAGE,SAElB,MAGT,OACE,cAAC,KAAD,CACEN,KAAMA,EACNO,QAAShH,EAASW,KAAI,SAAC0B,GAAD,MAAW,CAC/B4E,MAAO5E,EAAKxB,SACZ2E,MAAOnD,EAAKxB,aAEdsF,YAAaA,EACbE,MAAO,CACLC,MAAO,QAETY,UAAW,SAACN,GAAD,ODfgB,SAAC,GAKpB,IAJZG,EAIW,EAJXA,SACAvB,EAGW,EAHXA,MACA2B,EAEW,EAFXA,SACAC,EACW,EADXA,QAEA,OAAKL,EAIH,cAAC,KAAD,CAASI,SAAUA,EAAUvC,MAAOmC,EAAUK,QAASA,EAAvD,SACG5B,IAJI,6BCSH6B,CAAkB,2BACbT,GADY,IAEfG,SAAUJ,EAAYC,OAG1BpB,MAAOA,EACPY,SAAUM,K,mpBChCT,IAAMY,GAA0B,SAAC,GASjC,IARLrH,EAQI,EARJA,YACAD,EAOI,EAPJA,SACAsF,EAMI,EANJA,WACAS,EAKI,EALJA,YACAH,EAII,EAJJA,mBACAF,EAGI,EAHJA,gBACAH,EAEI,EAFJA,mBAGMgC,EAAU,CACd,CACEC,MAAO,SACPC,UAAW,QACXzG,IAAK,QACL0G,OAAQ,SAACzD,EAAe0D,EAAqB5E,GAArC,OACN,cAAC6E,GAAD,CACEC,UAAW,GACX1B,YAAY,qBACZX,MAAOvB,EACPmC,SAAU,SAAC0B,GAAD,OAAO/B,EAAY+B,EAAEC,OAAOvC,MAAOzC,OAGjDiF,QAAQ,EACR/D,MAAO,qBACPqC,MAAO,KAET,CACEkB,MAAO,SACPC,UAAW,eACXC,OAAQ,SAAC9F,EAAsB+F,EAAqB5E,GAA5C,OACN,cAAC6E,GAAD,CACEpC,MAAO5D,EAAagB,iBACpBwD,SAAU,SAAC0B,GAAD,OAAOlC,EAAmBkC,EAAEC,OAAOvC,MAAOzC,OAGxDiF,QAAQ,EACR/D,MAAO,4BACPqC,MAAO,KAET,CACEkB,MAAO,SACPC,UAAW,YACXzG,IAAK,YACL0G,OAAQ,SAAC5F,EAAmB6F,EAAqB5E,GAAzC,OACN,cAAC,GAAD,CACEoD,YAAY,qBACZnG,SAAUA,EACVwF,MAAO1D,EACPsE,SAAU,SAACZ,GAAD,OAAWE,EAAgBF,EAAOzC,OAGhDiF,QAAQ,EACR/D,MAAO,qBACPqC,MAAO,KAET,CACEkB,MAAO,SACPC,UAAW,eACXzG,IAAK,eACL0G,OAAQ,SAAC7F,EAAwB8F,EAAqB5E,GAA9C,OACN,cAAC,GAAD,CACE2D,aAAc,SAAC7E,GAAD,OACZ0D,EAAmB1D,EAAckB,IAEnC0D,KAAK,WACLN,YAAY,qBACZnG,SAAUA,EACVwF,MAAO3D,KAGXoC,MAAO,uBAUX,OACE,cAAC,GAAD,UACE,cAAC,KAAD,CACEsD,QAASA,EACTU,WAAYhI,EACZiI,OAXS,kBACb,eAACC,GAAD,CAAcC,QAAS9C,EAAvB,UACE,cAAC+C,GAAA,EAAD,IADF,iCAWIC,OAAQ,SAACX,GAAD,OAAYA,EAAO3G,UAK7BmD,GAAkBR,IAAOC,IAAV,MAQfuE,GAAexE,IAAOgB,OAAV,MAWZiD,GAAcjE,IAAO4E,MAAV,MAEK,qBAAG/D,MAAkBI,MAAM4D,eAK5B7E,IAAOgB,OAAV,M,khCCrHX,IAAM8D,GAAkC,SAAC,GAQzC,IAPLzI,EAOI,EAPJA,SACAC,EAMI,EANJA,YACAqF,EAKI,EALJA,WACAS,EAII,EAJJA,YACAH,EAGI,EAHJA,mBACAF,EAEI,EAFJA,gBACAH,EACI,EADJA,mBAEA,OACE,eAACmD,GAAD,WACE,cAAC,EAAD,CAAYxE,YAAY,wCAAUD,MAAM,UACxC,cAAC,GAAD,CACEqB,WAAYA,EACZrF,YAAaA,EACbsF,mBAAoBA,EACpBG,gBAAiBA,EACjBE,mBAAoBA,EACpBG,YAAaA,EACb/F,SAAUA,IAGZ,cAAC2I,GAAD,UACG1I,EAAYU,KAAI,SAACgB,EAASoB,GAAV,OACf,eAAC6F,GAAD,WACE,cAACC,GAAD,UAAqBlH,EAAQsC,QAC7B,cAAC6E,GAAD,UAAyBnH,EAAQG,YACjC,eAACiH,GAAD,WACGpH,EAAQC,aAAagB,iBADxB,YAGA,cAACoG,GAAD,UACE,cAAC,KAAD,CACEvC,KAAK,WACLO,QAASrF,EAAQE,aAAalB,KAAI,SAACsB,EAAac,GAAd,MAAyB,CACzDkE,MAAOlE,EACPyC,MAAOvD,MAEToE,MAAO,CAAEC,MAAO,QAEhBd,MAAO7D,EAAQE,aACfoH,WAAS,QAhBOlG,YA0B1B2F,GAAgB/E,IAAOe,QAAV,MACf,qBAAGF,MAAkBC,OAAOC,WAG1BiE,GAAkBhF,IAAOG,GAAV,MAGf8E,GAAkBjF,IAAOI,GAAV,MASf8E,GAAqBlF,IAAOE,KAAV,MAKlBiF,GAAyBnF,IAAOE,KAAV,MAOtBkF,GAAqBpF,IAAOE,KAAV,MAOlBmF,GAA4BrF,IAAOE,KAAV,M,6eC1FxB,IAAMqF,GAA+B,SAAC,GAItC,IAHLlJ,EAGI,EAHJA,SACAmJ,EAEI,EAFJA,QACAC,EACI,EADJA,WAgBA,OACE,eAAC,GAAD,WACE,cAAC,EAAD,CAAYlF,YAAY,kCAASD,MAAM,UACvC,cAAC,GAAD,CACEyC,aAlBe,SAAClB,GACpB,GAAIA,EAAMjE,OAASvB,EAASuB,OAC1B4H,EAAQ,CACNpC,SAAUR,GAAU/D,KAAKC,MAAMD,KAAK0C,SAAWqB,GAAUhF,SACzDV,SAAU2E,EAAMA,EAAMjE,OAAS,SAE5B,CACL,IAAMsF,EAAe7G,EAAS8G,QAC5B,SAACzE,GAAD,OAAWmD,EAAM6D,SAAShH,EAAKxB,aAEjCuI,EAAWvC,EAAa,GAAGhG,YASzBsF,YAAY,qBACZnG,SAAUA,EACVwF,MAAOxF,EAASW,KAAI,SAAC0B,GAAD,OAAUA,EAAKxB,kBAKrC6H,GAAgB/E,IAAOe,QAAV,MACf,qBAAGF,MAAkBC,OAAOC,W,uECpCzB,IAAM4E,GAAqB,WAAO,IAAD,ECEb,WAAO,IAAD,EACCpJ,mBAAqB,IADtB,mBACxBF,EADwB,KACduJ,EADc,KA6B/B,OA1BAlI,qBAAU,WACR,IAAMmI,EAAgBC,aAAaC,QAAQ,YACvCF,GACFD,EAAYI,KAAKC,MAAMJ,MAExB,IAEHnI,qBAAU,WACRoI,aAAaI,QAAQ,WAAYF,KAAKG,UAAU9J,MAC/C,CAACA,IAiBG,CACLmJ,QAhBc,SAAC,GAAqC,IAAnCtI,EAAkC,EAAlCA,SAAUkG,EAAwB,EAAxBA,SAC3BwC,GAAY,SAACQ,GAAD,6BACPA,GADO,CAEV,CACEhD,WACAlG,kBAYJuI,WAPiB,SAACvI,GAClB,IAAMmJ,EAAahK,EAAS8G,QAAO,SAACzE,GAAD,OAAUA,EAAKxB,WAAaA,KAC/D0I,EAAYS,IAMZhK,YDjCwCiK,GAAlCjK,EAD8B,EAC9BA,SAAUmJ,EADoB,EACpBA,QAASC,EADW,EACXA,WADW,EASlChE,KANFnF,EAHoC,EAGpCA,YACAqF,EAJoC,EAIpCA,WACAC,EALoC,EAKpCA,mBACAG,EANoC,EAMpCA,gBACAE,EAPoC,EAOpCA,mBACAG,EARoC,EAQpCA,YAGF,OACE,eAAC,GAAD,WACE,cAAC,EAAD,IACA,cAAC,GAAD,CACEoD,QAASA,EACTC,WAAYA,EACZpJ,SAAUA,IAEZ,cAAC,GAAD,CACEsF,WAAYA,EACZrF,YAAaA,EACbsF,mBAAoBA,EACpBG,gBAAiBA,EACjBE,mBAAoBA,EACpBG,YAAaA,EACb/F,SAAUA,IAEZ,cAAC,EAAD,CAAoBC,YAAaA,EAAaD,SAAUA,QAIxDmE,GAAkBR,IAAOC,IAAV,M,oHEtCd,IAAMsG,GAAkB,WAC7B,OAAO,cAACC,GAAD,KAGHA,GAAcxG,IAAOC,IAAV,M,oHCJV,IAAMwG,GAAmB,WAC9B,OAAO,cAAC,GAAD,uCAGHjC,GAAexE,IAAOuE,OAAV,M,oLCJX,IAAMmC,GAAmB,WAC9B,OAAO,cAACC,GAAD,yBAGHA,GAAe3G,IAAO4G,OAAV,MAIF,qBAAG/F,MAAkBI,MAAMC,S,oHCRpC,IAAM2F,GAAoB,WAC/B,OAAO,cAACC,GAAD,KAGHA,GAAgB9G,IAAOe,QAAV,M,+TCGZ,IAAMgG,GAAwB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACtC,OACE,eAACC,GAAD,WACE,cAAC,GAAD,IACA,eAACC,GAAD,WACE,cAAC,GAAD,IACA,cAAC,GAAD,UAAgBF,IAChB,cAAC,GAAD,OAEF,cAAC,GAAD,QAKAC,GAAiBjH,IAAOC,IAAV,MACdiH,GAAalH,IAAOC,IAAV,MAMV8E,GAAgB/E,IAAOe,QAAV,MCzBNoG,GAAuB,CAClC,CACEC,UCHyB,WAC3B,OACE,cAAC,GAAD,UACE,cAAC,GAAD,ODCFC,KALW,M,moBEDf,IA+BeC,GA/BKC,YAAH,KACbC,MCJEC,GAAa,CAAC,IAAK,IAAK,IAAK,IAAK,MAsD3B5G,GAAQ,CACnBI,MAhBY,CACZ4D,YAAa,UACb3D,MAAO,WAePJ,OAba,CACb4G,aAAc,MACd3G,QAAQ,qIAYR4G,WAxDiB,CAMjBC,GAAG,iCAAD,OAAmCH,GAAW,GAA9C,KAOFI,GAAG,iCAAD,OAAmCJ,GAAW,GAA9C,KAOFK,GAAG,iCAAD,OAAmCL,GAAW,GAA9C,KAOFM,GAAG,iCAAD,OAAmCN,GAAW,GAA9C,KAOFO,GAAG,iCAAD,OAAmCP,GAAW,GAA9C,OCRWQ,OAjBf,WACE,OACE,qCACE,cAAC,GAAD,IACA,cAAC,IAAD,CAAepH,MAAOA,GAAtB,SACE,cAAC,WAAD,CAAUqH,SAAU,qBAAKxF,MAAO,CAAEyF,UAAW,WAA7C,SACE,cAAC,IAAD,UACGhB,GAAOnK,KAAI,SAACoL,EAAOhJ,GAAR,OACV,cAAC,IAAD,eAAuBgJ,GAAXhJ,gBCZ1BiJ,IAAStE,OACP,cAAC,IAAD,UACE,cAAC,GAAD,MAEFuE,SAASC,eAAe,W","file":"static/js/main.c439be74.chunk.js","sourcesContent":["import React, { FC, useEffect, useMemo, useState } from 'react';\nimport styled from 'styled-components';\n\nimport { PaymentItem, UserItem } from '../hooks';\n\ninterface Props {\n  userList: UserItem[];\n  paymentList: PaymentItem[];\n}\ninterface CalculateObj {\n  [key: string]: {\n    paymentTotal: number;\n    tossList: {\n      [key: string]: number;\n    };\n  };\n}\ninterface TossObj {\n  [key: string]: number;\n}\n\nexport const CalculateContainer: FC<Props> = ({ userList, paymentList }) => {\n  const [allPaymentTotal, setAllPaymentTotal] = useState(0);\n  const [allTossList, setAllTossList] = useState<TossObj>({});\n  const [calculateList, setCalculateList] = useState<CalculateObj>({});\n  const initialList = useMemo(\n    () =>\n      userList\n        .map((item) => item.userName)\n        .reduce(\n          (o, key: string) =>\n            Object.assign(o, {\n              [key]: {\n                paymentTotal: 0,\n                tossList: userList.reduce(\n                  (o, key: any) => Object.assign(o, { [key]: 0 }),\n                  {},\n                ),\n              },\n            }),\n          {},\n        ),\n    [userList],\n  );\n\n  useEffect(() => {\n    if (!Object.keys(initialList).length) return;\n\n    const userPayment: CalculateObj = initialList;\n    let allPaymentTotal = 0;\n\n    console.log(userPayment);\n\n    paymentList.map((payment) => {\n      const { paymentPrice, participants, payerName } = payment;\n      if (!paymentPrice || !payerName || !participants.length) return;\n      const perPersonPayment = paymentPrice / participants.length;\n      const payerInfo = userPayment[payerName];\n      allPaymentTotal += paymentPrice;\n\n      payerInfo.paymentTotal += paymentPrice;\n\n      participants.map((participant) => {\n        if (participant === payerName) {\n          return;\n        }\n        const participantInfo = userPayment[participant];\n\n        const differencePrice =\n          payerInfo.tossList[participant] - perPersonPayment;\n        if (differencePrice >= 0) {\n          payerInfo.tossList[participant] = differencePrice;\n        } else {\n          payerInfo.tossList[participant] = 0;\n          participantInfo.tossList[payerName] += -differencePrice;\n        }\n      });\n    });\n    setCalculateList(userPayment);\n    setAllPaymentTotal(allPaymentTotal);\n  }, [paymentList, initialList]);\n\n  useEffect(() => {\n    const allTossList: TossObj = { totalPrice: 0 };\n\n    userList.map((user) => {\n      Object.keys(calculateList).map((payer) => {\n        const floorToss = Math.floor(\n          calculateList[payer].tossList[user.userName],\n        );\n        allTossList['totalPrice'] += floorToss;\n        allTossList[user.userName] = allTossList[user.userName]\n          ? allTossList[user.userName] + floorToss\n          : floorToss;\n      });\n    });\n\n    setAllTossList(allTossList);\n  }, [calculateList]);\n\n  return (\n    <>\n      <StyledTitle>\n        결제 정보&nbsp;\n        <StyledPayment>\n          {allPaymentTotal.toLocaleString()} / {userList.length} =&nbsp;\n          {(allPaymentTotal / userList.length).toLocaleString()}원\n        </StyledPayment>\n      </StyledTitle>\n      <StyledDesc>\n        * 모든 결제를 더치페이 하지 않기 때문에 오차가 있을 수 있습니다.\n      </StyledDesc>\n      <StyledUl>\n        {Object.keys(calculateList).map((payer, index) => {\n          const { paymentTotal, tossList } = calculateList[payer];\n          const tossTotal = Object.keys(tossList).reduce(\n            (sum, key) => sum + Math.floor(tossList[key] || 0),\n            0,\n          );\n\n          return (\n            <StyledLi key={index}>\n              <StyledPayerInfo>\n                <StyledPlayer>{payer}</StyledPlayer>\n                <StyledPayment>\n                  결제 금액 : {paymentTotal.toLocaleString()}원 / 송금 금액 :{' '}\n                  {tossTotal.toLocaleString()}원 / 총 여행 경비 :{' '}\n                  {(\n                    paymentTotal +\n                    tossTotal -\n                    (allTossList[payer] || 0)\n                  ).toLocaleString()}\n                  원\n                </StyledPayment>\n              </StyledPayerInfo>\n\n              <StyledTossUl>\n                {Object.keys(tossList).map((participant, index) =>\n                  tossList[participant] ? (\n                    <StyledTossLi key={index}>\n                      {payer} -&gt; {participant} :&nbsp;\n                      {Math.floor(tossList[participant]).toLocaleString()}원\n                    </StyledTossLi>\n                  ) : null,\n                )}\n              </StyledTossUl>\n            </StyledLi>\n          );\n        })}\n      </StyledUl>\n      {Object.keys(allTossList).length > 0 ? (\n        <>\n          <StyledTitle>\n            한 번에 처리해볼까..?\n            <StyledDesc>* 한 명이 다 송금받아서 정산한다면?</StyledDesc>\n          </StyledTitle>\n          <StyledGiveMe>\n            <StyledTossUl>\n              {Object.keys(calculateList).map((payer, index) => {\n                const { paymentTotal, tossList } = calculateList[payer];\n                const tossTotal = Object.keys(tossList).reduce(\n                  (sum, key) => sum + Math.floor(tossList[key] || 0),\n                  0,\n                );\n                return (\n                  <StyledTossLi key={index}>\n                    <StyledTossPayer>{payer} :</StyledTossPayer>\n                    <StyledTossPrice>\n                      {tossTotal.toLocaleString()}원\n                    </StyledTossPrice>\n                  </StyledTossLi>\n                );\n              })}\n              <StyledTossLi>\n                <StyledTossPayer>Total :</StyledTossPayer>\n                <StyledTossPrice>\n                  {allTossList['totalPrice'].toLocaleString()}원\n                </StyledTossPrice>\n              </StyledTossLi>\n            </StyledTossUl>\n          </StyledGiveMe>\n          <div>\n            <StyledTossUl>\n              {Object.keys(allTossList).map((payer, index) =>\n                payer !== 'totalPrice' && allTossList[payer] !== 0 ? (\n                  <StyledTossLi key={index}>\n                    {payer}(이)가\n                    <StyledTotalPrice>\n                      {allTossList[payer].toLocaleString()}\n                    </StyledTotalPrice>\n                    &nbsp;원을 요청해요!\n                  </StyledTossLi>\n                ) : null,\n              )}\n            </StyledTossUl>\n          </div>\n        </>\n      ) : null}\n    </>\n  );\n};\n\nconst StyledGiveMe = styled.div`\n  color: #222;\n  border-top: 1px solid #dedede;\n  font-weight: bold;\n  padding: 10px 0px;\n  ul {\n    margin-top: 10px;\n    margin-left: 15px;\n  }\n`;\nconst StyledTitle = styled.div`\n  font-size: 22px;\n  color: #222;\n  font-weight: bold;\n`;\nconst StyledPayerInfo = styled.div`\n  margin-bottom: 10px;\n`;\nconst StyledPlayer = styled.span`\n  font-weight: bold;\n  font-size: 17px;\n`;\nconst StyledPayment = styled.span`\n  margin-left: 5px;\n  font-size: 14px;\n  color: #646464;\n`;\nconst StyledDesc = styled.div`\n  font-size: 13px;\n  color: #646464;\n  margin: 10px 0px;\n`;\nconst StyledUl = styled.ul`\n  padding: 0;\n`;\nconst StyledLi = styled.li`\n  padding: 10px 10px;\n  border-bottom: 1px solid #dedede;\n  list-style: none;\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\nconst StyledTossUl = styled.ul`\n  padding-left: 20px;\n`;\n\nconst StyledTossLi = styled.li`\n  margin-bottom: 5px;\n  font-size: 15px;\n  list-style-type: disc;\n`;\nconst StyledTotalPrice = styled.span`\n  width: 80px;\n  margin-left: 5px;\n  display: inline-block;\n  text-align: right;\n`;\n\nconst StyledTossPayer = styled.span`\n  display: inline-block;\n  width: 50px;\n`;\nconst StyledTossPrice = styled.span`\n  display: inline-block;\n  width: 100px;\n  text-align: right;\n`;\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\ninterface Props {\n  title: string;\n  description?: string;\n}\nexport const StepHeader: FC<Props> = ({ title, description }) => {\n  return (\n    <StyledContainer>\n      <StyledTitle>{title}</StyledTitle>\n      {description && <StyledDescription>{description}</StyledDescription>}\n    </StyledContainer>\n  );\n};\nconst StyledContainer = styled.div`\n  margin-bottom: 10px;\n  padding-bottom: 10px;\n`;\nconst StyledTitle = styled.h3`\n  display: inline-block;\n  font-size: 22px;\n  font-weight: bold;\n`;\nconst StyledDescription = styled.span`\n  display: inline-block;\n  margin-left: 15px;\n  font-size: 14px;\n`;\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\nexport const TemplateHeader: FC = ({ children }) => {\n  return <StyledContainer>{children}</StyledContainer>;\n};\nconst StyledContainer = styled.div`\n  margin-bottom: 50px;\n  font-size: 15px;\n  font-weight: bold;\n`;\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\nexport const TemplateOptions: FC = () => {\n  return (\n    <StyledContainer>\n      <StyledButton>저장하기</StyledButton>\n    </StyledContainer>\n  );\n};\nconst StyledContainer = styled.div`\n  ${({ theme }) => theme.layout.section};\n  display: flex;\n  flex-direction: row;\n  text-align: right;\n`;\nconst StyledButton = styled.button`\n  padding: 10px 20px;\n  background: none;\n  margin-left: auto;\n  border: 1px solid ${({ theme }) => theme.color.point};\n`;\n","import { useEffect, useState } from 'react';\n\nimport { formatNumber, uuidv4 } from '../../../utils';\nexport interface PaymentItem {\n  key: string;\n  title: string;\n  paymentPrice: number;\n  payerName: string;\n  participants: string[];\n}\n\nexport const initialPaymentItem = (): PaymentItem => ({\n  key: uuidv4(),\n  participants: [],\n  payerName: '',\n  paymentPrice: 0,\n  title: '',\n});\n\nexport const usePaymentList = () => {\n  const [paymentList, setPaymentList] = useState<PaymentItem[]>([]);\n\n  useEffect(() => {\n    if (!paymentList.length) {\n      setPaymentList([initialPaymentItem()]);\n    }\n  }, []);\n\n  const addPayment = () => {\n    setPaymentList([...paymentList, initialPaymentItem()]);\n  };\n  const updateTitle = (value: string, index: number) => {\n    const items = [...paymentList];\n    items[index]['title'] = value;\n    setPaymentList(items);\n  };\n  const updatePaymentPrice = (value: string, index: number) => {\n    const items = [...paymentList];\n    items[index]['paymentPrice'] = formatNumber(value);\n    setPaymentList(items);\n  };\n  const updatePayerName = (selectedUser: string, index: number) => {\n    const items = [...paymentList];\n    items[index]['payerName'] = selectedUser;\n    setPaymentList(items);\n  };\n  const updateParticipants = (value: string[], index: number) => {\n    const items = [...paymentList];\n    items[index]['participants'] = value;\n    setPaymentList(items);\n  };\n\n  return {\n    addPayment,\n    paymentList,\n    updateParticipants,\n    updatePayerName,\n    updatePaymentPrice,\n    updateTitle,\n  };\n};\n","export const uuidv4 = () => {\n  return 'xxxx-xxxx-xxxx-xxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0,\n      v = c == 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n\nexport const formatNumber = (value: string): number => {\n  return parseInt(value.replace(/[^0-9]/g, ''));\n};\n","import { Select } from 'antd';\nimport React, { FC } from 'react';\n\nimport { UserItem } from '../../hooks';\n\ninterface Props {\n  userList: UserItem[];\n  value: string;\n  placeholder: string;\n  onChange(value: string): void;\n}\n\nconst { Option } = Select;\nexport const SelectUser: FC<Props> = ({\n  placeholder,\n  value,\n  userList,\n  onChange,\n}) => {\n  return (\n    <Select\n      placeholder={placeholder}\n      style={{ width: '100%' }}\n      value={value}\n      onChange={onChange}\n    >\n      {userList.map((user, index) => (\n        <Option key={index} value={user.userName}>\n          {user.userName}\n        </Option>\n      ))}\n    </Select>\n  );\n};\n","import { Tag as AntdTag } from 'antd';\nimport { CustomTagProps } from 'rc-select/lib/interface/generator';\nimport React from 'react';\n\nexport const tagColors = [\n  'pink',\n  'red',\n  'orange',\n  'cyan',\n  'green',\n  'blue',\n  'purple',\n  'geekblue',\n  'magenta',\n  'volcano',\n  'gold',\n  'lime',\n  'success',\n  'processing',\n  'error',\n  'default',\n  'warning',\n];\n\ninterface Props extends CustomTagProps {\n  tagColor: string | null;\n}\nexport const SelectUserListTag = ({\n  tagColor,\n  value,\n  closable,\n  onClose,\n}: Props) => {\n  if (!tagColor) {\n    return <></>;\n  }\n  return (\n    <AntdTag closable={closable} color={tagColor} onClose={onClose}>\n      {value}\n    </AntdTag>\n  );\n};\n","import { Select } from 'antd';\nimport { CustomTagProps } from 'rc-select/lib/interface/generator';\nimport React, { FC } from 'react';\n\nimport { UserItem } from '../../hooks';\nimport { SelectUserListTag } from './SelectUserListTag';\n\ninterface Props {\n  userList: UserItem[];\n  value: string[];\n  mode?: 'tags' | 'multiple';\n  placeholder?: string;\n  changeSelect(value: string[]): void;\n}\nexport const SelectUserList: FC<Props> = ({\n  mode = 'tags',\n  value,\n  userList,\n  placeholder,\n  changeSelect,\n}) => {\n  const getTagColor = (customTag: CustomTagProps) => {\n    const filteredUser = userList.filter(\n      (user) => user.userName === customTag.value,\n    );\n    if (filteredUser.length) {\n      return filteredUser[0].tagColor;\n    }\n    return null;\n  };\n\n  return (\n    <Select\n      mode={mode}\n      options={userList.map((user) => ({\n        label: user.userName,\n        value: user.userName,\n      }))}\n      placeholder={placeholder}\n      style={{\n        width: '100%',\n      }}\n      tagRender={(customTag) =>\n        SelectUserListTag({\n          ...customTag,\n          tagColor: getTagColor(customTag),\n        })\n      }\n      value={value}\n      onChange={changeSelect}\n    />\n  );\n};\n","import { PlusCircleOutlined } from '@ant-design/icons';\nimport { Table } from 'antd';\nimport React, { FC } from 'react';\nimport styled from 'styled-components';\n\nimport { PaymentItem, UserItem } from '../../hooks';\nimport { SelectUser, SelectUserList } from '../User';\n\ninterface Props {\n  userList: UserItem[];\n  paymentList: PaymentItem[];\n  addPayment(): void;\n  updateTitle(value: string, index: number): void;\n  updatePaymentPrice(value: string, index: number): void;\n  updatePayerName(selectedUser: string, index: number): void;\n  updateParticipants(participants: string[], index: number): void;\n}\nexport const PaymentTable: FC<Props> = ({\n  paymentList,\n  userList,\n  addPayment,\n  updateTitle,\n  updatePaymentPrice,\n  updatePayerName,\n  updateParticipants,\n  // updatePayment,\n}) => {\n  const columns = [\n    {\n      align: 'center' as const,\n      dataIndex: 'title',\n      key: 'title',\n      render: (title: string, record: PaymentItem, index: number) => (\n        <StyledInput\n          maxLength={15}\n          placeholder=\"사용처\"\n          value={title}\n          onChange={(e) => updateTitle(e.target.value, index)}\n        />\n      ),\n      sorter: true,\n      title: '사용처',\n      width: 150,\n    },\n    {\n      align: 'center' as const,\n      dataIndex: 'paymentPrice',\n      render: (paymentPrice: number, record: PaymentItem, index: number) => (\n        <StyledInput\n          value={paymentPrice.toLocaleString()}\n          onChange={(e) => updatePaymentPrice(e.target.value, index)}\n        />\n      ),\n      sorter: true,\n      title: '지출 금액',\n      width: 150,\n    },\n    {\n      align: 'center' as const,\n      dataIndex: 'payerName',\n      key: 'payerName',\n      render: (payerName: string, record: PaymentItem, index: number) => (\n        <SelectUser\n          placeholder=\"결제자\"\n          userList={userList}\n          value={payerName}\n          onChange={(value) => updatePayerName(value, index)}\n        />\n      ),\n      sorter: true,\n      title: '결제자',\n      width: 150,\n    },\n    {\n      align: 'center' as const,\n      dataIndex: 'participants',\n      key: 'participants',\n      render: (participants: string[], record: PaymentItem, index: number) => (\n        <SelectUserList\n          changeSelect={(participants) =>\n            updateParticipants(participants, index)\n          }\n          mode=\"multiple\"\n          placeholder=\"참여자\"\n          userList={userList}\n          value={participants}\n        />\n      ),\n      title: '참여자',\n    },\n  ];\n\n  const Footer = () => (\n    <StyledFooter onClick={addPayment}>\n      <PlusCircleOutlined /> 항목 추가\n    </StyledFooter>\n  );\n\n  return (\n    <StyledContainer>\n      <Table\n        columns={columns}\n        dataSource={paymentList}\n        footer={Footer}\n        rowKey={(record) => record.key}\n      />\n    </StyledContainer>\n  );\n};\nconst StyledContainer = styled.div`\n  table {\n    table-layout: fixed;\n  }\n  .ant-table-footer {\n    padding: 0;\n  }\n`;\nconst StyledFooter = styled.button`\n  width: 100%;\n  padding: 15px;\n  text-align: center;\n  user-select: none;\n  cursor: pointer;\n  &:active,\n  &:hover {\n    opacity: 0.8;\n  }\n`;\nconst StyledInput = styled.input`\n  background: white;\n  border: 1px solid ${({ theme }) => theme.color.borderColor};\n  padding: 5px 10px;\n  border-radius: 5px;\n  width: 100%;\n`;\nconst StyledButton = styled.button`\n  padding: 5px 10px;\n`;\n","import { Select } from 'antd';\nimport React, { FC } from 'react';\nimport styled from 'styled-components';\n\nimport { StepHeader } from '../components/Layout';\nimport { PaymentTable } from '../components/Payment';\nimport { PaymentItem, UserItem } from '../hooks';\n\ninterface Props {\n  userList: UserItem[];\n  paymentList: PaymentItem[];\n  addPayment(): void;\n  updateTitle(value: string, index: number): void;\n  updatePaymentPrice(value: string, index: number): void;\n  updatePayerName(selectedUser: string, index: number): void;\n  updateParticipants(participants: string[], index: number): void;\n}\n\nexport const PaymentListContainer: FC<Props> = ({\n  userList,\n  paymentList,\n  addPayment,\n  updateTitle,\n  updatePaymentPrice,\n  updatePayerName,\n  updateParticipants,\n}) => {\n  return (\n    <StyledSection>\n      <StepHeader description=\"결제내역 입력\" title=\"Step2\" />\n      <PaymentTable\n        addPayment={addPayment}\n        paymentList={paymentList}\n        updateParticipants={updateParticipants}\n        updatePayerName={updatePayerName}\n        updatePaymentPrice={updatePaymentPrice}\n        updateTitle={updateTitle}\n        userList={userList}\n      />\n\n      <StyledPaymentUl>\n        {paymentList.map((payment, index) => (\n          <StyledPaymentLi key={index}>\n            <StyledPaymentTitle>{payment.title}</StyledPaymentTitle>\n            <StyledPaymentPayerName>{payment.payerName}</StyledPaymentPayerName>\n            <StyledPaymentPrice>\n              {payment.paymentPrice.toLocaleString()}원\n            </StyledPaymentPrice>\n            <StyledPaymentParticipants>\n              <Select\n                mode=\"multiple\"\n                options={payment.participants.map((participant, index) => ({\n                  label: index,\n                  value: participant,\n                }))}\n                style={{ width: '100%' }}\n                // tagRender={tagRender}\n                value={payment.participants}\n                showArrow\n              />\n            </StyledPaymentParticipants>\n          </StyledPaymentLi>\n        ))}\n      </StyledPaymentUl>\n    </StyledSection>\n  );\n};\n\nconst StyledSection = styled.section`\n  ${({ theme }) => theme.layout.section};\n`;\n\nconst StyledPaymentUl = styled.ul`\n  padding: 0;\n`;\nconst StyledPaymentLi = styled.li`\n  padding: 10px 10px;\n  border-bottom: 1px solid #dedede;\n  list-style: none;\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\nconst StyledPaymentTitle = styled.span`\n  display: inline-block;\n  font-weight: bold;\n  min-width: 200px;\n`;\nconst StyledPaymentPayerName = styled.span`\n  display: inline-block;\n  text-align: center;\n  width: 70px;\n  border-left: 1px solid #dedede;\n  border-right: 1px solid #dedede;\n`;\nconst StyledPaymentPrice = styled.span`\n  display: inline-block;\n  text-align: right;\n  width: 150px;\n  padding: 0px 15px;\n  border-right: 1px solid #dedede;\n`;\nconst StyledPaymentParticipants = styled.span`\n  display: inline-block;\n  margin-left: 10px;\n`;\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\nimport { StepHeader } from '../components/Layout';\nimport { SelectUserList, tagColors } from '../components/User';\nimport { AddUser, UserItem } from '../hooks';\n\ninterface Props {\n  userList: UserItem[];\n  addUser(obj: AddUser): void;\n  removeUser(userName: string): void;\n}\n\nexport const UserListContainer: FC<Props> = ({\n  userList,\n  addUser,\n  removeUser,\n}) => {\n  const changeSelect = (value: string[]) => {\n    if (value.length > userList.length) {\n      addUser({\n        tagColor: tagColors[Math.floor(Math.random() * tagColors.length)],\n        userName: value[value.length - 1],\n      });\n    } else {\n      const filteredUser = userList.filter(\n        (user) => !value.includes(user.userName),\n      );\n      removeUser(filteredUser[0].userName);\n    }\n  };\n\n  return (\n    <StyledSection>\n      <StepHeader description=\"참가자 입력\" title=\"Step1\" />\n      <SelectUserList\n        changeSelect={changeSelect}\n        placeholder=\"Please Select User\"\n        userList={userList}\n        value={userList.map((user) => user.userName)}\n      />\n    </StyledSection>\n  );\n};\nconst StyledSection = styled.section`\n  ${({ theme }) => theme.layout.section};\n\n  .ant-select {\n    width: 100%;\n    font-size: 15px;\n\n    .ant-select-selection-placeholder {\n      left: 22px;\n    }\n    .ant-select-selector {\n      padding: 10px 15px;\n    }\n    .ant-tag {\n      margin-right: 6px;\n      font-size: 15px;\n      padding: 5px 10px;\n    }\n    .ant-tag-close-icon {\n      font-size: 12px;\n      vertical-align: middle;\n      margin: -3px 0 0 9px;\n    }\n  }\n`;\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\nimport { TemplateOptions } from '../components/Layout';\nimport { usePaymentList, useUserList } from '../hooks';\nimport { CalculateContainer } from './CalculateContainer';\nimport { PaymentListContainer } from './PaymentListContainer';\nimport { UserListContainer } from './UserListContainer';\n\nexport const DutchContainer: FC = () => {\n  const { userList, addUser, removeUser } = useUserList();\n  const {\n    paymentList,\n    addPayment,\n    updateParticipants,\n    updatePayerName,\n    updatePaymentPrice,\n    updateTitle,\n  } = usePaymentList();\n\n  return (\n    <StyledContainer>\n      <TemplateOptions />\n      <UserListContainer\n        addUser={addUser}\n        removeUser={removeUser}\n        userList={userList}\n      />\n      <PaymentListContainer\n        addPayment={addPayment}\n        paymentList={paymentList}\n        updateParticipants={updateParticipants}\n        updatePayerName={updatePayerName}\n        updatePaymentPrice={updatePaymentPrice}\n        updateTitle={updateTitle}\n        userList={userList}\n      />\n      <CalculateContainer paymentList={paymentList} userList={userList} />\n    </StyledContainer>\n  );\n};\nconst StyledContainer = styled.div``;\n","import { useEffect, useState } from 'react';\n\nexport interface UserItem {\n  userName: string;\n  tagColor: string;\n}\nexport interface AddUser {\n  userName: string;\n  tagColor: string;\n}\n\nexport const useUserList = () => {\n  const [userList, setUserList] = useState<UserItem[]>([]);\n\n  useEffect(() => {\n    const localUserList = localStorage.getItem('userList');\n    if (localUserList) {\n      setUserList(JSON.parse(localUserList));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('userList', JSON.stringify(userList));\n  }, [userList]);\n\n  const addUser = ({ userName, tagColor }: AddUser) => {\n    setUserList((prevState) => [\n      ...prevState,\n      {\n        tagColor,\n        userName,\n      },\n    ]);\n  };\n\n  const removeUser = (userName: string) => {\n    const filterList = userList.filter((user) => user.userName !== userName);\n    setUserList(filterList);\n  };\n\n  return {\n    addUser,\n    removeUser,\n    userList,\n  };\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport const Aside: React.FC = () => {\n  return <StyledAside></StyledAside>;\n};\n\nconst StyledAside = styled.div`\n  flex: 0 0 200px;\n  padding: 10px 20px;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport const Footer: React.FC = () => {\n  return <StyledFooter>public.doriri@gmail.com</StyledFooter>;\n};\n\nconst StyledFooter = styled.footer`\n  padding: 10px 20px;\n  font-size: 20px;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport const Header: React.FC = () => {\n  return <StyledHeader>Dutch Pay</StyledHeader>;\n};\n\nconst StyledHeader = styled.header`\n  padding: 15px 20px;\n  font-size: 20px;\n  color: white;\n  background: ${({ theme }) => theme.color.point};\n  /* background: #333; */\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport const Sidebar: React.FC = () => {\n  return <StyledSidebar></StyledSidebar>;\n};\n\nconst StyledSidebar = styled.section`\n  flex: 0 0 200px;\n  padding: 10px 20px;\n`;\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\nimport {\n  Aside,\n  Footer,\n  Header,\n  Sidebar,\n} from '../../../shared/components/layout';\n\nexport const DutchPageTemplate: FC = ({ children }) => {\n  return (\n    <StyledTemplate>\n      <Header />\n      <StyledWrap>\n        <Sidebar />\n        <StyledSection>{children}</StyledSection>\n        <Aside />\n      </StyledWrap>\n      <Footer />\n    </StyledTemplate>\n  );\n};\n\nconst StyledTemplate = styled.div``;\nconst StyledWrap = styled.div`\n  display: flex;\n  flex-direction: row;\n  max-width: 1600px;\n  margin: 0 auto;\n`;\nconst StyledSection = styled.section`\n  flex: 1 1 auto;\n`;\n","import { RouteProps } from 'react-router-dom';\n\nimport { DutchPage } from '../dutch/pages';\n\nconst prefix = '/';\n\nexport const routes: RouteProps[] = [\n  {\n    component: DutchPage,\n    path: prefix,\n  },\n];\n","import React, { FC } from 'react';\n\nimport { DutchContainer } from '../containers';\nimport { DutchPageTemplate } from './templates';\n\nexport const DutchPage: FC = () => {\n  return (\n    <DutchPageTemplate>\n      <DutchContainer />\n    </DutchPageTemplate>\n  );\n};\n","import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nconst GlobalStyle = createGlobalStyle`\n  ${reset}\n  * {\n    box-sizing: border-box;\n  }\n  body{\n    background-color: #eaeaea;\n    font-family: -apple-system,system-ui,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif;\n  }\n  a {\n    color: inherit;\n    text-decoration: none;\n  }\n  input, button {\n    background-color: transparent;\n    border: none;\n    outline: none;\n  }\n  h1, h2, h3, h4, h5, h6{\n    font-family:'Maven Pro', sans-serif;\n  }\n  ol, ul, li {\n    list-style: none;\n  }\n  img {\n    display: block;\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nexport default GlobalStyle;\n","const breakpoint = [375, 414, 768, 960, 1280];\nconst mediaQuery = {\n  /**\n   * Large\n   * \\>= 960px\n   * @example 데스크탑\n   */\n  lg: `@media screen and (min-width: ${breakpoint[3]})`,\n\n  /**\n   * Medium\n   * \\>= 768px\n   * @example 태블릿\n   */\n  md: `@media screen and (min-width: ${breakpoint[2]})`,\n\n  /**\n   * Small\n   * \\>= 414px\n   * @example 큰 모바일 기기, iPhone 8 Plus, iPhone 11 XS Max\n   */\n  sm: `@media screen and (min-width: ${breakpoint[1]})`,\n\n  /**\n   * Extra large\n   * \\>= 1280px\n   * @example 고해상도 데스크탑\n   */\n  xl: `@media screen and (min-width: ${breakpoint[4]})`,\n\n  /**\n   * Extra small\n   * \\>= 375px\n   * @example 일반 모바일 기기, iPhone X\n   */\n  xs: `@media screen and (min-width: ${breakpoint[0]})`,\n  /* eslint-enable */\n};\n\nconst color = {\n  borderColor: '#d9d9d9',\n  point: '#743BE0',\n};\nconst layout = {\n  borderRadius: '5px',\n  section: `\n    margin: 20px 0px;\n    border: 1px solid #d1cad8;\n    padding: 20px;\n    border-radius: 10px;\n    background: white;\n  `,\n};\n\nexport const theme = {\n  color,\n  layout,\n  mediaQuery,\n};\n\nexport type Theme = typeof theme;\n\nexport default theme;\n","import 'antd/dist/antd.css';\n\nimport React, { Suspense } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\n\nimport { routes } from './modules/shared/routes';\nimport GlobalStyle from './styles/GlobalStyle';\nimport { theme } from './styles/theme';\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <ThemeProvider theme={theme}>\n        <Suspense fallback={<div style={{ minHeight: '100vh' }} />}>\n          <Switch>\n            {routes.map((route, index) => (\n              <Route key={index} {...route} />\n            ))}\n          </Switch>\n        </Suspense>\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}