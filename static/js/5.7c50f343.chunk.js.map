{"version":3,"sources":["modules/shared/components/Content/ContentHeader.tsx","modules/shared/components/Content/ContentWrap.tsx","modules/dutch/components/User/SelectUser.tsx","modules/dutch/components/User/SelectUserListTag.tsx","modules/dutch/components/User/SelectUserList.tsx","modules/dutch/components/Calculate/ManagerGetPriceItem.tsx","modules/dutch/components/Calculate/ManagerSendTab.tsx","modules/dutch/components/Calculate/PersonalSendTab.tsx","modules/dutch/components/Calculate/CalculateTabList.tsx","modules/dutch/components/Calculate/PersonalCalculate.tsx","modules/dutch/components/Calculate/TotalPayment.tsx","modules/dutch/components/Layout/StepHeader.tsx","modules/dutch/containers/CalculateContainer.tsx","modules/dutch/components/Payment/PaymentTable.tsx","modules/dutch/containers/PaymentListContainer.tsx","modules/dutch/components/Template/TemplateHeader.tsx","modules/dutch/containers/TemplateContainer.tsx","modules/dutch/containers/UserListContainer.tsx","modules/dutch/containers/DutchContainer.tsx","modules/dutch/pages/DutchPage.tsx","modules/shared/components/Navibar/TemplateAddButton.tsx","modules/shared/components/Navibar/TemplateList.tsx","modules/shared/components/Navibar/Navibar.tsx","modules/shared/containers/NavibarContainer.tsx","modules/dutch/pages/templates/DutchPageTemplate.tsx"],"names":["ContentHeader","children","props","StyledHeader","styled","div","ContentWrap","StyledContainer","StyledReponsiveContent","theme","color","linkColor","point","Option","Select","SelectUser","className","placeholder","value","userList","onChange","map","user","index","userName","tagColors","SelectUserList","mode","changeSelect","options","label","style","width","tagRender","customTag","tagColor","closable","onClose","SelectUserListTag","getTagColor","ManagerGetPriceItem","sendList","isHide","payer","tossTotal","useMemo","Object","keys","reduce","sum","key","Math","floor","StyledSendItem","StyledTag","StyledPrice","toLocaleString","li","Tag","ManagerSendTab","calculateList","calculateGetPriceList","useState","selectedUser","setSelectedUser","useEffect","length","find","item","StyledDesc","StyledTitle","StyledSelectUser","StyledSendList","StyledTossLi","StyledTotalPrice","githubColor","ul","span","PersonalSendTab","StyledTossUl","participant","TabPane","Tabs","CalculateTabList","StyledTabs","defaultActiveKey","tab","PersonalCalculate","StyledGrid","StyledPriceWrap","StyledPaymentTitle","Fragment","StyledPayment","paymentTotal","sumObjValue","TotalPaymentComponent","TotalPayment","memo","StepHeader","title","description","StyledDescription","h3","CalculateContainer","paymentList","setCalculateList","setcalculateGetPriceList","prev","curr","paymentPrice","payment","participants","payerName","perPersonPayment","payerInfo","partName","participantInfo","differencePrice","totalPrice","floorToss","StyledSection","StyledNoResult","section","layout","PaymentTable","addPayment","updateTitle","updatePaymentPrice","updatePayerName","updateParticipants","columns","align","dataIndex","render","record","StyledInput","maxLength","e","target","sorter","dataSource","footer","StyledFooter","onClick","PlusCircleOutlined","pagination","rowKey","id","button","input","borderColor","PaymentListContainer","dispatch","useDispatch","updateTemplatePaymentList","generatePaymentItem","items","formatNumber","TemplateHeader","templateName","editTemplateName","isEdit","setEditTemplateName","setIsEdit","onSave","onCancel","onDelete","message","error","Content","StyledIconWrap","CheckOutlined","CloseOutlined","DeleteOutlined","EditOutlined","TemplateContainer","navigation","useNavigate","template","useSelector","state","selectedId","templateList","filter","updateTemplateList","selectedTemplate","findIndex","UserListContainer","userItem","random","updateTemplateUserList","filteredUser","includes","deleteTemplateUser","DutchContainer","templateId","filterTemplate","updateSelectedId","DutchPage","useParams","TemplateAddButton","StyledLi","StyledButton","TemplateList","isActive","to","Navibar","onAddTemplate","StyledNavibar","StyledFixed","StyledInfo","StyledPageName","StyledAuthorName","StyledMenu","location","pathname","Link","NavibarContainer","storageTemplate","localStorage","getItem","storageTemplateList","JSON","parse","setTemplateList","addTemplate","createTemplate","DutchPageTemplate","StyledTemplate","StyledWrap"],"mappings":"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","file":"static/js/5.7c50f343.chunk.js","sourcesContent":["import React, { FC } from 'react';\nimport styled from 'styled-components';\n\nexport const ContentHeader: FC = ({ children, ...props }) => {\n  return <StyledHeader {...props}>{children}</StyledHeader>;\n};\nconst StyledHeader = styled.div`\n  display: flex;\n  margin: 8px 0px 20px;\n  font-size: 22px;\n  line-height: 22px;\n  font-weight: bold;\n  align-items: center;\n  color: rgb(74, 62, 86);\n`;\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\nexport const ContentWrap: FC = ({ children }) => {\n  return (\n    <StyledContainer>\n      <StyledReponsiveContent>{children}</StyledReponsiveContent>\n    </StyledContainer>\n  );\n};\nconst StyledContainer = styled.div`\n  background: white;\n  border: 1px solid rgb(209, 202, 216);\n  padding: 50px 20px;\n  border-radius: 5px;\n  margin: 20px 0px;\n\n  ul {\n    margin: 5px 0px 0px 40px;\n\n    li {\n      padding: 3px;\n      list-style: outside;\n      line-height: 1.5;\n    }\n  }\n  a {\n    color: ${({ theme }) => theme.color.linkColor};\n    font-weight: bold;\n    text-decoration: underline;\n  }\n  b,\n  strong {\n    font-weight: bold;\n  }\n  h1 {\n    font-size: 2.2857rem;\n    font-weight: bold;\n  }\n  h2 {\n    font-size: 1.6429rem;\n    margin: 60px 0px 20px 0px;\n    padding: 5px 15px;\n    border-left: 3px solid #5fad80;\n    font-weight: bold;\n  }\n  code {\n    font-weight: bold;\n    color: ${({ theme }) => theme.color.point} !important;\n  }\n  p {\n    font-size: 1.125rem;\n    line-height: 1.8;\n    margin: 20px 0px;\n    color: #131518;\n    letter-spacing: -0.004em;\n    word-break: keep-all;\n    overflow-wrap: break-word;\n  }\n\n  block {\n    display: block;\n    padding: 20px;\n  }\n\n  blockquote {\n    margin: 28px 0;\n    padding: 15px 28px;\n    border-left: 3px solid #f3cf00;\n\n    p {\n      margin: 0px;\n    }\n  }\n`;\nconst StyledReponsiveContent = styled.div`\n  max-width: 900px;\n  margin: 0 auto;\n`;\n","import { Select } from 'antd';\nimport React, { FC } from 'react';\n\nimport { UserItem } from '../../../../types';\n\ninterface Props {\n  className?: string;\n  userList: UserItem[];\n  value: string;\n  placeholder: string;\n  onChange(value: string): void;\n}\n\nconst { Option } = Select;\nexport const SelectUser: FC<Props> = ({\n  className,\n  placeholder,\n  value,\n  userList,\n  onChange,\n}) => {\n  return (\n    <Select\n      className={className}\n      placeholder={placeholder}\n      value={value}\n      onChange={onChange}\n    >\n      {userList.map((user, index) => (\n        <Option key={index} value={user.userName}>\n          {user.userName}\n        </Option>\n      ))}\n    </Select>\n  );\n};\n","import { Tag as AntdTag } from 'antd';\nimport { CustomTagProps } from 'rc-select/lib/interface/generator';\nimport React from 'react';\n\nexport const tagColors = [\n  'pink',\n  'red',\n  'orange',\n  'cyan',\n  'green',\n  'blue',\n  'purple',\n  'geekblue',\n  'magenta',\n  'volcano',\n  'gold',\n  'success',\n  'processing',\n  'error',\n  'default',\n  'warning',\n];\n\ninterface Props extends CustomTagProps {\n  tagColor: string | null;\n}\nexport const SelectUserListTag = ({\n  tagColor,\n  value,\n  closable,\n  onClose,\n}: Props) => {\n  if (!tagColor) {\n    return <></>;\n  }\n  return (\n    <AntdTag closable={closable} color={tagColor} onClose={onClose}>\n      {value}\n    </AntdTag>\n  );\n};\n","import { Select } from 'antd';\nimport React, { FC } from 'react';\n\nimport { UserItem } from '../../../../types';\nimport { getTagColor } from '../../../../utils';\nimport { SelectUserListTag } from './SelectUserListTag';\n\ninterface Props {\n  userList: UserItem[];\n  value: string[];\n  mode?: 'tags' | 'multiple';\n  placeholder?: string;\n  changeSelect(value: string[]): void;\n}\nexport const SelectUserList: FC<Props> = ({\n  mode = 'tags',\n  value,\n  userList,\n  placeholder,\n  changeSelect,\n}) => {\n  return (\n    <Select\n      mode={mode}\n      options={userList.map((user) => ({\n        label: user.userName,\n        value: user.userName,\n      }))}\n      placeholder={placeholder}\n      style={{\n        width: '100%',\n      }}\n      tagRender={(customTag) =>\n        SelectUserListTag({\n          ...customTag,\n          tagColor: getTagColor(userList, customTag?.value as string),\n        })\n      }\n      value={value}\n      onChange={changeSelect}\n    />\n  );\n};\n","import { Tag } from 'antd';\nimport React, { FC, useMemo } from 'react';\nimport styled from 'styled-components';\n\nimport { SendList } from '../../../../types';\n\ninterface Props {\n  sendList: SendList;\n  payer: string;\n  color: string;\n  isHide: boolean;\n}\nexport const ManagerGetPriceItem: FC<Props> = ({\n  sendList,\n  color,\n  isHide,\n  payer,\n}) => {\n  if (isHide) return null;\n  const tossTotal = useMemo(() => {\n    return Object.keys(sendList).reduce(\n      (sum, key) => sum + Math.floor(sendList[key] || 0),\n      0,\n    );\n  }, [sendList]);\n\n  if (tossTotal === 0) return null;\n\n  return (\n    <StyledSendItem>\n      <StyledTag color={color}>{payer}</StyledTag>\n      <StyledPrice>{tossTotal.toLocaleString()}원</StyledPrice>\n    </StyledSendItem>\n  );\n};\nconst StyledSendItem = styled.li`\n  display: flex;\n  align-items: center;\n  margin: 10px 0px;\n`;\nconst StyledTag = styled(Tag)`\n  font-size: 15px;\n  padding: 6px 20px;\n  text-align: center;\n  margin-right: 20px;\n  min-width: 110px;\n`;\nconst StyledPrice = styled.div`\n  display: inline-block;\n  min-width: 100px;\n  text-align: right;\n`;\n","import React, { FC, useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\nimport {\n  CalculateGetPriceItem,\n  CalculateItem,\n  UserItem,\n} from '../../../../types';\nimport { getTagColor } from '../../../../utils';\nimport { SelectUser } from '../User';\nimport { ManagerGetPriceItem } from './ManagerGetPriceItem';\n\ninterface Props {\n  userList: UserItem[];\n  calculateList: CalculateItem;\n  calculateGetPriceList: CalculateGetPriceItem;\n}\nexport const ManagerSendTab: FC<Props> = ({\n  userList,\n  calculateList,\n  calculateGetPriceList,\n}) => {\n  const [selectedUser, setSelectedUser] = useState('');\n\n  useEffect(() => {\n    if (userList.length) {\n      if (!userList.find((item) => item.userName === selectedUser)) {\n        setSelectedUser(userList[0].userName);\n      }\n    } else {\n      setSelectedUser('');\n    }\n  }, [userList]);\n\n  if (!Object.keys(calculateGetPriceList).length) {\n    return null;\n  }\n  return (\n    <StyledContainer>\n      <StyledDesc>\n        <b>일괄 송금이란?</b>\n        <br />\n        대표 한 명이 모든 송금 금액을 받아 결제자들에게 분할하는 방식입니다.\n        <br />\n        효율적으로 정산하여 각자 송금하는 방식보다 송금 횟수가 줄어듭니다.\n      </StyledDesc>\n      <StyledTitle>1. 대표자 선택</StyledTitle>\n      <StyledSelectUser\n        placeholder=\"대표자\"\n        userList={userList}\n        value={selectedUser}\n        onChange={(value) => setSelectedUser(value)}\n      />\n      <StyledTitle>2. 대표자에게 송금하기</StyledTitle>\n      <StyledDesc>\n        참가자들은 아래 금액만큼 <b>{selectedUser}</b>님에게 송금해주세요.\n        <br />\n        전체 송금 금액 : {calculateGetPriceList['totalPrice'].toLocaleString()}\n        원\n      </StyledDesc>\n      <StyledSendList>\n        {Object.keys(calculateList).map((payer, index) => (\n          <ManagerGetPriceItem\n            key={index}\n            color={getTagColor(userList, payer)}\n            isHide={payer === selectedUser}\n            payer={payer}\n            sendList={calculateList[payer].sendList}\n          />\n        ))}\n      </StyledSendList>\n\n      <StyledTitle>3. 결제자에게 송금하기</StyledTitle>\n      <StyledSendList>\n        {Object.keys(calculateGetPriceList).map((payer, index) =>\n          payer !== 'totalPrice' && calculateGetPriceList[payer] !== 0 ? (\n            <StyledTossLi key={index}>\n              {payer}님이\n              <StyledTotalPrice>\n                {calculateGetPriceList[payer].toLocaleString()}\n              </StyledTotalPrice>\n              &nbsp;원을 요청해요!\n            </StyledTossLi>\n          ) : null,\n        )}\n      </StyledSendList>\n    </StyledContainer>\n  );\n};\nconst StyledContainer = styled.div``;\nconst StyledDesc = styled.div`\n  font-size: 14px;\n  color: #646464;\n  margin: 10px 0px;\n\n  b {\n    font-weight: bold;\n  }\n`;\nconst StyledTitle = styled.div`\n  font-size: 20px;\n  color: ${({ theme }) => theme.color.githubColor};\n  font-weight: bold;\n  margin: 50px 0 15px;\n`;\nconst StyledSelectUser = styled(SelectUser)`\n  width: 200px;\n`;\nconst StyledSendList = styled.ul`\n  margin: 20px 0px;\n`;\nconst StyledTossLi = styled.li`\n  margin-bottom: 5px;\n  font-size: 15px;\n`;\nconst StyledTotalPrice = styled.span`\n  width: 80px;\n  margin-left: 5px;\n  display: inline-block;\n  text-align: right;\n`;\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\nimport { CalculateItem } from '../../../../types';\n\ninterface Props {\n  calculateList: CalculateItem;\n}\nexport const PersonalSendTab: FC<Props> = ({ calculateList }) => {\n  return (\n    <StyledContainer>\n      {Object.keys(calculateList).map((payer, index) => {\n        const { sendList } = calculateList[payer];\n        return (\n          <StyledTossUl key={index}>\n            {Object.keys(sendList).map((participant, index) =>\n              sendList[participant] ? (\n                <StyledTossLi key={index}>\n                  {payer} -&gt; {participant} :&nbsp;\n                  {Math.floor(sendList[participant]).toLocaleString()}원\n                </StyledTossLi>\n              ) : null,\n            )}\n          </StyledTossUl>\n        );\n      })}\n    </StyledContainer>\n  );\n};\nconst StyledContainer = styled.div``;\n\nconst StyledTossUl = styled.ul`\n  padding-left: 20px;\n`;\nconst StyledTossLi = styled.li`\n  margin-bottom: 5px;\n  font-size: 15px;\n  list-style-type: disc;\n`;\n","import { Tabs } from 'antd';\nimport React, { FC } from 'react';\n\nconst { TabPane } = Tabs;\n\nimport styled from 'styled-components';\n\nimport {\n  CalculateGetPriceItem,\n  CalculateItem,\n  UserItem,\n} from '../../../../types';\nimport { ManagerSendTab } from './ManagerSendTab';\nimport { PersonalSendTab } from './PersonalSendTab';\n\ninterface Props {\n  userList: UserItem[];\n  calculateList: CalculateItem;\n  calculateGetPriceList: CalculateGetPriceItem;\n}\nexport const CalculateTabList: FC<Props> = ({\n  userList,\n  calculateList,\n  calculateGetPriceList,\n}) => {\n  return (\n    <StyledContainer>\n      <StyledTabs defaultActiveKey=\"1\">\n        <TabPane key=\"1\" tab=\"일괄 송금\">\n          <ManagerSendTab\n            calculateGetPriceList={calculateGetPriceList}\n            calculateList={calculateList}\n            userList={userList}\n          />\n        </TabPane>\n        <TabPane key=\"2\" tab=\"각자 송금\">\n          <PersonalSendTab calculateList={calculateList} />\n        </TabPane>\n      </StyledTabs>\n    </StyledContainer>\n  );\n};\nconst StyledContainer = styled.div`\n  margin: 20px 0px;\n`;\nconst StyledTabs = styled(Tabs)`\n  .ant-tabs-nav-wrap {\n    justify-content: center;\n\n    .ant-tabs-ink-bar {\n      background: ${({ theme }) => theme.color.point} !important;\n    }\n  }\n  .ant-tabs-tab {\n    font-size: 17px;\n\n    &.ant-tabs-tab-active .ant-tabs-tab-btn {\n      color: ${({ theme }) => theme.color.point} !important;\n      font-weight: bold;\n    }\n  }\n`;\n","import { Tag } from 'antd';\nimport React, { FC } from 'react';\nimport styled from 'styled-components';\n\nimport {\n  CalculateGetPriceItem,\n  CalculateItem,\n  UserItem,\n} from '../../../../types';\nimport { getTagColor, sumObjValue } from '../../../../utils';\n\ninterface Props {\n  userList: UserItem[];\n  calculateList: CalculateItem;\n  calculateGetPriceList: CalculateGetPriceItem;\n}\nexport const PersonalCalculate: FC<Props> = ({\n  userList,\n  calculateList,\n  calculateGetPriceList,\n}) => {\n  return (\n    <StyledContainer>\n      <StyledGrid>\n        <div />\n        <StyledPriceWrap>\n          <StyledPaymentTitle>총 경비</StyledPaymentTitle>\n          <StyledPaymentTitle>결제한 금액</StyledPaymentTitle>\n          <StyledPaymentTitle>송금할 금액</StyledPaymentTitle>\n          <StyledPaymentTitle>받을 금액</StyledPaymentTitle>\n        </StyledPriceWrap>\n\n        {Object.keys(calculateList).map((payer, index) => (\n          <React.Fragment key={index}>\n            <StyledTag color={getTagColor(userList, payer)}>{payer}</StyledTag>\n            <StyledPriceWrap>\n              <StyledPayment>\n                {(\n                  calculateList[payer].paymentTotal +\n                  sumObjValue(calculateList[payer].sendList) -\n                  (calculateGetPriceList[payer] || 0)\n                ).toLocaleString()}\n                원\n              </StyledPayment>\n              <StyledPayment>\n                {calculateList[payer].paymentTotal.toLocaleString()}원\n              </StyledPayment>\n              <StyledPayment>\n                {sumObjValue(calculateList[payer].sendList).toLocaleString()}원\n              </StyledPayment>\n              <StyledPayment>\n                {(calculateGetPriceList[payer] || 0).toLocaleString()}원\n              </StyledPayment>\n            </StyledPriceWrap>\n          </React.Fragment>\n        ))}\n      </StyledGrid>\n    </StyledContainer>\n  );\n};\nconst StyledContainer = styled.div`\n  margin: 30px 0px;\n`;\nconst StyledGrid = styled.div`\n  display: grid;\n  gap: 10px 0;\n  align-items: center;\n  grid-template-columns: 1fr 4fr;\n`;\nconst StyledPriceWrap = styled.div`\n  display: grid;\n  align-items: center;\n  grid-template-columns: repeat(4, 1fr);\n`;\nconst StyledTag = styled(Tag)`\n  font-size: 15px;\n  padding: 6px 20px;\n  text-align: center;\n`;\nconst StyledPaymentTitle = styled.span`\n  font-size: 14px;\n  font-weight: bold;\n  text-align: center;\n  color: ${({ theme }) => theme.color.githubColor};\n`;\nconst StyledPayment = styled.span`\n  font-size: 14px;\n  color: ${({ theme }) => theme.color.githubColor};\n  text-align: center;\n\n  &:not(:last-child) {\n    border-right: 2px solid #999;\n  }\n`;\n","import React, { FC, memo } from 'react';\nimport styled from 'styled-components';\n\ninterface Props {\n  paymentTotal: number;\n}\nconst TotalPaymentComponent: FC<Props> = ({ paymentTotal }) => {\n  return (\n    <StyledContainer>\n      이번 모임은\n      <StyledPayment>{paymentTotal.toLocaleString()}</StyledPayment>원을\n      사용했어요!\n    </StyledContainer>\n  );\n};\nconst StyledContainer = styled.div``;\nconst StyledPayment = styled.span`\n  color: ${({ theme }) => theme.color.point};\n  font-weight: bold;\n  font-size: 20px;\n  margin: 0 3px 0px 8px;\n`;\n\nexport const TotalPayment = memo(TotalPaymentComponent);\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\ninterface Props {\n  title: string;\n  description?: string;\n}\nexport const StepHeader: FC<Props> = ({ title, description }) => {\n  return (\n    <StyledContainer>\n      <StyledTitle>{title}</StyledTitle>\n      {description && <StyledDescription>{description}</StyledDescription>}\n    </StyledContainer>\n  );\n};\nconst StyledContainer = styled.div`\n  margin-bottom: 10px;\n  padding-bottom: 10px;\n`;\nconst StyledTitle = styled.h3`\n  display: inline-block;\n  font-size: 22px;\n  font-weight: bold;\n`;\nconst StyledDescription = styled.span`\n  display: inline-block;\n  margin-left: 15px;\n  font-size: 14px;\n`;\n","import React, { FC, useEffect, useMemo, useState } from 'react';\nimport styled from 'styled-components';\n\nimport {\n  CalculateGetPriceItem,\n  CalculateItem,\n  PaymentItem,\n  UserItem,\n} from '../../../types';\nimport {\n  CalculateTabList,\n  PersonalCalculate,\n  TotalPayment,\n} from '../components/Calculate';\nimport { StepHeader } from '../components/Layout';\n\ninterface Props {\n  userList: UserItem[];\n  paymentList: PaymentItem[];\n}\nexport const CalculateContainer: FC<Props> = ({ userList, paymentList }) => {\n  const [calculateList, setCalculateList] = useState<CalculateItem>({});\n  const [\n    calculateGetPriceList,\n    setcalculateGetPriceList,\n  ] = useState<CalculateGetPriceItem>({});\n  const paymentTotal = useMemo(\n    () => paymentList.reduce((prev, curr) => prev + curr.paymentPrice, 0),\n    [paymentList],\n  );\n\n  useEffect(() => {\n    const calculateList: CalculateItem = {};\n    const sendList = userList.reduce(\n      (prev, curr) => ({ ...prev, [curr.userName]: 0 }),\n      {},\n    );\n    userList.map((user) => {\n      calculateList[user.userName] = {\n        paymentTotal: 0,\n        sendList: { ...sendList },\n      };\n    });\n\n    paymentList.map((payment) => {\n      const { paymentPrice, participants, payerName } = payment;\n      if (!paymentPrice || !payerName || !participants.length) return;\n      const perPersonPayment = paymentPrice / participants.length;\n      const payerInfo = calculateList[payerName];\n\n      payerInfo.paymentTotal += paymentPrice;\n\n      participants.map((partName) => {\n        if (partName === payerName) return;\n        const participantInfo = calculateList[partName];\n\n        const differencePrice = payerInfo.sendList[partName] - perPersonPayment;\n        if (differencePrice >= 0) {\n          payerInfo.sendList[partName] = differencePrice;\n        } else {\n          payerInfo.sendList[partName] = 0;\n          participantInfo.sendList[payerName] += -differencePrice;\n        }\n      });\n    });\n    setCalculateList(calculateList);\n  }, [userList, paymentList]);\n\n  useEffect(() => {\n    const sendList: CalculateGetPriceItem = { totalPrice: 0 };\n\n    userList.map((user) => {\n      Object.keys(calculateList).map((payer) => {\n        const floorToss = Math.floor(\n          calculateList[payer].sendList[user.userName],\n        );\n        sendList['totalPrice'] += floorToss;\n        sendList[user.userName] = sendList[user.userName]\n          ? sendList[user.userName] + floorToss\n          : floorToss;\n      });\n    });\n\n    setcalculateGetPriceList(sendList);\n  }, [calculateList]);\n\n  if (!paymentTotal) {\n    return (\n      <StyledSection>\n        <StepHeader description=\"정산결과 확인\" title=\"Step3\" />\n        <StyledNoResult>결제내역을 먼저 입력해주세요 📝</StyledNoResult>\n      </StyledSection>\n    );\n  }\n\n  return (\n    <StyledSection>\n      <StepHeader description=\"정산결과 확인\" title=\"Step3\" />\n      <TotalPayment paymentTotal={paymentTotal} />\n      <PersonalCalculate\n        calculateGetPriceList={calculateGetPriceList}\n        calculateList={calculateList}\n        userList={userList}\n      />\n      <CalculateTabList\n        calculateGetPriceList={calculateGetPriceList}\n        calculateList={calculateList}\n        userList={userList}\n      />\n    </StyledSection>\n  );\n};\n\nconst StyledSection = styled.section`\n  ${({ theme }) => theme.layout.section};\n`;\nconst StyledNoResult = styled.div`\n  font-size: 14px;\n  margin: 20px 0px 10px;\n  color: ${({ theme }) => theme.color.point};\n`;\n","import { PlusCircleOutlined } from '@ant-design/icons';\nimport { Table } from 'antd';\nimport React, { FC } from 'react';\nimport styled from 'styled-components';\n\nimport { PaymentItem, UserItem } from '../../../../types';\nimport { SelectUser, SelectUserList } from '../User';\n\ninterface Props {\n  userList: UserItem[];\n  paymentList: PaymentItem[];\n  addPayment(): void;\n  updateTitle(value: string, index: number): void;\n  updatePaymentPrice(value: string, index: number): void;\n  updatePayerName(selectedUser: string, index: number): void;\n  updateParticipants(participants: string[], index: number): void;\n}\nexport const PaymentTable: FC<Props> = ({\n  paymentList,\n  userList,\n  addPayment,\n  updateTitle,\n  updatePaymentPrice,\n  updatePayerName,\n  updateParticipants,\n  // updatePayment,\n}) => {\n  const columns = [\n    {\n      align: 'center' as const,\n      dataIndex: 'title',\n      key: 'title',\n      render: (title: string, record: PaymentItem, index: number) => (\n        <StyledInput\n          maxLength={15}\n          placeholder=\"사용처\"\n          value={title}\n          onChange={(e) => updateTitle(e.target.value, index)}\n        />\n      ),\n      sorter: true,\n      title: '사용처',\n      width: 150,\n    },\n    {\n      align: 'center' as const,\n      dataIndex: 'paymentPrice',\n      render: (paymentPrice: number, record: PaymentItem, index: number) => (\n        <StyledInput\n          value={paymentPrice?.toLocaleString() || 0}\n          onChange={(e) => updatePaymentPrice(e.target.value, index)}\n        />\n      ),\n      sorter: true,\n      title: '지출 금액',\n      width: 150,\n    },\n    {\n      align: 'center' as const,\n      dataIndex: 'payerName',\n      key: 'payerName',\n      render: (payerName: string, record: PaymentItem, index: number) => (\n        <StyledSelectUser\n          placeholder=\"결제자\"\n          userList={userList}\n          value={payerName}\n          onChange={(value) => updatePayerName(value, index)}\n        />\n      ),\n      sorter: true,\n      title: '결제자',\n      width: 150,\n    },\n    {\n      align: 'center' as const,\n      dataIndex: 'participants',\n      key: 'participants',\n      render: (participants: string[], record: PaymentItem, index: number) => (\n        <SelectUserList\n          changeSelect={(participants) =>\n            updateParticipants(participants, index)\n          }\n          mode=\"multiple\"\n          placeholder=\"참여자\"\n          userList={userList}\n          value={participants}\n        />\n      ),\n      title: '참여자',\n    },\n  ];\n\n  const Footer = () => (\n    <StyledFooter onClick={addPayment}>\n      <PlusCircleOutlined /> 항목 추가\n    </StyledFooter>\n  );\n\n  return (\n    <StyledContainer>\n      <Table\n        columns={columns}\n        dataSource={paymentList}\n        footer={Footer}\n        pagination={false}\n        rowKey={(record) => record.id}\n      />\n    </StyledContainer>\n  );\n};\nconst StyledContainer = styled.div`\n  table {\n    table-layout: fixed;\n  }\n  .ant-table {\n    border: 1px solid #dedede;\n    border-radius: 4px;\n    overflow: hidden;\n  }\n  .ant-table-footer {\n    padding: 0;\n  }\n`;\nconst StyledFooter = styled.button`\n  width: 100%;\n  padding: 15px;\n  text-align: center;\n  user-select: none;\n  cursor: pointer;\n  &:active,\n  &:hover {\n    opacity: 0.8;\n  }\n`;\nconst StyledInput = styled.input`\n  background: white;\n  border: 1px solid ${({ theme }) => theme.color.borderColor};\n  padding: 5px 10px;\n  border-radius: 5px;\n  width: 100%;\n`;\nconst StyledSelectUser = styled(SelectUser)`\n  width: 100%;\n`;\n","import React, { FC } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\n\nimport { updateTemplatePaymentList } from '../../../redux/template';\nimport { PaymentItem, UserItem } from '../../../types';\nimport { formatNumber } from '../../../utils';\nimport { generatePaymentItem } from '../../../utils/payment';\nimport { StepHeader } from '../components/Layout';\nimport { PaymentTable } from '../components/Payment';\n\ninterface Props {\n  userList: UserItem[];\n  paymentList: PaymentItem[];\n}\nexport const PaymentListContainer: FC<Props> = ({ userList, paymentList }) => {\n  const dispatch = useDispatch();\n\n  const addPayment = () => {\n    dispatch(\n      updateTemplatePaymentList({\n        paymentList: [...paymentList, generatePaymentItem()],\n      }),\n    );\n  };\n  const updateTitle = (value: string, index: number) => {\n    const items = [...paymentList];\n    items[index]['title'] = value;\n    dispatch(updateTemplatePaymentList({ paymentList: items }));\n  };\n  const updatePaymentPrice = (value: string, index: number) => {\n    const items = [...paymentList];\n    items[index]['paymentPrice'] = formatNumber(value);\n    dispatch(updateTemplatePaymentList({ paymentList: items }));\n  };\n  const updatePayerName = (selectedUser: string, index: number) => {\n    const items = [...paymentList];\n    items[index]['payerName'] = selectedUser;\n    dispatch(updateTemplatePaymentList({ paymentList: items }));\n  };\n  const updateParticipants = (value: string[], index: number) => {\n    const items = [...paymentList];\n    items[index]['participants'] = value;\n    dispatch(updateTemplatePaymentList({ paymentList: items }));\n  };\n\n  return (\n    <StyledSection>\n      <StepHeader description=\"결제내역 입력\" title=\"Step2\" />\n      <PaymentTable\n        addPayment={addPayment}\n        paymentList={paymentList}\n        updateParticipants={updateParticipants}\n        updatePayerName={updatePayerName}\n        updatePaymentPrice={updatePaymentPrice}\n        updateTitle={updateTitle}\n        userList={userList}\n      />\n    </StyledSection>\n  );\n};\n\nconst StyledSection = styled.section`\n  ${({ theme }) => theme.layout.section};\n`;\n","import {\n  CheckOutlined,\n  CloseOutlined,\n  DeleteOutlined,\n  EditOutlined,\n} from '@ant-design/icons';\nimport { message } from 'antd';\nimport React, { ChangeEvent, FC } from 'react';\nimport styled from 'styled-components';\n\nimport { ContentHeader } from '../../../shared/components/Content';\n\ninterface Props {\n  templateName: string;\n  editTemplateName: string;\n  isEdit: boolean;\n  setEditTemplateName(value: string): void;\n  setIsEdit(value: boolean): void;\n  onSave(): void;\n  onCancel(): void;\n  onDelete(): void;\n}\nexport const TemplateHeader: FC<Props> = ({\n  templateName,\n  editTemplateName,\n  isEdit,\n  setEditTemplateName,\n  setIsEdit,\n  onSave,\n  onCancel,\n  onDelete,\n}) => {\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n    if (value.length > 15) {\n      message.error('템플릿 이름은 최대 15자 입니다.');\n    } else {\n      setEditTemplateName(value);\n    }\n  };\n  return (\n    <StyledContainer>\n      {isEdit ? (\n        <StyledInput\n          maxLength={20}\n          placeholder=\"템플릿 이름 최대 20자\"\n          value={editTemplateName}\n          onChange={onChange}\n        />\n      ) : (\n        <ContentHeader>{templateName}</ContentHeader>\n      )}\n      <StyledIconWrap>\n        {isEdit ? (\n          <>\n            <CheckOutlined onClick={() => onSave()} />\n            <CloseOutlined onClick={() => onCancel()} />\n            <DeleteOutlined onClick={() => onDelete()} />\n          </>\n        ) : (\n          <EditOutlined onClick={() => setIsEdit(true)} />\n        )}\n      </StyledIconWrap>\n    </StyledContainer>\n  );\n};\nconst StyledContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\nconst StyledInput = styled.input`\n  width: 150px;\n  font-size: 16px;\n  border: 1px solid #dedede;\n  border-radius: 4px;\n  padding: 8px 10px;\n  margin-bottom: 14px;\n  font-weight: bold;\n`;\nconst StyledIconWrap = styled.div`\n  margin: 11px 0 0 10px;\n\n  svg {\n    font-size: 18px;\n    margin-right: 7px;\n  }\n`;\n","import { message } from 'antd';\nimport React, { FC, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n\nimport { RootState } from '../../../redux';\nimport { updateTemplateList } from '../../../redux/template';\nimport { TemplateHeader } from '../components/Template';\n\ninterface Props {\n  templateName: string;\n}\nexport const TemplateContainer: FC<Props> = ({ templateName }) => {\n  const navigation = useNavigate();\n  const template = useSelector((state: RootState) => state.template);\n  const dispatch = useDispatch();\n  const [editTemplateName, setEditTemplateName] = useState(templateName);\n  const [isEdit, setIsEdit] = useState(false);\n\n  useEffect(() => {\n    onCancel();\n  }, [templateName, template.selectedId]);\n\n  const onCancel = () => {\n    setEditTemplateName(templateName);\n    setIsEdit(false);\n  };\n  const onDelete = () => {\n    if (template.templateList.length < 2) {\n      message.error('템플릿은 최소 하나가 있어야해요. :(');\n      return;\n    }\n    const items = [...template.templateList].filter(\n      (item) => item.id !== template.selectedId,\n    );\n    dispatch(updateTemplateList({ templateList: items }));\n    navigation(`/calc/${items[items.length - 1].id}`);\n  };\n  const onSave = () => {\n    const items = [...template.templateList];\n    const selectedTemplate = items.findIndex(\n      (item) => item.id === template.selectedId,\n    );\n    if (selectedTemplate !== -1) {\n      items[selectedTemplate].templateName = editTemplateName;\n      dispatch(updateTemplateList({ templateList: items }));\n      setIsEdit(false);\n    }\n  };\n  return (\n    <TemplateHeader\n      editTemplateName={editTemplateName}\n      isEdit={isEdit}\n      setEditTemplateName={setEditTemplateName}\n      setIsEdit={setIsEdit}\n      templateName={templateName}\n      onCancel={onCancel}\n      onDelete={onDelete}\n      onSave={onSave}\n    />\n  );\n};\n","import React, { FC } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\n\nimport {\n  deleteTemplateUser,\n  updateTemplateUserList,\n} from '../../../redux/template';\nimport { UserItem } from '../../../types/user';\nimport { StepHeader } from '../components/Layout';\nimport { SelectUserList, tagColors } from '../components/User';\n\ninterface Props {\n  userList: UserItem[];\n}\n\nexport const UserListContainer: FC<Props> = ({ userList }) => {\n  const dispatch = useDispatch();\n\n  const createUser = (userItem: UserItem) => {\n    dispatch(\n      updateTemplateUserList({\n        userList: [...userList, userItem],\n      }),\n    );\n  };\n  const removeUser = (userName: string) => {\n    dispatch(deleteTemplateUser({ userName }));\n  };\n  const changeSelect = (value: string[]) => {\n    if (value.length > userList.length) {\n      createUser({\n        tagColor: tagColors[Math.floor(Math.random() * tagColors.length)],\n        userName: value[value.length - 1],\n      });\n    } else {\n      const filteredUser = userList.filter(\n        (user) => !value.includes(user.userName),\n      );\n      removeUser(filteredUser[0].userName);\n    }\n  };\n\n  return (\n    <StyledSection>\n      <StepHeader description=\"참가자 입력\" title=\"Step1\" />\n      <SelectUserList\n        changeSelect={changeSelect}\n        placeholder=\"참가자 입력 & 선택\"\n        userList={userList}\n        value={userList.map((user) => user.userName)}\n      />\n    </StyledSection>\n  );\n};\nconst StyledSection = styled.section`\n  ${({ theme }) => theme.layout.section};\n\n  .ant-select {\n    width: 100%;\n    font-size: 15px;\n\n    .ant-select-selection-placeholder {\n      left: 22px;\n    }\n    .ant-select-selector {\n      padding: 10px 15px;\n      min-height: 54px;\n    }\n    .ant-tag {\n      margin-right: 6px;\n      font-size: 15px;\n      padding: 5px 10px;\n    }\n    .ant-tag-close-icon {\n      font-size: 12px;\n      vertical-align: middle;\n      margin: -3px 0 0 9px;\n    }\n  }\n`;\n","import React, { FC, useEffect, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { RootState } from '../../../redux';\nimport { updateSelectedId } from '../../../redux/template';\nimport { AdsenseSection } from '../../shared/anlaytics';\nimport { CalculateContainer } from './CalculateContainer';\nimport { PaymentListContainer } from './PaymentListContainer';\nimport { TemplateContainer } from './TemplateContainer';\nimport { UserListContainer } from './UserListContainer';\n\ninterface Props {\n  templateId: string;\n}\nexport const DutchContainer: FC<Props> = ({ templateId }) => {\n  const template = useSelector((state: RootState) => state.template);\n  const dispatch = useDispatch();\n  const selectedTemplate = useMemo(() => {\n    const filterTemplate = template.templateList.filter(\n      (item) => item.id === templateId,\n    );\n\n    if (filterTemplate.length) {\n      return filterTemplate[0];\n    }\n  }, [template, templateId]);\n\n  useEffect(() => {\n    dispatch(updateSelectedId({ templateId }));\n  }, [templateId]);\n\n  if (!selectedTemplate) {\n    return null;\n  }\n\n  return (\n    <StyledContainer>\n      <TemplateContainer templateName={selectedTemplate.templateName} />\n      {/* <AdsenseSection slotNumber={8775838139} /> */}\n      <UserListContainer userList={selectedTemplate.userList} />\n      <PaymentListContainer\n        paymentList={selectedTemplate.paymentList}\n        userList={selectedTemplate.userList}\n      />\n      <CalculateContainer\n        paymentList={selectedTemplate.paymentList}\n        userList={selectedTemplate.userList}\n      />\n      {/* <AdsenseSection slotNumber={3718968486} /> */}\n    </StyledContainer>\n  );\n};\nconst StyledContainer = styled.div``;\n","import React, { FC } from 'react';\nimport { useParams } from 'react-router';\n\nimport { DutchContainer } from '../containers';\nimport { DutchPageTemplate } from './templates';\n\nconst DutchPage: FC = () => {\n  const { id = '' } = useParams();\n\n  return (\n    <DutchPageTemplate>\n      <DutchContainer templateId={id} />\n    </DutchPageTemplate>\n  );\n};\n\nexport default DutchPage;\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\ninterface Props {\n  onClick(): void;\n}\nexport const TemplateAddButton: FC<Props> = ({ onClick }) => {\n  return (\n    <StyledLi>\n      <StyledButton onClick={() => onClick()}>+ Add Template</StyledButton>\n    </StyledLi>\n  );\n};\nconst StyledLi = styled.li`\n  padding-left: 12px;\n`;\nconst StyledButton = styled.button`\n  width: 100%;\n  background: none;\n  border: 1px solid #dedede;\n  color: white;\n  border-radius: 4px;\n  padding: 10px;\n  cursor: pointer;\n  display: block;\n  text-align: center;\n`;\n","import React, { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { TemplateItem } from '../../../../types';\n\ninterface Props {\n  templateList: TemplateItem[];\n}\nexport const TemplateList: FC<Props> = ({ templateList }) => {\n  return (\n    <ul>\n      {templateList.map((template, index) => (\n        <li key={index}>\n          <NavLink\n            className={({ isActive }) => (isActive ? 'active' : '')}\n            to={`/calc/${template.id}`}\n          >\n            {template.templateName}\n          </NavLink>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { TemplateItem } from '../../../../types';\nimport { TemplateAddButton } from './TemplateAddButton';\nimport { TemplateList } from './TemplateList';\n\ninterface Props {\n  templateList: TemplateItem[];\n  onAddTemplate(): void;\n}\nexport const Navibar: React.FC<Props> = ({ templateList, onAddTemplate }) => {\n  return (\n    <StyledNavibar>\n      <StyledFixed>\n        <StyledInfo>\n          <StyledPageName to=\"/\">Dutch Pay</StyledPageName>\n          <StyledAuthorName>온라인 더치페이 계산기</StyledAuthorName>\n        </StyledInfo>\n        <StyledMenu>\n          <li>\n            <NavLink\n              className={({ isActive }) => (isActive ? 'active' : '')}\n              to=\"/\"\n            >\n              온라인 더치페이란?\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              className={location.pathname.includes('/calc') ? 'active' : ''}\n              to={`/calc/${templateList.length ? templateList[0].id : 'null'}`}\n            >\n              Let&#39;s Start Dutch Pay!\n            </NavLink>\n            <TemplateList templateList={templateList} />\n          </li>\n          <TemplateAddButton onClick={onAddTemplate} />\n        </StyledMenu>\n      </StyledFixed>\n    </StyledNavibar>\n  );\n};\n\nconst StyledNavibar = styled.section`\n  position: relative;\n  flex: 0 0 220px;\n  background: rgba(37, 37, 37, 1);\n`;\nconst StyledFixed = styled.div`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  width: 220px;\n`;\nconst StyledInfo = styled.div`\n  display: block;\n  padding: 20px;\n`;\nconst StyledPageName = styled(Link)`\n  display: block;\n  font-weight: bold;\n  font-size: 17px;\n  line-height: 21px;\n  color: white;\n  &:hover {\n    color: rgb(220, 220, 220);\n  }\n`;\nconst StyledAuthorName = styled.div`\n  display: block;\n  font-size: 14px;\n  color: #aaa;\n  line-height: 19px;\n  font-weight: 500;\n`;\nconst StyledMenu = styled.ul`\n  margin-top: 35px;\n  padding: 0px 20px;\n  line-height: normal;\n\n  & > li {\n    margin-bottom: 10px;\n  }\n\n  ul {\n    padding-left: 13px;\n  }\n  .active {\n    color: white !important;\n    font-weight: bold !important;\n  }\n\n  li {\n    a {\n      display: block;\n      color: rgb(166, 155, 178);\n      font-size: 14px;\n      font-weight: 500;\n      padding: 10px 0px;\n      transition: color 0.2s linear;\n    }\n\n    &:hover {\n      & > a {\n        color: rgb(220, 220, 220);\n      }\n    }\n  }\n`;\n","import React, { FC, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { RootState } from '../../../redux';\nimport { createTemplate, setTemplateList } from '../../../redux/template';\nimport { TemplateItem } from '../../../types';\nimport { Navibar } from '../components/Navibar';\n\nexport const NavibarContainer: FC = () => {\n  const template = useSelector((state: RootState) => state.template);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const storageTemplate = localStorage.getItem('templateList');\n    if (storageTemplate) {\n      const storageTemplateList = JSON.parse(storageTemplate) as TemplateItem[];\n      dispatch(setTemplateList(storageTemplateList));\n    } else {\n      addTemplate();\n    }\n  }, []);\n\n  const addTemplate = () => {\n    dispatch(createTemplate());\n  };\n\n  return (\n    <Navibar templateList={template.templateList} onAddTemplate={addTemplate} />\n  );\n};\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\nimport { NavibarContainer } from '../../../shared/containers';\n\nexport const DutchPageTemplate: FC = ({ children }) => {\n  return (\n    <StyledTemplate>\n      <NavibarContainer />\n      <StyledWrap>{children}</StyledWrap>\n    </StyledTemplate>\n  );\n};\n\nconst StyledTemplate = styled.div`\n  min-height: 100vh;\n  display: flex;\n`;\nconst StyledWrap = styled.div`\n  flex: 1 1 auto;\n  padding: 16px 30px 20px;\n  border-radius: 10px;\n  border: 1px;\n  overflow: hidden;\n`;\n"],"sourceRoot":""}