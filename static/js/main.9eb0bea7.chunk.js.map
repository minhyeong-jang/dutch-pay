{"version":3,"sources":["modules/shared/components/Content/ContentHeader.tsx","modules/shared/components/Content/ContentWrap.tsx","modules/about/containers/AboutContainer.tsx","utils/template.ts","redux/template.ts","modules/shared/components/Navibar/TemplateAddButton.tsx","modules/shared/components/Navibar/TemplateList.tsx","modules/shared/components/Navibar/Navibar.tsx","modules/shared/containers/NavibarContainer.tsx","modules/about/pages/templates/AboutPageTemplate.tsx","modules/dutch/containers/CalculateContainer.tsx","modules/dutch/hooks/usePaymentList.tsx","utils/utils.ts","modules/dutch/components/Layout/StepHeader.tsx","modules/dutch/components/Layout/TemplateHeader.tsx","modules/dutch/components/Layout/TemplateOptions.tsx","modules/dutch/components/User/SelectUser.tsx","modules/dutch/components/User/SelectUserListTag.tsx","modules/dutch/components/User/SelectUserList.tsx","modules/dutch/components/Payment/PaymentTable.tsx","modules/dutch/containers/PaymentListContainer.tsx","modules/dutch/components/Template/TemplateSaveButton.tsx","modules/dutch/components/Template/TemplateSaveModal.tsx","modules/dutch/components/Template/TemplateSection.tsx","modules/dutch/containers/TemplateContainer.tsx","modules/dutch/containers/UserListContainer.tsx","modules/dutch/containers/DutchContainer.tsx","modules/dutch/hooks/useUserList.tsx","modules/dutch/pages/templates/DutchPageTemplate.tsx","modules/shared/routes.ts","modules/about/pages/AboutPage.tsx","modules/dutch/pages/DutchPage.tsx","styles/GlobalStyle.ts","styles/theme/theme.ts","App.tsx","redux/index.ts","index.tsx"],"names":["ContentHeader","children","props","StyledHeader","styled","div","ContentWrap","StyledContainer","StyledReponsiveContent","theme","color","linkColor","point","AboutContainer","generateTemplate","id","Date","Math","random","toString","paymentList","templateName","userList","CREATE_TEMPLATE","SET_TEMPLATE_LIST","initialState","templateList","template","state","action","type","attachTemplateList","localStorage","setItem","JSON","stringify","payload","TemplateAddButton","onClick","StyledLi","StyledButton","li","button","TemplateList","map","index","activeClassName","to","exact","Navibar","onAddTemplate","StyledNavibar","StyledFixed","StyledInfo","StyledPageName","StyledAuthorName","href","target","StyledMenu","section","Link","a","ul","NavibarContainer","useSelector","dispatch","useDispatch","useEffect","storageTemplate","getItem","storageTemplateList","parse","AboutPageTemplate","StyledTemplate","StyledWrap","CalculateContainer","useState","calculateList","setCalculateList","allPaymentTotal","setAllPaymentTotal","allTossList","setAllTossList","length","tossList","reduce","prev","curr","userName","user","paymentTotal","Object","keys","payment","paymentPrice","participants","payerName","perPersonPayment","payerInfo","partName","participantInfo","differencePrice","totalPrice","payer","floorToss","floor","StyledSection","StyledTitle","StyledPayment","toLocaleString","StyledDesc","StyledUl","tossTotal","sum","key","StyledPayerInfo","StyledPlayer","StyledTossUl","participant","StyledTossLi","StyledGiveMe","StyledTossPayer","StyledTossPrice","StyledTotalPrice","layout","span","initialPaymentItem","replace","c","r","title","usePaymentList","setPaymentList","addPayment","updateParticipants","value","items","updatePayerName","selectedUser","updatePaymentPrice","parseInt","formatNumber","updateTitle","StepHeader","description","StyledDescription","h3","Option","Select","SelectUser","placeholder","onChange","style","width","tagColors","SelectUserList","mode","changeSelect","getTagColor","customTag","filteredUser","filter","tagColor","options","label","tagRender","closable","onClose","SelectUserListTag","PaymentTable","columns","align","dataIndex","render","record","StyledInput","maxLength","e","sorter","dataSource","footer","StyledFooter","PlusCircleOutlined","rowKey","input","borderColor","PaymentListContainer","githubColor","TemplateSection","TemplateContainer","UserListContainer","addUser","removeUser","includes","DutchContainer","templateId","setUserList","prevState","filterList","useUserList","filterTemplate","item","DutchPageTemplate","routes","component","path","useParams","GlobalStyle","createGlobalStyle","reset","breakpoint","borderRadius","mediaQuery","lg","md","sm","xl","xs","App","basename","process","fallback","minHeight","route","rootReducer","combineReducers","store","createStore","applyMiddleware","Thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9eb0bea7.chunk.js","sourcesContent":["import React, { FC } from 'react';\nimport styled from 'styled-components';\n\nexport const ContentHeader: FC = ({ children, ...props }) => {\n  return <StyledHeader {...props}>{children}</StyledHeader>;\n};\nconst StyledHeader = styled.div`\n  display: flex;\n  margin: 8px 0px 20px;\n  font-size: 22px;\n  line-height: 22px;\n  font-weight: bold;\n  align-items: center;\n  color: rgb(74, 62, 86);\n`;\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\nexport const ContentWrap: FC = ({ children }) => {\n  return (\n    <StyledContainer>\n      <StyledReponsiveContent>{children}</StyledReponsiveContent>\n    </StyledContainer>\n  );\n};\nconst StyledContainer = styled.div`\n  background: white;\n  border: 1px solid rgb(209, 202, 216);\n  padding: 50px 20px;\n  border-radius: 5px;\n  margin: 20px 0px;\n\n  ul {\n    margin: 5px 0px 0px 40px;\n\n    li {\n      padding: 3px;\n      list-style: outside;\n      line-height: 1.5;\n    }\n  }\n  a {\n    color: ${({ theme }) => theme.color.linkColor};\n    font-weight: bold;\n    text-decoration: underline;\n  }\n  b,\n  strong {\n    font-weight: bold;\n  }\n  h1 {\n    font-size: 2.2857rem;\n    font-weight: bold;\n  }\n  h2 {\n    font-size: 1.6429rem;\n    margin: 60px 0px 20px 0px;\n    padding: 5px 15px;\n    border-left: 3px solid #5fad80;\n    font-weight: bold;\n  }\n  code {\n    font-weight: bold;\n    color: ${({ theme }) => theme.color.point} !important;\n  }\n  p {\n    font-size: 1.125rem;\n    line-height: 1.8;\n    margin: 20px 0px;\n    color: #131518;\n    letter-spacing: -0.004em;\n    word-break: keep-all;\n    overflow-wrap: break-word;\n  }\n\n  block {\n    display: block;\n    padding: 20px;\n  }\n\n  blockquote {\n    margin: 28px 0;\n    padding: 15px 28px;\n    border-left: 3px solid #f3cf00;\n\n    p {\n      margin: 0px;\n    }\n  }\n`;\nconst StyledReponsiveContent = styled.div`\n  max-width: 900px;\n  margin: 0 auto;\n`;\n","import React, { FC } from 'react';\nimport ReactMarkdown from 'react-markdown';\n\nimport { ContentHeader, ContentWrap } from '../../shared/components/Content';\n\nconst markdown = `\n# 우리 더치페이 하자!\n\n간단한 술자리부터 여행까지! 모임을 편하게 정산해 봅시다~\n\n여러분들은 아래 사항 중 하나라도 겪으셨나요??\n\n> \"나중에 계산하기 복잡해! \\`한 명이 다 계산하자.\\`\"  \n> \"1차하고 2차 \\`참여한 사람 다르니까\\` 따로따로 보내줘!\"  \n> \"카드 안 챙겨서 둘리가 내꺼 결제해 줬는데, \\`별도로 반영해 줄 수 있어?\\`\"  \n> \"길동이는 \\`둘리한테 2,000원\\` 보내고, 둘리는 \\`또치 2,000원 / 도우너 3,000원\\` 보내고...\"  \n\n이 외에도 다양하겠지만, 재미있게 놀고 왔는데 머리 아프다니.. 너무 슬프지 않나요?  \n\n그렇다면 여기서 한번 해보세요!  \n\\`빠르고 쉽게 정산\\`하고 \\`송금하는 사람도 편하도록\\` 모든 정산 방법을 넣었습니다.\n\n아직도 \\`\"내가 원하는 기능이 없어!\"\\`라고 생각하면, [Contact](https://minhyeong-jang.github.io/contact)로 문의해 주세요. 확인 후 추가해드릴게요!\n\n## 사용방법\n\n**1. 참가자 입력**\n\n- 참가자를 입력해 주세요.\n\n**2. 결제정보 입력**\n\n- 사용처, 금액을 입력해 주세요.\n- 결제자, 참가자를 선택해 주세요.\n- 나눠서 결제 한 경우, 항목을 추가해서 결제 정보를 결제한 만큼 입력해 주세요.\n- 사용처, 금액, 결제자, 참가자 중 하나라도 정보가 없다면 정산 리스트에 포함되지 않습니다.\n\n**3. 송금 정보 확인**\n\n- 참가자의 결제/송금 금액이 출력되며, 각 참가자 정보에는 송금해야 하는 리스트가 출력됩니다.\n- 한 명이 송금 받아서 정산하는 방식으로 전송해도 무관합니다.\n\n## Developer\n\n- Author : [Minhyeong Jang](https://minhyeong-jang.github.io/about)  \n- Email : [public.doriri@gmail.com](mailto:public.doriri@gmail.com)\n\n## Release Note\n\n- March 27, 2021\n  - 템플릿 리스트 적용\n- March 26, 2021\n  - 로컬스토리지 저장 기능 추가\n- March 25, 2021\n  - 단순 정보 확인이 가능하도록 수정, UI 개편\n`;\n\nexport const AboutContainer: FC = () => {\n  return (\n    <>\n      <ContentHeader>Hello Dutch Pay</ContentHeader>\n      <ContentWrap>\n        <ReactMarkdown>{markdown}</ReactMarkdown>\n      </ContentWrap>\n    </>\n  );\n};\n","import { TemplateItem } from '../types';\n\nexport const generateTemplate = (): TemplateItem => ({\n  id: (+new Date() + Math.random() * 100).toString(32),\n  paymentList: [],\n  templateName: 'New Template',\n  userList: [],\n});\n","import { TemplateItem } from '../types';\nimport { generateTemplate } from '../utils/template';\n\nconst CREATE_TEMPLATE = 'template/CREATE_TEMPLATE' as const;\nconst SET_TEMPLATE_LIST = 'template/SET_TEMPLATE_LIST';\n\nexport const createTemplate = () => ({\n  type: CREATE_TEMPLATE,\n});\nexport const setTemplateList = (templateList: TemplateItem[]) => ({\n  payload: templateList,\n  type: SET_TEMPLATE_LIST,\n});\n\ntype TemplateAction =\n  | ReturnType<typeof createTemplate>\n  | ReturnType<typeof setTemplateList>;\n\ntype TemplateState = {\n  templateList: TemplateItem[];\n};\n\nconst initialState: TemplateState = {\n  templateList: [],\n};\n\nfunction template(\n  state: TemplateState = initialState,\n  action: TemplateAction,\n): TemplateState {\n  switch (action.type) {\n    case CREATE_TEMPLATE: {\n      const attachTemplateList = [...state.templateList, generateTemplate()];\n      localStorage.setItem('templateList', JSON.stringify(attachTemplateList));\n      return { templateList: attachTemplateList };\n    }\n    case SET_TEMPLATE_LIST:\n      return { templateList: action.payload };\n    // case INCREASE_BY:\n    //   return { count: state.count + action.payload };\n    default:\n      return state;\n  }\n}\n\nexport default template;\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\ninterface Props {\n  onClick(): void;\n}\nexport const TemplateAddButton: FC<Props> = ({ onClick }) => {\n  return (\n    <StyledLi>\n      <StyledButton onClick={() => onClick()}>+ Add Template</StyledButton>\n    </StyledLi>\n  );\n};\nconst StyledLi = styled.li`\n  padding-left: 12px;\n`;\nconst StyledButton = styled.button`\n  width: 100%;\n  background: none;\n  border: 1px solid #dedede;\n  color: white;\n  border-radius: 4px;\n  padding: 10px;\n  cursor: pointer;\n  display: block;\n  text-align: center;\n`;\n","import React, { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { TemplateItem } from '../../../../types';\n\ninterface Props {\n  templateList: TemplateItem[];\n}\nexport const TemplateList: FC<Props> = ({ templateList }) => {\n  return (\n    <ul>\n      {templateList.map((template, index) => (\n        <li key={index}>\n          <NavLink activeClassName=\"active\" to={`/calc/${template.id}`} exact>\n            {template.templateName}\n          </NavLink>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { TemplateItem } from '../../../../types';\nimport { TemplateAddButton } from './TemplateAddButton';\nimport { TemplateList } from './TemplateList';\n\ninterface Props {\n  templateList: TemplateItem[];\n  onAddTemplate(): void;\n}\nexport const Navibar: React.FC<Props> = ({ templateList, onAddTemplate }) => {\n  return (\n    <StyledNavibar>\n      <StyledFixed>\n        <StyledInfo>\n          <StyledPageName to=\"/\">Dutch Pay</StyledPageName>\n          <StyledAuthorName\n            href=\"https://minhyeong-jang.github.io/\"\n            target=\"_blank\"\n          >\n            Minhyeong Jang\n          </StyledAuthorName>\n        </StyledInfo>\n        <StyledMenu>\n          <li>\n            <NavLink activeClassName=\"active\" to=\"/\" exact>\n              Hello Dutch Pay\n            </NavLink>\n          </li>\n          <li>\n            <NavLink activeClassName=\"active\" to=\"/calc\">\n              Let&#39;s Start Dutch Pay!\n            </NavLink>\n            <TemplateList templateList={templateList} />\n          </li>\n          <TemplateAddButton onClick={onAddTemplate} />\n        </StyledMenu>\n      </StyledFixed>\n    </StyledNavibar>\n  );\n};\n\nconst StyledNavibar = styled.section`\n  position: relative;\n  flex: 0 0 220px;\n  background: rgba(37, 37, 37, 1);\n`;\nconst StyledFixed = styled.div`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  width: 220px;\n`;\nconst StyledInfo = styled.div`\n  display: block;\n  padding: 20px;\n`;\nconst StyledPageName = styled(Link)`\n  display: block;\n  font-weight: bold;\n  font-size: 17px;\n  line-height: 21px;\n  color: white;\n`;\nconst StyledAuthorName = styled.a`\n  display: block;\n  font-size: 14px;\n  color: #aaa;\n  line-height: 19px;\n  font-weight: 500;\n`;\nconst StyledMenu = styled.ul`\n  margin-top: 35px;\n  padding: 0px 20px;\n  line-height: normal;\n\n  & > li {\n    margin-bottom: 10px;\n  }\n\n  ul {\n    padding-left: 13px;\n  }\n  .active {\n    color: white !important;\n    font-weight: bold !important;\n  }\n\n  li {\n    a {\n      display: block;\n      color: rgb(166, 155, 178);\n      font-size: 14px;\n      font-weight: 500;\n      padding: 10px 0px;\n      transition: color 0.2s linear;\n    }\n\n    &:hover {\n      & > a {\n        color: rgb(220, 220, 220);\n      }\n    }\n  }\n`;\n","import React, { FC, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { RootState } from '../../../redux';\nimport { createTemplate, setTemplateList } from '../../../redux/template';\nimport { TemplateItem } from '../../../types';\nimport { Navibar } from '../components/Navibar';\n\nexport const NavibarContainer: FC = () => {\n  const template = useSelector((state: RootState) => state.template);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const storageTemplate = localStorage.getItem('templateList');\n    if (storageTemplate) {\n      const storageTemplateList = JSON.parse(storageTemplate) as TemplateItem[];\n      dispatch(setTemplateList(storageTemplateList));\n    }\n  }, []);\n\n  const addTemplate = () => {\n    dispatch(createTemplate());\n  };\n\n  return (\n    <Navibar templateList={template.templateList} onAddTemplate={addTemplate} />\n  );\n};\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\nimport { NavibarContainer } from '../../../shared/containers';\n\nexport const AboutPageTemplate: FC = ({ children }) => {\n  return (\n    <StyledTemplate>\n      <NavibarContainer />\n      <StyledWrap>{children}</StyledWrap>\n    </StyledTemplate>\n  );\n};\n\nconst StyledTemplate = styled.div`\n  min-height: 100vh;\n  display: flex;\n`;\nconst StyledWrap = styled.div`\n  flex: 1 1 auto;\n  padding: 16px 30px 20px;\n  border-radius: 10px;\n  border: 1px;\n  overflow: hidden;\n`;\n","import React, { FC, useEffect, useMemo, useState } from 'react';\nimport styled from 'styled-components';\n\nimport { PaymentItem, UserItem } from '../hooks';\n\ninterface Props {\n  userList: UserItem[];\n  paymentList: PaymentItem[];\n}\ninterface CalculateObj {\n  [key: string]: {\n    paymentTotal: number;\n    tossList: {\n      [key: string]: number;\n    };\n  };\n}\ninterface TossObj {\n  [key: string]: number;\n}\n\nexport const CalculateContainer: FC<Props> = ({ userList, paymentList }) => {\n  const [calculateList, setCalculateList] = useState<CalculateObj>({});\n  const [allPaymentTotal, setAllPaymentTotal] = useState(0);\n  const [allTossList, setAllTossList] = useState<TossObj>({});\n\n  useEffect(() => {\n    if (!userList.length || !paymentList.length) return;\n\n    const calculateList: CalculateObj = {};\n    const tossList = userList.reduce(\n      (prev, curr) => ({ ...prev, [curr.userName]: 0 }),\n      {},\n    );\n    userList.map((user) => {\n      calculateList[user.userName] = {\n        paymentTotal: 0,\n        tossList: { ...tossList },\n      };\n    });\n\n    if (!Object.keys(calculateList).length) return;\n\n    paymentList.map((payment) => {\n      const { paymentPrice, participants, payerName } = payment;\n      if (!paymentPrice || !payerName || !participants.length) return;\n      const perPersonPayment = paymentPrice / participants.length;\n      const payerInfo = calculateList[payerName];\n\n      payerInfo.paymentTotal += paymentPrice;\n\n      participants.map((partName) => {\n        if (partName === payerName) return;\n        const participantInfo = calculateList[partName];\n\n        const differencePrice = payerInfo.tossList[partName] - perPersonPayment;\n        if (differencePrice >= 0) {\n          payerInfo.tossList[partName] = differencePrice;\n        } else {\n          payerInfo.tossList[partName] = 0;\n          participantInfo.tossList[payerName] += -differencePrice;\n        }\n      });\n    });\n    setCalculateList(calculateList);\n  }, [userList, paymentList]);\n\n  useEffect(() => {\n    const allPaymentTotal = paymentList.reduce(\n      (prev, curr) => prev + curr.paymentPrice,\n      0,\n    );\n    setAllPaymentTotal(allPaymentTotal);\n  }, [paymentList]);\n\n  useEffect(() => {\n    const allTossList: TossObj = { totalPrice: 0 };\n\n    userList.map((user) => {\n      Object.keys(calculateList).map((payer) => {\n        const floorToss = Math.floor(\n          calculateList[payer].tossList[user.userName],\n        );\n        allTossList['totalPrice'] += floorToss;\n        allTossList[user.userName] = allTossList[user.userName]\n          ? allTossList[user.userName] + floorToss\n          : floorToss;\n      });\n    });\n\n    setAllTossList(allTossList);\n  }, [calculateList]);\n\n  return (\n    <StyledSection>\n      <StyledTitle>\n        결제 정보&nbsp;\n        <StyledPayment>\n          {allPaymentTotal.toLocaleString()} / {userList.length} =&nbsp;\n          {(allPaymentTotal / userList.length).toLocaleString()}원\n        </StyledPayment>\n      </StyledTitle>\n      <StyledDesc>\n        * 모든 결제를 더치페이 하지 않기 때문에 오차가 있을 수 있습니다.\n      </StyledDesc>\n      <StyledUl>\n        {Object.keys(calculateList).map((payer, index) => {\n          const { paymentTotal, tossList } = calculateList[payer];\n          const tossTotal = Object.keys(tossList).reduce(\n            (sum, key) => sum + Math.floor(tossList[key] || 0),\n            0,\n          );\n\n          return (\n            <StyledLi key={index}>\n              <StyledPayerInfo>\n                <StyledPlayer>{payer}</StyledPlayer>\n                <StyledPayment>\n                  결제 금액 : {paymentTotal.toLocaleString()}원 / 송금 금액 :{' '}\n                  {tossTotal.toLocaleString()}원 / 총 여행 경비 :{' '}\n                  {(\n                    paymentTotal +\n                    tossTotal -\n                    (allTossList[payer] || 0)\n                  ).toLocaleString()}\n                  원\n                </StyledPayment>\n              </StyledPayerInfo>\n\n              <StyledTossUl>\n                {Object.keys(tossList).map((participant, index) =>\n                  tossList[participant] ? (\n                    <StyledTossLi key={index}>\n                      {payer} -&gt; {participant} :&nbsp;\n                      {Math.floor(tossList[participant]).toLocaleString()}원\n                    </StyledTossLi>\n                  ) : null,\n                )}\n              </StyledTossUl>\n            </StyledLi>\n          );\n        })}\n      </StyledUl>\n      {Object.keys(allTossList).length > 0 ? (\n        <>\n          <StyledTitle>\n            한 번에 처리해볼까..?\n            <StyledDesc>* 한 명이 다 송금받아서 정산한다면?</StyledDesc>\n          </StyledTitle>\n          <StyledGiveMe>\n            <StyledTossUl>\n              {Object.keys(calculateList).map((payer, index) => {\n                const { paymentTotal, tossList } = calculateList[payer];\n                const tossTotal = Object.keys(tossList).reduce(\n                  (sum, key) => sum + Math.floor(tossList[key] || 0),\n                  0,\n                );\n                return (\n                  <StyledTossLi key={index}>\n                    <StyledTossPayer>{payer} :</StyledTossPayer>\n                    <StyledTossPrice>\n                      {tossTotal.toLocaleString()}원\n                    </StyledTossPrice>\n                  </StyledTossLi>\n                );\n              })}\n              <StyledTossLi>\n                <StyledTossPayer>Total :</StyledTossPayer>\n                <StyledTossPrice>\n                  {allTossList['totalPrice'].toLocaleString()}원\n                </StyledTossPrice>\n              </StyledTossLi>\n            </StyledTossUl>\n          </StyledGiveMe>\n          <div>\n            <StyledTossUl>\n              {Object.keys(allTossList).map((payer, index) =>\n                payer !== 'totalPrice' && allTossList[payer] !== 0 ? (\n                  <StyledTossLi key={index}>\n                    {payer}(이)가\n                    <StyledTotalPrice>\n                      {allTossList[payer].toLocaleString()}\n                    </StyledTotalPrice>\n                    &nbsp;원을 요청해요!\n                  </StyledTossLi>\n                ) : null,\n              )}\n            </StyledTossUl>\n          </div>\n        </>\n      ) : null}\n    </StyledSection>\n  );\n};\n\nconst StyledSection = styled.section`\n  ${({ theme }) => theme.layout.section};\n`;\n\nconst StyledGiveMe = styled.div`\n  color: #222;\n  border-top: 1px solid #dedede;\n  font-weight: bold;\n  padding: 10px 0px;\n  ul {\n    margin-top: 10px;\n    margin-left: 15px;\n  }\n`;\nconst StyledTitle = styled.div`\n  font-size: 22px;\n  color: #222;\n  font-weight: bold;\n`;\nconst StyledPayerInfo = styled.div`\n  margin-bottom: 10px;\n`;\nconst StyledPlayer = styled.span`\n  font-weight: bold;\n  font-size: 17px;\n`;\nconst StyledPayment = styled.span`\n  margin-left: 5px;\n  font-size: 14px;\n  color: #646464;\n`;\nconst StyledDesc = styled.div`\n  font-size: 13px;\n  color: #646464;\n  margin: 10px 0px;\n`;\nconst StyledUl = styled.ul`\n  padding: 0;\n`;\nconst StyledLi = styled.li`\n  padding: 10px 10px;\n  border-bottom: 1px solid #dedede;\n  list-style: none;\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\nconst StyledTossUl = styled.ul`\n  padding-left: 20px;\n`;\n\nconst StyledTossLi = styled.li`\n  margin-bottom: 5px;\n  font-size: 15px;\n  list-style-type: disc;\n`;\nconst StyledTotalPrice = styled.span`\n  width: 80px;\n  margin-left: 5px;\n  display: inline-block;\n  text-align: right;\n`;\n\nconst StyledTossPayer = styled.span`\n  display: inline-block;\n  width: 50px;\n`;\nconst StyledTossPrice = styled.span`\n  display: inline-block;\n  width: 100px;\n  text-align: right;\n`;\n","import { useEffect, useState } from 'react';\n\nimport { formatNumber, uuidv4 } from '../../../utils';\nexport interface PaymentItem {\n  key: string;\n  title: string;\n  paymentPrice: number;\n  payerName: string;\n  participants: string[];\n}\n\nexport const initialPaymentItem = (): PaymentItem => ({\n  key: uuidv4(),\n  participants: [],\n  payerName: '',\n  paymentPrice: 0,\n  title: '',\n});\n\nexport const usePaymentList = () => {\n  const [paymentList, setPaymentList] = useState<PaymentItem[]>([]);\n\n  useEffect(() => {\n    if (!paymentList.length) {\n      setPaymentList([initialPaymentItem()]);\n    }\n  }, []);\n\n  const addPayment = () => {\n    setPaymentList([...paymentList, initialPaymentItem()]);\n  };\n  const updateTitle = (value: string, index: number) => {\n    const items = [...paymentList];\n    items[index]['title'] = value;\n    setPaymentList(items);\n  };\n  const updatePaymentPrice = (value: string, index: number) => {\n    const items = [...paymentList];\n    items[index]['paymentPrice'] = formatNumber(value);\n    setPaymentList(items);\n  };\n  const updatePayerName = (selectedUser: string, index: number) => {\n    const items = [...paymentList];\n    items[index]['payerName'] = selectedUser;\n    setPaymentList(items);\n  };\n  const updateParticipants = (value: string[], index: number) => {\n    const items = [...paymentList];\n    items[index]['participants'] = value;\n    setPaymentList(items);\n  };\n\n  return {\n    addPayment,\n    paymentList,\n    setPaymentList,\n    updateParticipants,\n    updatePayerName,\n    updatePaymentPrice,\n    updateTitle,\n  };\n};\n","export const uuidv4 = () => {\n  return 'xxxx-xxxx-xxxx-xxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0,\n      v = c == 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n\nexport const formatNumber = (value: string): number => {\n  return parseInt(value.replace(/[^0-9]/g, ''));\n};\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\ninterface Props {\n  title: string;\n  description?: string;\n}\nexport const StepHeader: FC<Props> = ({ title, description }) => {\n  return (\n    <StyledContainer>\n      <StyledTitle>{title}</StyledTitle>\n      {description && <StyledDescription>{description}</StyledDescription>}\n    </StyledContainer>\n  );\n};\nconst StyledContainer = styled.div`\n  margin-bottom: 10px;\n  padding-bottom: 10px;\n`;\nconst StyledTitle = styled.h3`\n  display: inline-block;\n  font-size: 22px;\n  font-weight: bold;\n`;\nconst StyledDescription = styled.span`\n  display: inline-block;\n  margin-left: 15px;\n  font-size: 14px;\n`;\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\nexport const TemplateHeader: FC = ({ children }) => {\n  return <StyledContainer>{children}</StyledContainer>;\n};\nconst StyledContainer = styled.div`\n  margin-bottom: 50px;\n  font-size: 15px;\n  font-weight: bold;\n`;\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\nimport { ContentHeader } from '../../../shared/components/Content';\n\nexport const TemplateOptions: FC = () => {\n  return (\n    <ContentHeader>\n      Template Name\n      <StyledButton>저장하기</StyledButton>\n    </ContentHeader>\n  );\n};\nconst StyledButton = styled.button`\n  padding: 10px 20px;\n  background: none;\n  margin-left: auto;\n  border: 1px solid ${({ theme }) => theme.color.point};\n`;\n","import { Select } from 'antd';\nimport React, { FC } from 'react';\n\nimport { UserItem } from '../../hooks';\n\ninterface Props {\n  userList: UserItem[];\n  value: string;\n  placeholder: string;\n  onChange(value: string): void;\n}\n\nconst { Option } = Select;\nexport const SelectUser: FC<Props> = ({\n  placeholder,\n  value,\n  userList,\n  onChange,\n}) => {\n  return (\n    <Select\n      placeholder={placeholder}\n      style={{ width: '100%' }}\n      value={value}\n      onChange={onChange}\n    >\n      {userList.map((user, index) => (\n        <Option key={index} value={user.userName}>\n          {user.userName}\n        </Option>\n      ))}\n    </Select>\n  );\n};\n","import { Tag as AntdTag } from 'antd';\nimport { CustomTagProps } from 'rc-select/lib/interface/generator';\nimport React from 'react';\n\nexport const tagColors = [\n  'pink',\n  'red',\n  'orange',\n  'cyan',\n  'green',\n  'blue',\n  'purple',\n  'geekblue',\n  'magenta',\n  'volcano',\n  'gold',\n  'lime',\n  'success',\n  'processing',\n  'error',\n  'default',\n  'warning',\n];\n\ninterface Props extends CustomTagProps {\n  tagColor: string | null;\n}\nexport const SelectUserListTag = ({\n  tagColor,\n  value,\n  closable,\n  onClose,\n}: Props) => {\n  if (!tagColor) {\n    return <></>;\n  }\n  return (\n    <AntdTag closable={closable} color={tagColor} onClose={onClose}>\n      {value}\n    </AntdTag>\n  );\n};\n","import { Select } from 'antd';\nimport { CustomTagProps } from 'rc-select/lib/interface/generator';\nimport React, { FC } from 'react';\n\nimport { UserItem } from '../../hooks';\nimport { SelectUserListTag } from './SelectUserListTag';\n\ninterface Props {\n  userList: UserItem[];\n  value: string[];\n  mode?: 'tags' | 'multiple';\n  placeholder?: string;\n  changeSelect(value: string[]): void;\n}\nexport const SelectUserList: FC<Props> = ({\n  mode = 'tags',\n  value,\n  userList,\n  placeholder,\n  changeSelect,\n}) => {\n  const getTagColor = (customTag: CustomTagProps) => {\n    const filteredUser = userList.filter(\n      (user) => user.userName === customTag.value,\n    );\n    if (filteredUser.length) {\n      return filteredUser[0].tagColor;\n    }\n    return null;\n  };\n\n  return (\n    <Select\n      mode={mode}\n      options={userList.map((user) => ({\n        label: user.userName,\n        value: user.userName,\n      }))}\n      placeholder={placeholder}\n      style={{\n        width: '100%',\n      }}\n      tagRender={(customTag) =>\n        SelectUserListTag({\n          ...customTag,\n          tagColor: getTagColor(customTag),\n        })\n      }\n      value={value}\n      onChange={changeSelect}\n    />\n  );\n};\n","import { PlusCircleOutlined } from '@ant-design/icons';\nimport { Table } from 'antd';\nimport React, { FC } from 'react';\nimport styled from 'styled-components';\n\nimport { PaymentItem, UserItem } from '../../hooks';\nimport { SelectUser, SelectUserList } from '../User';\n\ninterface Props {\n  userList: UserItem[];\n  paymentList: PaymentItem[];\n  addPayment(): void;\n  updateTitle(value: string, index: number): void;\n  updatePaymentPrice(value: string, index: number): void;\n  updatePayerName(selectedUser: string, index: number): void;\n  updateParticipants(participants: string[], index: number): void;\n}\nexport const PaymentTable: FC<Props> = ({\n  paymentList,\n  userList,\n  addPayment,\n  updateTitle,\n  updatePaymentPrice,\n  updatePayerName,\n  updateParticipants,\n  // updatePayment,\n}) => {\n  const columns = [\n    {\n      align: 'center' as const,\n      dataIndex: 'title',\n      key: 'title',\n      render: (title: string, record: PaymentItem, index: number) => (\n        <StyledInput\n          maxLength={15}\n          placeholder=\"사용처\"\n          value={title}\n          onChange={(e) => updateTitle(e.target.value, index)}\n        />\n      ),\n      sorter: true,\n      title: '사용처',\n      width: 150,\n    },\n    {\n      align: 'center' as const,\n      dataIndex: 'paymentPrice',\n      render: (paymentPrice: number, record: PaymentItem, index: number) => (\n        <StyledInput\n          value={paymentPrice.toLocaleString()}\n          onChange={(e) => updatePaymentPrice(e.target.value, index)}\n        />\n      ),\n      sorter: true,\n      title: '지출 금액',\n      width: 150,\n    },\n    {\n      align: 'center' as const,\n      dataIndex: 'payerName',\n      key: 'payerName',\n      render: (payerName: string, record: PaymentItem, index: number) => (\n        <SelectUser\n          placeholder=\"결제자\"\n          userList={userList}\n          value={payerName}\n          onChange={(value) => updatePayerName(value, index)}\n        />\n      ),\n      sorter: true,\n      title: '결제자',\n      width: 150,\n    },\n    {\n      align: 'center' as const,\n      dataIndex: 'participants',\n      key: 'participants',\n      render: (participants: string[], record: PaymentItem, index: number) => (\n        <SelectUserList\n          changeSelect={(participants) =>\n            updateParticipants(participants, index)\n          }\n          mode=\"multiple\"\n          placeholder=\"참여자\"\n          userList={userList}\n          value={participants}\n        />\n      ),\n      title: '참여자',\n    },\n  ];\n\n  const Footer = () => (\n    <StyledFooter onClick={addPayment}>\n      <PlusCircleOutlined /> 항목 추가\n    </StyledFooter>\n  );\n\n  return (\n    <StyledContainer>\n      <Table\n        columns={columns}\n        dataSource={paymentList}\n        footer={Footer}\n        rowKey={(record) => record.key}\n      />\n    </StyledContainer>\n  );\n};\nconst StyledContainer = styled.div`\n  table {\n    table-layout: fixed;\n  }\n  .ant-table-footer {\n    padding: 0;\n  }\n`;\nconst StyledFooter = styled.button`\n  width: 100%;\n  padding: 15px;\n  text-align: center;\n  user-select: none;\n  cursor: pointer;\n  &:active,\n  &:hover {\n    opacity: 0.8;\n  }\n`;\nconst StyledInput = styled.input`\n  background: white;\n  border: 1px solid ${({ theme }) => theme.color.borderColor};\n  padding: 5px 10px;\n  border-radius: 5px;\n  width: 100%;\n`;\nconst StyledButton = styled.button`\n  padding: 5px 10px;\n`;\n","import { Select } from 'antd';\nimport React, { FC } from 'react';\nimport styled from 'styled-components';\n\nimport { StepHeader } from '../components/Layout';\nimport { PaymentTable } from '../components/Payment';\nimport { PaymentItem, UserItem } from '../hooks';\n\ninterface Props {\n  userList: UserItem[];\n  paymentList: PaymentItem[];\n  addPayment(): void;\n  updateTitle(value: string, index: number): void;\n  updatePaymentPrice(value: string, index: number): void;\n  updatePayerName(selectedUser: string, index: number): void;\n  updateParticipants(participants: string[], index: number): void;\n}\n\nexport const PaymentListContainer: FC<Props> = ({\n  userList,\n  paymentList,\n  addPayment,\n  updateTitle,\n  updatePaymentPrice,\n  updatePayerName,\n  updateParticipants,\n}) => {\n  return (\n    <StyledSection>\n      <StepHeader description=\"결제내역 입력\" title=\"Step2\" />\n      <PaymentTable\n        addPayment={addPayment}\n        paymentList={paymentList}\n        updateParticipants={updateParticipants}\n        updatePayerName={updatePayerName}\n        updatePaymentPrice={updatePaymentPrice}\n        updateTitle={updateTitle}\n        userList={userList}\n      />\n    </StyledSection>\n  );\n};\n\nconst StyledSection = styled.section`\n  ${({ theme }) => theme.layout.section};\n`;\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\ninterface Props {\n  onClick(): void;\n}\nexport const TemplateSaveButton: FC<Props> = ({ onClick, children }) => {\n  return <StyledButton onClick={() => onClick()}>{children}</StyledButton>;\n};\n\nconst StyledButton = styled.button`\n  user-select: none;\n  cursor: pointer;\n  font-size: 14px;\n  border: 0;\n  background: ${({ theme }) => theme.color.githubColor};\n  color: white;\n  font-weight: bold;\n  border-radius: 4px;\n  padding: 8px 30px;\n  margin-left: auto;\n  margin-bottom: -11px;\n`;\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\nexport const TemplateSaveModal: FC = () => {\n  return <StyledContainer></StyledContainer>;\n};\nconst StyledContainer = styled.div``;\n","import React, { FC } from 'react';\n\nimport { ContentHeader } from '../../../shared/components/Content';\n\ninterface Props {\n  templateName: string;\n}\nexport const TemplateSection: FC<Props> = ({ templateName }) => {\n  return <ContentHeader>{templateName}</ContentHeader>;\n};\n","import React, { FC } from 'react';\n\nimport { TemplateSection } from '../components/Template';\n\nexport const TemplateContainer: FC = () => {\n  return <TemplateSection templateName=\"Template 5\" />;\n};\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\nimport { StepHeader } from '../components/Layout';\nimport { SelectUserList, tagColors } from '../components/User';\nimport { AddUser, UserItem } from '../hooks';\n\ninterface Props {\n  userList: UserItem[];\n  addUser(obj: AddUser): void;\n  removeUser(userName: string): void;\n}\n\nexport const UserListContainer: FC<Props> = ({\n  userList,\n  addUser,\n  removeUser,\n}) => {\n  const changeSelect = (value: string[]) => {\n    if (value.length > userList.length) {\n      addUser({\n        tagColor: tagColors[Math.floor(Math.random() * tagColors.length)],\n        userName: value[value.length - 1],\n      });\n    } else {\n      const filteredUser = userList.filter(\n        (user) => !value.includes(user.userName),\n      );\n      removeUser(filteredUser[0].userName);\n    }\n  };\n\n  return (\n    <StyledSection>\n      <StepHeader description=\"참가자 입력\" title=\"Step1\" />\n      <SelectUserList\n        changeSelect={changeSelect}\n        placeholder=\"Please Select User\"\n        userList={userList}\n        value={userList.map((user) => user.userName)}\n      />\n    </StyledSection>\n  );\n};\nconst StyledSection = styled.section`\n  ${({ theme }) => theme.layout.section};\n\n  .ant-select {\n    width: 100%;\n    font-size: 15px;\n\n    .ant-select-selection-placeholder {\n      left: 22px;\n    }\n    .ant-select-selector {\n      padding: 10px 15px;\n    }\n    .ant-tag {\n      margin-right: 6px;\n      font-size: 15px;\n      padding: 5px 10px;\n    }\n    .ant-tag-close-icon {\n      font-size: 12px;\n      vertical-align: middle;\n      margin: -3px 0 0 9px;\n    }\n  }\n`;\n","import React, { FC, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\n\nimport { RootState } from '../../../redux';\nimport { usePaymentList, useUserList } from '../hooks';\nimport { CalculateContainer } from './CalculateContainer';\nimport { PaymentListContainer } from './PaymentListContainer';\nimport { TemplateContainer } from './TemplateContainer';\nimport { UserListContainer } from './UserListContainer';\n\ninterface Props {\n  templateId: string;\n}\nexport const DutchContainer: FC<Props> = ({ templateId }) => {\n  const template = useSelector((state: RootState) => state.template);\n  const { userList, addUser, removeUser, setUserList } = useUserList();\n  const {\n    paymentList,\n    addPayment,\n    updateParticipants,\n    updatePayerName,\n    updatePaymentPrice,\n    updateTitle,\n    setPaymentList,\n  } = usePaymentList();\n\n  useEffect(() => {\n    const filterTemplate = template.templateList.filter(\n      (item) => item.id === templateId,\n    );\n    if (filterTemplate.length) {\n      setPaymentList(filterTemplate[0].paymentList);\n      setUserList(filterTemplate[0].userList);\n    }\n  }, [templateId]);\n\n  useEffect(() => {\n    // const templateList: TemplateItem[] = [\n    //   {\n    //     paymentList,\n    //     templateName: 'Template 5',\n    //     userList,\n    //   },\n    // ];\n    // localStorage.setItem('templateList', JSON.stringify(templateList));\n  }, [userList, paymentList]);\n\n  return (\n    <StyledContainer>\n      <TemplateContainer />\n      <UserListContainer\n        addUser={addUser}\n        removeUser={removeUser}\n        userList={userList}\n      />\n      <PaymentListContainer\n        addPayment={addPayment}\n        paymentList={paymentList}\n        updateParticipants={updateParticipants}\n        updatePayerName={updatePayerName}\n        updatePaymentPrice={updatePaymentPrice}\n        updateTitle={updateTitle}\n        userList={userList}\n      />\n      <CalculateContainer paymentList={paymentList} userList={userList} />\n    </StyledContainer>\n  );\n};\nconst StyledContainer = styled.div``;\n","import { useState } from 'react';\n\nexport interface UserItem {\n  userName: string;\n  tagColor: string;\n}\nexport interface AddUser {\n  userName: string;\n  tagColor: string;\n}\n\nexport const useUserList = () => {\n  const [userList, setUserList] = useState<UserItem[]>([]);\n\n  const addUser = ({ userName, tagColor }: AddUser) => {\n    setUserList((prevState) => [\n      ...prevState,\n      {\n        tagColor,\n        userName,\n      },\n    ]);\n  };\n\n  const removeUser = (userName: string) => {\n    const filterList = userList.filter((user) => user.userName !== userName);\n    setUserList(filterList);\n  };\n\n  return {\n    addUser,\n    removeUser,\n    setUserList,\n    userList,\n  };\n};\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\nimport { NavibarContainer } from '../../../shared/containers';\n\nexport const DutchPageTemplate: FC = ({ children }) => {\n  return (\n    <StyledTemplate>\n      <NavibarContainer />\n      <StyledWrap>{children}</StyledWrap>\n    </StyledTemplate>\n  );\n};\n\nconst StyledTemplate = styled.div`\n  min-height: 100vh;\n  display: flex;\n`;\nconst StyledWrap = styled.div`\n  flex: 1 1 auto;\n  padding: 16px 30px 20px;\n  border-radius: 10px;\n  border: 1px;\n  overflow: hidden;\n`;\n","import { RouteProps } from 'react-router-dom';\n\nimport { AboutPage } from '../about/pages';\nimport { DutchPage } from '../dutch/pages';\n\nexport const routes: RouteProps[] = [\n  {\n    component: AboutPage,\n    exact: true,\n    path: `/`,\n  },\n  {\n    component: DutchPage,\n    exact: true,\n    path: `/calc/:id`,\n  },\n];\n","import React, { FC } from 'react';\n\nimport { AboutContainer } from '../containers';\nimport { AboutPageTemplate } from './templates';\n\nexport const AboutPage: FC = () => {\n  return (\n    <AboutPageTemplate>\n      <AboutContainer />\n    </AboutPageTemplate>\n  );\n};\n","import React, { FC } from 'react';\nimport { useParams } from 'react-router';\n\nimport { DutchContainer } from '../containers';\nimport { DutchPageTemplate } from './templates';\n\ninterface RouterParams {\n  id: string;\n}\n\nexport const DutchPage: FC = () => {\n  const { id } = useParams<RouterParams>();\n\n  return (\n    <DutchPageTemplate>\n      <DutchContainer templateId={id} />\n    </DutchPageTemplate>\n  );\n};\n","import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nconst GlobalStyle = createGlobalStyle`\n  ${reset}\n  * {\n    box-sizing: border-box;\n  }\n  html, body{\n    color: #2f2936;\n    background-color: #fbfbfc;\n    font-size: 14px;\n    font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"Apple SD Gothic Neo\", \"Malgun Gothic\", \"맑은 고딕\", 나눔고딕, \"Nanum Gothic\", \"Noto Sans KR\", \"Noto Sans CJK KR\", arial, 돋움, Dotum, Tahoma, Geneva, sans-serif !important;\n  }\n  a {\n    color: inherit;\n    text-decoration: none;\n  }\n  input, button {\n    background-color: transparent;\n    border: none;\n    outline: none;\n  }\n  ol, ul, li {\n    list-style: none;\n  }\n  img {\n    display: block;\n    width: 100%;\n    height: 100%;\n  }\n  button {\n    &:active, &:hover {\n      opacity: 0.8;\n    }\n  }\n`;\n\nexport default GlobalStyle;\n","const breakpoint = [375, 414, 768, 960, 1280];\nconst mediaQuery = {\n  /**\n   * Large\n   * \\>= 960px\n   * @example 데스크탑\n   */\n  lg: `@media screen and (min-width: ${breakpoint[3]})`,\n\n  /**\n   * Medium\n   * \\>= 768px\n   * @example 태블릿\n   */\n  md: `@media screen and (min-width: ${breakpoint[2]})`,\n\n  /**\n   * Small\n   * \\>= 414px\n   * @example 큰 모바일 기기, iPhone 8 Plus, iPhone 11 XS Max\n   */\n  sm: `@media screen and (min-width: ${breakpoint[1]})`,\n\n  /**\n   * Extra large\n   * \\>= 1280px\n   * @example 고해상도 데스크탑\n   */\n  xl: `@media screen and (min-width: ${breakpoint[4]})`,\n\n  /**\n   * Extra small\n   * \\>= 375px\n   * @example 일반 모바일 기기, iPhone X\n   */\n  xs: `@media screen and (min-width: ${breakpoint[0]})`,\n  /* eslint-enable */\n};\n\nconst color = {\n  borderColor: '#d9d9d9',\n  githubColor: '#252525',\n  linkColor: '#c84b3a',\n  point: '#5e22e8',\n};\nconst layout = {\n  borderRadius: '5px',\n  section: `\n    margin-bottom: 20px;\n    border: 1px solid #d1cad8;\n    padding: 20px;\n    border-radius: 10px;\n    background: white;\n  `,\n};\n\nexport const theme = {\n  color,\n  layout,\n  mediaQuery,\n};\n\nexport type Theme = typeof theme;\n\nexport default theme;\n","import 'antd/dist/antd.css';\n\nimport React, { Suspense } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\n\nimport { routes } from './modules/shared/routes';\nimport GlobalStyle from './styles/GlobalStyle';\nimport { theme } from './styles/theme';\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <ThemeProvider theme={theme}>\n        <HashRouter basename={process.env.PUBLIC_URL}>\n          <Suspense fallback={<div style={{ minHeight: '100vh' }} />}>\n            <Switch>\n              {routes.map((route, index) => (\n                <Route key={index} {...route} />\n              ))}\n            </Switch>\n          </Suspense>\n        </HashRouter>\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\n\nimport template from './template';\n\nconst rootReducer = combineReducers({\n  template,\n});\n\nexport default rootReducer;\nexport type RootState = ReturnType<typeof rootReducer>;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { applyMiddleware, createStore } from 'redux';\nimport Thunk from 'redux-thunk';\n\nimport App from './App';\nimport rootReducer from './redux';\n\nconst store = createStore(rootReducer, applyMiddleware(Thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}