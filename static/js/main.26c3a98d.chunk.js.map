{"version":3,"sources":["modules/shared/components/Content/ContentHeader.tsx","modules/shared/components/Content/ContentWrap.tsx","modules/about/containers/AboutContainer.tsx","utils/utils.ts","utils/payment.ts","utils/template.ts","utils/user.ts","redux/template.ts","modules/shared/components/Navibar/TemplateAddButton.tsx","modules/shared/components/Navibar/TemplateList.tsx","modules/shared/components/Navibar/Navibar.tsx","modules/shared/containers/NavibarContainer.tsx","modules/about/pages/templates/AboutPageTemplate.tsx","modules/dutch/components/Calculate/PersonalCalculate.tsx","modules/dutch/components/Calculate/TotalPayment.tsx","modules/dutch/components/Layout/StepHeader.tsx","modules/dutch/containers/CalculateContainer.tsx","modules/dutch/components/User/SelectUser.tsx","modules/dutch/components/User/SelectUserListTag.tsx","modules/dutch/components/User/SelectUserList.tsx","modules/dutch/components/Payment/PaymentTable.tsx","modules/dutch/containers/PaymentListContainer.tsx","modules/dutch/components/Template/TemplateHeader.tsx","modules/dutch/containers/TemplateContainer.tsx","modules/dutch/containers/UserListContainer.tsx","modules/dutch/containers/DutchContainer.tsx","modules/dutch/pages/templates/DutchPageTemplate.tsx","modules/shared/routes.ts","modules/about/pages/AboutPage.tsx","modules/dutch/pages/DutchPage.tsx","styles/GlobalStyle.ts","styles/theme/theme.ts","App.tsx","redux/index.ts","index.tsx"],"names":["ContentHeader","children","props","StyledHeader","styled","div","ContentWrap","StyledContainer","StyledReponsiveContent","theme","color","linkColor","point","AboutContainer","uuidv4","replace","c","r","Math","random","toString","sumObjValue","obj","Object","keys","reduce","sum","key","floor","generatePaymentItem","id","participants","payerName","paymentPrice","title","generateTemplate","paymentList","templateName","userList","getTagColor","userName","filteredUser","filter","user","length","tagColor","CREATE_TEMPLATE","SET_TEMPLATE_LIST","UPDATE_TEMPLATE_LIST","UPDATE_SELECTED_ID","DELETE_TEMPLATE_USER","UPDATE_TEMPLATE_USER_LIST","UPDATE_TEMPLATE_PAYMENT_LIST","updateTemplateList","payload","type","updateTemplatePaymentList","initialState","selectedId","templateList","template","state","action","attachTemplateList","localStorage","setItem","JSON","stringify","templateId","targetIndex","findIndex","item","copyTemplateList","filterUserList","filterPaymentList","map","payment","TemplateAddButton","onClick","StyledLi","StyledButton","li","button","TemplateList","index","activeClassName","to","exact","Navibar","onAddTemplate","StyledNavibar","StyledFixed","StyledInfo","StyledPageName","StyledAuthorName","href","target","StyledMenu","section","Link","a","ul","NavibarContainer","useSelector","dispatch","useDispatch","useEffect","storageTemplate","getItem","storageTemplateList","parse","addTemplate","AboutPageTemplate","StyledTemplate","StyledWrap","PersonalCalculate","calculateList","allTossList","StyledGrid","StyledPriceWrap","StyledPaymentTitle","payer","StyledTag","StyledPayment","paymentTotal","sendList","toLocaleString","Tag","span","githubColor","TotalPaymentComponent","allPaymentTotal","prev","curr","TotalPayment","memo","StepHeader","description","StyledTitle","StyledDescription","h3","CalculateContainer","useState","setCalculateList","setAllTossList","perPersonPayment","payerInfo","partName","participantInfo","differencePrice","totalPrice","floorToss","StyledSection","StyledTossUl","participant","StyledTossLi","StyledDesc","StyledGiveMe","tossTotal","StyledTossPayer","StyledTossPrice","StyledTotalPrice","layout","Option","Select","SelectUser","placeholder","value","onChange","style","width","tagColors","SelectUserList","mode","changeSelect","options","label","tagRender","customTag","closable","onClose","SelectUserListTag","PaymentTable","addPayment","updateTitle","updatePaymentPrice","updatePayerName","updateParticipants","columns","align","dataIndex","render","record","StyledInput","maxLength","e","sorter","dataSource","footer","StyledFooter","PlusCircleOutlined","pagination","rowKey","input","borderColor","PaymentListContainer","items","selectedUser","parseInt","formatNumber","TemplateHeader","editTemplateName","isEdit","setEditTemplateName","setIsEdit","onSave","onCancel","onDelete","message","error","StyledIconWrap","CheckOutlined","CloseOutlined","DeleteOutlined","EditOutlined","TemplateContainer","history","useHistory","push","selectedTemplate","UserListContainer","createUser","userItem","removeUser","includes","DutchContainer","useMemo","filterTemplate","DutchPageTemplate","routes","component","path","useParams","GlobalStyle","createGlobalStyle","reset","breakpoint","borderRadius","mediaQuery","lg","md","sm","xl","xs","App","basename","process","fallback","minHeight","route","rootReducer","combineReducers","store","createStore","applyMiddleware","Thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.26c3a98d.chunk.js","sourcesContent":["import React, { FC } from 'react';\nimport styled from 'styled-components';\n\nexport const ContentHeader: FC = ({ children, ...props }) => {\n  return <StyledHeader {...props}>{children}</StyledHeader>;\n};\nconst StyledHeader = styled.div`\n  display: flex;\n  margin: 8px 0px 20px;\n  font-size: 22px;\n  line-height: 22px;\n  font-weight: bold;\n  align-items: center;\n  color: rgb(74, 62, 86);\n`;\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\nexport const ContentWrap: FC = ({ children }) => {\n  return (\n    <StyledContainer>\n      <StyledReponsiveContent>{children}</StyledReponsiveContent>\n    </StyledContainer>\n  );\n};\nconst StyledContainer = styled.div`\n  background: white;\n  border: 1px solid rgb(209, 202, 216);\n  padding: 50px 20px;\n  border-radius: 5px;\n  margin: 20px 0px;\n\n  ul {\n    margin: 5px 0px 0px 40px;\n\n    li {\n      padding: 3px;\n      list-style: outside;\n      line-height: 1.5;\n    }\n  }\n  a {\n    color: ${({ theme }) => theme.color.linkColor};\n    font-weight: bold;\n    text-decoration: underline;\n  }\n  b,\n  strong {\n    font-weight: bold;\n  }\n  h1 {\n    font-size: 2.2857rem;\n    font-weight: bold;\n  }\n  h2 {\n    font-size: 1.6429rem;\n    margin: 60px 0px 20px 0px;\n    padding: 5px 15px;\n    border-left: 3px solid #5fad80;\n    font-weight: bold;\n  }\n  code {\n    font-weight: bold;\n    color: ${({ theme }) => theme.color.point} !important;\n  }\n  p {\n    font-size: 1.125rem;\n    line-height: 1.8;\n    margin: 20px 0px;\n    color: #131518;\n    letter-spacing: -0.004em;\n    word-break: keep-all;\n    overflow-wrap: break-word;\n  }\n\n  block {\n    display: block;\n    padding: 20px;\n  }\n\n  blockquote {\n    margin: 28px 0;\n    padding: 15px 28px;\n    border-left: 3px solid #f3cf00;\n\n    p {\n      margin: 0px;\n    }\n  }\n`;\nconst StyledReponsiveContent = styled.div`\n  max-width: 900px;\n  margin: 0 auto;\n`;\n","import React, { FC } from 'react';\nimport ReactMarkdown from 'react-markdown';\n\nimport { ContentHeader, ContentWrap } from '../../shared/components/Content';\n\nconst markdown = `\n# 우리 더치페이 하자!\n\n간단한 술자리부터 여행까지! 모임을 편하게 정산해 봅시다~\n\n여러분들은 아래 사항 중 하나라도 겪으셨나요??\n\n> \"나중에 계산하기 복잡해! \\`한 명이 다 계산하자.\\`\"  \n> \"1차하고 2차 \\`참여한 사람 다르니까\\` 따로따로 보내줘!\"  \n> \"카드 안 챙겨서 둘리가 내꺼 결제해 줬는데, \\`별도로 반영해 줄 수 있어?\\`\"  \n> \"길동이는 \\`둘리한테 2,000원\\` 보내고, 둘리는 \\`또치 2,000원 / 도우너 3,000원\\` 보내고...\"  \n\n이 외에도 다양하겠지만, 재미있게 놀고 왔는데 머리 아프다니.. 너무 슬프지 않나요?  \n\n그렇다면 여기서 한번 해보세요!  \n\\`빠르고 쉽게 정산\\`하고 \\`송금하는 사람도 편하도록\\` 모든 정산 방법을 넣었습니다.\n\n아직도 \\`\"내가 원하는 기능이 없어!\"\\`라고 생각하면, [Contact](https://minhyeong-jang.github.io/contact)로 문의해 주세요. 확인 후 추가해드릴게요!\n\n## 사용방법\n\n**1. 참가자 입력**\n\n- 참가자를 입력해 주세요.\n\n**2. 결제정보 입력**\n\n- 사용처, 금액을 입력해 주세요.\n- 결제자, 참가자를 선택해 주세요.\n- 나눠서 결제 한 경우, 항목을 추가해서 결제 정보를 결제한 만큼 입력해 주세요.\n- 사용처, 금액, 결제자, 참가자 중 하나라도 정보가 없다면 정산 리스트에 포함되지 않습니다.\n\n**3. 송금정보 확인**\n\n- 참가자의 결제/송금 금액이 출력되며, 각 참가자 정보에는 송금해야 하는 리스트가 출력됩니다.\n- 한 명이 송금 받아서 정산하는 방식으로 전송해도 무관합니다.\n\n## Developer\n\n- Author : [Minhyeong Jang](https://minhyeong-jang.github.io/about)  \n- Email : [public.doriri@gmail.com](mailto:public.doriri@gmail.com)\n\n## Release Note\n\n- March 27, 2021\n  - 템플릿 리스트 적용\n- March 26, 2021\n  - 로컬스토리지 저장 기능 추가\n- March 25, 2021\n  - 단순 정보 확인이 가능하도록 수정, UI 개편\n`;\n\nexport const AboutContainer: FC = () => {\n  return (\n    <>\n      <ContentHeader>Hello Dutch Pay</ContentHeader>\n      <ContentWrap>\n        <ReactMarkdown>{markdown}</ReactMarkdown>\n      </ContentWrap>\n    </>\n  );\n};\n","export const uuidv4 = () => {\n  return 'xxxx-xxxx-xxxx-xxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0,\n      v = c == 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n\nexport const formatNumber = (value: string): number => {\n  return parseInt(value.replace(/[^0-9]/g, ''));\n};\n\n/**\n * Number 값을 가진 Object의 합을 return\n * @param obj\n * @returns number\n */\nexport const sumObjValue = (obj: { [key: string]: number }): number => {\n  return Object.keys(obj).reduce(\n    (sum, key) => sum + Math.floor(obj[key] || 0),\n    0,\n  );\n};\n","import { PaymentItem } from '../types';\nimport { uuidv4 } from './utils';\n\nexport const generatePaymentItem = (): PaymentItem => ({\n  id: uuidv4(),\n  participants: [],\n  payerName: '',\n  paymentPrice: 0,\n  title: '',\n});\n","import { TemplateItem } from '../types';\nimport { generatePaymentItem } from './payment';\nimport { uuidv4 } from './utils';\n\nexport const generateTemplate = (): TemplateItem => ({\n  id: uuidv4(),\n  paymentList: [generatePaymentItem()],\n  templateName: 'New Template',\n  userList: [],\n});\n","// import { CustomTagProps } from 'rc-select/lib/interface/generator';\n\nimport { UserItem } from '../types';\n\n/**\n * 유저 리스트에서 유저 이름으로 태그 컬러값을 리턴합니다.\n * @param userList\n * @param userName\n * @returns color, null\n */\nexport const getTagColor = (userList: UserItem[], userName: string) => {\n  const filteredUser = userList.filter((user) => user.userName === userName);\n  if (filteredUser.length) {\n    return filteredUser[0].tagColor;\n  }\n  return '';\n};\n","import { PaymentItem, TemplateItem, UserItem } from '../types';\nimport { generateTemplate } from '../utils';\n\nconst CREATE_TEMPLATE = 'template/CREATE_TEMPLATE' as const;\nconst SET_TEMPLATE_LIST = 'template/SET_TEMPLATE_LIST' as const;\nconst UPDATE_TEMPLATE_LIST = 'template/UPDATE_TEMPLATE_LIST' as const;\nconst UPDATE_SELECTED_ID = 'template/UPDATE_SELECTED_ID' as const;\nconst DELETE_TEMPLATE_USER = 'template/DELETE_TEMPLATE_USER' as const;\nconst UPDATE_TEMPLATE_USER_LIST = 'template/UPDATE_TEMPLATE_USER_LIST' as const;\nconst UPDATE_TEMPLATE_PAYMENT_LIST = 'template/UPDATE_TEMPLATE_PAYMENT_LIST' as const;\n\nexport const createTemplate = () => ({\n  type: CREATE_TEMPLATE,\n});\nexport const setTemplateList = (payload: TemplateItem[]) => ({\n  payload,\n  type: SET_TEMPLATE_LIST,\n});\ninterface UpdateTemplateList {\n  templateList: TemplateItem[];\n}\nexport const updateTemplateList = (payload: UpdateTemplateList) => ({\n  payload,\n  type: UPDATE_TEMPLATE_LIST,\n});\ninterface UpdateSelectedId {\n  templateId: string;\n}\nexport const updateSelectedId = (payload: UpdateSelectedId) => ({\n  payload,\n  type: UPDATE_SELECTED_ID,\n});\ninterface DeleteTemplateUser {\n  userName: string;\n}\nexport const deleteTemplateUser = (payload: DeleteTemplateUser) => ({\n  payload,\n  type: DELETE_TEMPLATE_USER,\n});\ninterface UpdateTemplateUserList {\n  userList: UserItem[];\n}\nexport const updateTemplateUserList = (payload: UpdateTemplateUserList) => ({\n  payload,\n  type: UPDATE_TEMPLATE_USER_LIST,\n});\n\ninterface UpdateTemplatePaymentList {\n  paymentList: PaymentItem[];\n}\nexport const updateTemplatePaymentList = (\n  payload: UpdateTemplatePaymentList,\n) => ({\n  payload,\n  type: UPDATE_TEMPLATE_PAYMENT_LIST,\n});\n\ntype TemplateAction =\n  | ReturnType<typeof createTemplate>\n  | ReturnType<typeof setTemplateList>\n  | ReturnType<typeof updateTemplateList>\n  | ReturnType<typeof updateSelectedId>\n  | ReturnType<typeof deleteTemplateUser>\n  | ReturnType<typeof updateTemplateUserList>\n  | ReturnType<typeof updateTemplatePaymentList>;\n\ntype TemplateState = {\n  selectedId: string;\n  templateList: TemplateItem[];\n};\n\nconst initialState: TemplateState = {\n  selectedId: '',\n  templateList: [generateTemplate()],\n};\n\nfunction template(\n  state: TemplateState = initialState,\n  action: TemplateAction,\n): TemplateState {\n  switch (action.type) {\n    case CREATE_TEMPLATE: {\n      const attachTemplateList = [...state.templateList, generateTemplate()];\n      localStorage.setItem('templateList', JSON.stringify(attachTemplateList));\n      return { ...state, templateList: attachTemplateList };\n    }\n    case SET_TEMPLATE_LIST: {\n      return { ...state, templateList: action.payload };\n    }\n    case UPDATE_TEMPLATE_LIST: {\n      localStorage.setItem(\n        'templateList',\n        JSON.stringify(action.payload.templateList),\n      );\n      return { ...state, templateList: action.payload.templateList };\n    }\n    case UPDATE_SELECTED_ID: {\n      return { ...state, selectedId: action.payload.templateId };\n    }\n    case DELETE_TEMPLATE_USER: {\n      const targetIndex = state.templateList.findIndex(\n        (item) => item.id === state.selectedId,\n      );\n      if (targetIndex === -1) {\n        return state;\n      }\n      const copyTemplateList = [...state.templateList];\n      const filterUserList = copyTemplateList[targetIndex].userList.filter(\n        (user) => user.userName !== action.payload.userName,\n      );\n      const filterPaymentList = copyTemplateList[targetIndex].paymentList.map(\n        (payment) => ({\n          ...payment,\n          participants: payment.participants.filter(\n            (item) => item !== action.payload.userName,\n          ),\n        }),\n      );\n      copyTemplateList[targetIndex].userList = filterUserList;\n      copyTemplateList[targetIndex].paymentList = filterPaymentList;\n      localStorage.setItem('templateList', JSON.stringify(copyTemplateList));\n      return { ...state, templateList: copyTemplateList };\n    }\n    case UPDATE_TEMPLATE_USER_LIST: {\n      const targetIndex = state.templateList.findIndex(\n        (item) => item.id === state.selectedId,\n      );\n      if (targetIndex === -1) {\n        return state;\n      }\n      const copyTemplateList = [...state.templateList];\n      copyTemplateList[targetIndex].userList = action.payload.userList;\n      localStorage.setItem('templateList', JSON.stringify(copyTemplateList));\n      return { ...state, templateList: copyTemplateList };\n    }\n    case UPDATE_TEMPLATE_PAYMENT_LIST: {\n      const targetIndex = state.templateList.findIndex(\n        (item) => item.id === state.selectedId,\n      );\n      if (targetIndex === -1) {\n        return state;\n      }\n      const copyTemplateList = [...state.templateList];\n      copyTemplateList[targetIndex].paymentList = action.payload.paymentList;\n      localStorage.setItem('templateList', JSON.stringify(copyTemplateList));\n      return { ...state, templateList: copyTemplateList };\n    }\n    default:\n      return state;\n  }\n}\n\nexport default template;\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\ninterface Props {\n  onClick(): void;\n}\nexport const TemplateAddButton: FC<Props> = ({ onClick }) => {\n  return (\n    <StyledLi>\n      <StyledButton onClick={() => onClick()}>+ Add Template</StyledButton>\n    </StyledLi>\n  );\n};\nconst StyledLi = styled.li`\n  padding-left: 12px;\n`;\nconst StyledButton = styled.button`\n  width: 100%;\n  background: none;\n  border: 1px solid #dedede;\n  color: white;\n  border-radius: 4px;\n  padding: 10px;\n  cursor: pointer;\n  display: block;\n  text-align: center;\n`;\n","import React, { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { TemplateItem } from '../../../../types';\n\ninterface Props {\n  templateList: TemplateItem[];\n}\nexport const TemplateList: FC<Props> = ({ templateList }) => {\n  return (\n    <ul>\n      {templateList.map((template, index) => (\n        <li key={index}>\n          <NavLink activeClassName=\"active\" to={`/calc/${template.id}`} exact>\n            {template.templateName}\n          </NavLink>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { TemplateItem } from '../../../../types';\nimport { TemplateAddButton } from './TemplateAddButton';\nimport { TemplateList } from './TemplateList';\n\ninterface Props {\n  templateList: TemplateItem[];\n  onAddTemplate(): void;\n}\nexport const Navibar: React.FC<Props> = ({ templateList, onAddTemplate }) => {\n  return (\n    <StyledNavibar>\n      <StyledFixed>\n        <StyledInfo>\n          <StyledPageName to=\"/\">Dutch Pay</StyledPageName>\n          <StyledAuthorName\n            href=\"https://minhyeong-jang.github.io/\"\n            target=\"_blank\"\n          >\n            Minhyeong Jang\n          </StyledAuthorName>\n        </StyledInfo>\n        <StyledMenu>\n          <li>\n            <NavLink activeClassName=\"active\" to=\"/\" exact>\n              Hello Dutch Pay\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              activeClassName=\"active\"\n              to={`/calc/${templateList.length ? templateList[0].id : 'null'}`}\n            >\n              Let&#39;s Start Dutch Pay!\n            </NavLink>\n            <TemplateList templateList={templateList} />\n          </li>\n          <TemplateAddButton onClick={onAddTemplate} />\n        </StyledMenu>\n      </StyledFixed>\n    </StyledNavibar>\n  );\n};\n\nconst StyledNavibar = styled.section`\n  position: relative;\n  flex: 0 0 220px;\n  background: rgba(37, 37, 37, 1);\n`;\nconst StyledFixed = styled.div`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  width: 220px;\n`;\nconst StyledInfo = styled.div`\n  display: block;\n  padding: 20px;\n`;\nconst StyledPageName = styled(Link)`\n  display: block;\n  font-weight: bold;\n  font-size: 17px;\n  line-height: 21px;\n  color: white;\n`;\nconst StyledAuthorName = styled.a`\n  display: block;\n  font-size: 14px;\n  color: #aaa;\n  line-height: 19px;\n  font-weight: 500;\n`;\nconst StyledMenu = styled.ul`\n  margin-top: 35px;\n  padding: 0px 20px;\n  line-height: normal;\n\n  & > li {\n    margin-bottom: 10px;\n  }\n\n  ul {\n    padding-left: 13px;\n  }\n  .active {\n    color: white !important;\n    font-weight: bold !important;\n  }\n\n  li {\n    a {\n      display: block;\n      color: rgb(166, 155, 178);\n      font-size: 14px;\n      font-weight: 500;\n      padding: 10px 0px;\n      transition: color 0.2s linear;\n    }\n\n    &:hover {\n      & > a {\n        color: rgb(220, 220, 220);\n      }\n    }\n  }\n`;\n","import React, { FC, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { RootState } from '../../../redux';\nimport { createTemplate, setTemplateList } from '../../../redux/template';\nimport { TemplateItem } from '../../../types';\nimport { Navibar } from '../components/Navibar';\n\nexport const NavibarContainer: FC = () => {\n  const template = useSelector((state: RootState) => state.template);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const storageTemplate = localStorage.getItem('templateList');\n    if (storageTemplate) {\n      const storageTemplateList = JSON.parse(storageTemplate) as TemplateItem[];\n      dispatch(setTemplateList(storageTemplateList));\n    } else {\n      addTemplate();\n    }\n  }, []);\n\n  const addTemplate = () => {\n    dispatch(createTemplate());\n  };\n\n  return (\n    <Navibar templateList={template.templateList} onAddTemplate={addTemplate} />\n  );\n};\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\nimport { NavibarContainer } from '../../../shared/containers';\n\nexport const AboutPageTemplate: FC = ({ children }) => {\n  return (\n    <StyledTemplate>\n      <NavibarContainer />\n      <StyledWrap>{children}</StyledWrap>\n    </StyledTemplate>\n  );\n};\n\nconst StyledTemplate = styled.div`\n  min-height: 100vh;\n  display: flex;\n`;\nconst StyledWrap = styled.div`\n  flex: 1 1 auto;\n  padding: 16px 30px 20px;\n  border-radius: 10px;\n  border: 1px;\n  overflow: hidden;\n`;\n","import { Tag } from 'antd';\nimport React, { FC } from 'react';\nimport styled from 'styled-components';\n\nimport { CalculateItem, CalculateTossItem, UserItem } from '../../../../types';\nimport { getTagColor, sumObjValue } from '../../../../utils';\n\ninterface Props {\n  userList: UserItem[];\n  calculateList: CalculateItem;\n  allTossList: CalculateTossItem;\n}\nexport const PersonalCalculate: FC<Props> = ({\n  userList,\n  calculateList,\n  allTossList,\n}) => {\n  return (\n    <StyledContainer>\n      <StyledGrid>\n        <div />\n        <StyledPriceWrap>\n          <StyledPaymentTitle>총 경비</StyledPaymentTitle>\n          <StyledPaymentTitle>결제한 금액</StyledPaymentTitle>\n          <StyledPaymentTitle>송금할 금액</StyledPaymentTitle>\n          <StyledPaymentTitle>받을 금액</StyledPaymentTitle>\n        </StyledPriceWrap>\n\n        {Object.keys(calculateList).map((payer) => (\n          <>\n            <StyledTag color={getTagColor(userList, payer)}>{payer}</StyledTag>\n            <StyledPriceWrap>\n              <StyledPayment>\n                {(\n                  calculateList[payer].paymentTotal +\n                  sumObjValue(calculateList[payer].sendList) -\n                  (allTossList[payer] || 0)\n                ).toLocaleString()}\n                원\n              </StyledPayment>\n              <StyledPayment>\n                {calculateList[payer].paymentTotal.toLocaleString()}원\n              </StyledPayment>\n              <StyledPayment>\n                {sumObjValue(calculateList[payer].sendList).toLocaleString()}원\n              </StyledPayment>\n              <StyledPayment>\n                {(allTossList[payer] || 0).toLocaleString()}원\n              </StyledPayment>\n            </StyledPriceWrap>\n          </>\n        ))}\n      </StyledGrid>\n    </StyledContainer>\n  );\n};\nconst StyledContainer = styled.div`\n  margin: 30px 0px;\n`;\nconst StyledGrid = styled.div`\n  display: grid;\n  gap: 10px 0;\n  align-items: center;\n  grid-template-columns: 1fr 4fr;\n`;\nconst StyledPriceWrap = styled.div`\n  display: grid;\n  align-items: center;\n  grid-template-columns: repeat(4, 1fr);\n`;\nconst StyledTag = styled(Tag)`\n  font-size: 15px;\n  padding: 6px 20px;\n  text-align: center;\n`;\nconst StyledPaymentTitle = styled.span`\n  font-size: 14px;\n  font-weight: bold;\n  text-align: center;\n  color: ${({ theme }) => theme.color.githubColor};\n`;\nconst StyledPayment = styled.span`\n  font-size: 14px;\n  color: ${({ theme }) => theme.color.githubColor};\n  text-align: center;\n\n  &:not(:last-child) {\n    border-right: 2px solid #999;\n  }\n`;\n","import React, { FC, memo } from 'react';\nimport styled from 'styled-components';\n\nimport { PaymentItem } from '../../../../types';\n\ninterface Props {\n  paymentList: PaymentItem[];\n}\nconst TotalPaymentComponent: FC<Props> = ({ paymentList }) => {\n  const allPaymentTotal = paymentList.reduce(\n    (prev, curr) => prev + curr.paymentPrice,\n    0,\n  );\n  return (\n    <StyledContainer>\n      이번 모임은\n      <StyledPayment>{allPaymentTotal.toLocaleString()}</StyledPayment>원을\n      사용했어요!\n    </StyledContainer>\n  );\n};\nconst StyledContainer = styled.div``;\nconst StyledPayment = styled.span`\n  color: ${({ theme }) => theme.color.point};\n  font-weight: bold;\n  font-size: 20px;\n  margin: 0 3px 0px 8px;\n`;\n\nexport const TotalPayment = memo(TotalPaymentComponent);\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\ninterface Props {\n  title: string;\n  description?: string;\n}\nexport const StepHeader: FC<Props> = ({ title, description }) => {\n  return (\n    <StyledContainer>\n      <StyledTitle>{title}</StyledTitle>\n      {description && <StyledDescription>{description}</StyledDescription>}\n    </StyledContainer>\n  );\n};\nconst StyledContainer = styled.div`\n  margin-bottom: 10px;\n  padding-bottom: 10px;\n`;\nconst StyledTitle = styled.h3`\n  display: inline-block;\n  font-size: 22px;\n  font-weight: bold;\n`;\nconst StyledDescription = styled.span`\n  display: inline-block;\n  margin-left: 15px;\n  font-size: 14px;\n`;\n","import React, { FC, useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\nimport {\n  CalculateItem,\n  CalculateTossItem,\n  PaymentItem,\n  UserItem,\n} from '../../../types';\nimport { PersonalCalculate, TotalPayment } from '../components/Calculate';\nimport { StepHeader } from '../components/Layout';\n\ninterface Props {\n  userList: UserItem[];\n  paymentList: PaymentItem[];\n}\n\nexport const CalculateContainer: FC<Props> = ({ userList, paymentList }) => {\n  const [calculateList, setCalculateList] = useState<CalculateItem>({});\n  const [allTossList, setAllTossList] = useState<CalculateTossItem>({});\n\n  useEffect(() => {\n    if (!userList.length || !paymentList.length) return;\n\n    const calculateList: CalculateItem = {};\n    const sendList = userList.reduce(\n      (prev, curr) => ({ ...prev, [curr.userName]: 0 }),\n      {},\n    );\n    userList.map((user) => {\n      calculateList[user.userName] = {\n        paymentTotal: 0,\n        sendList: { ...sendList },\n      };\n    });\n\n    if (!Object.keys(calculateList).length) return;\n\n    paymentList.map((payment) => {\n      const { paymentPrice, participants, payerName } = payment;\n      if (!paymentPrice || !payerName || !participants.length) return;\n      const perPersonPayment = paymentPrice / participants.length;\n      const payerInfo = calculateList[payerName];\n\n      payerInfo.paymentTotal += paymentPrice;\n\n      participants.map((partName) => {\n        if (partName === payerName) return;\n        const participantInfo = calculateList[partName];\n\n        const differencePrice = payerInfo.sendList[partName] - perPersonPayment;\n        if (differencePrice >= 0) {\n          payerInfo.sendList[partName] = differencePrice;\n        } else {\n          payerInfo.sendList[partName] = 0;\n          participantInfo.sendList[payerName] += -differencePrice;\n        }\n      });\n    });\n    setCalculateList(calculateList);\n  }, [userList, paymentList]);\n\n  useEffect(() => {\n    const allTossList: CalculateTossItem = { totalPrice: 0 };\n\n    userList.map((user) => {\n      Object.keys(calculateList).map((payer) => {\n        const floorToss = Math.floor(\n          calculateList[payer].sendList[user.userName],\n        );\n        allTossList['totalPrice'] += floorToss;\n        allTossList[user.userName] = allTossList[user.userName]\n          ? allTossList[user.userName] + floorToss\n          : floorToss;\n      });\n    });\n\n    setAllTossList(allTossList);\n  }, [calculateList]);\n\n  return (\n    <StyledSection>\n      <StepHeader description=\"송금정보 확인\" title=\"Step3\" />\n      <TotalPayment paymentList={paymentList} />\n      <PersonalCalculate\n        allTossList={allTossList}\n        calculateList={calculateList}\n        userList={userList}\n      />\n\n      {Object.keys(calculateList).map((payer, index) => {\n        const { sendList } = calculateList[payer];\n        return (\n          <StyledTossUl key={index}>\n            {Object.keys(sendList).map((participant, index) =>\n              sendList[participant] ? (\n                <StyledTossLi key={index}>\n                  {payer} -&gt; {participant} :&nbsp;\n                  {Math.floor(sendList[participant]).toLocaleString()}원\n                </StyledTossLi>\n              ) : null,\n            )}\n          </StyledTossUl>\n        );\n      })}\n      {Object.keys(allTossList).length > 0 ? (\n        <>\n          <StyledTitle>\n            한 번에 처리해볼까..?\n            <StyledDesc>* 한 명이 다 송금받아서 정산한다면?</StyledDesc>\n          </StyledTitle>\n          <StyledGiveMe>\n            <StyledTossUl>\n              {Object.keys(calculateList).map((payer, index) => {\n                const { paymentTotal, sendList } = calculateList[payer];\n                const tossTotal = Object.keys(sendList).reduce(\n                  (sum, key) => sum + Math.floor(sendList[key] || 0),\n                  0,\n                );\n                return (\n                  <StyledTossLi key={index}>\n                    <StyledTossPayer>{payer} :</StyledTossPayer>\n                    <StyledTossPrice>\n                      {tossTotal.toLocaleString()}원\n                    </StyledTossPrice>\n                  </StyledTossLi>\n                );\n              })}\n              <StyledTossLi>\n                <StyledTossPayer>Total :</StyledTossPayer>\n                <StyledTossPrice>\n                  {allTossList['totalPrice'].toLocaleString()}원\n                </StyledTossPrice>\n              </StyledTossLi>\n            </StyledTossUl>\n          </StyledGiveMe>\n          <div>\n            <StyledTossUl>\n              {Object.keys(allTossList).map((payer, index) =>\n                payer !== 'totalPrice' && allTossList[payer] !== 0 ? (\n                  <StyledTossLi key={index}>\n                    {payer}(이)가\n                    <StyledTotalPrice>\n                      {allTossList[payer].toLocaleString()}\n                    </StyledTotalPrice>\n                    &nbsp;원을 요청해요!\n                  </StyledTossLi>\n                ) : null,\n              )}\n            </StyledTossUl>\n          </div>\n        </>\n      ) : null}\n    </StyledSection>\n  );\n};\n\nconst StyledSection = styled.section`\n  ${({ theme }) => theme.layout.section};\n`;\nconst StyledGiveMe = styled.div`\n  color: #222;\n  border-top: 1px solid #dedede;\n  font-weight: bold;\n  padding: 10px 0px;\n  ul {\n    margin-top: 10px;\n    margin-left: 15px;\n  }\n`;\nconst StyledTitle = styled.div`\n  font-size: 22px;\n  color: #222;\n  font-weight: bold;\n`;\nconst StyledDesc = styled.div`\n  font-size: 13px;\n  color: #646464;\n  margin: 10px 0px;\n`;\nconst StyledTossUl = styled.ul`\n  padding-left: 20px;\n`;\n\nconst StyledTossLi = styled.li`\n  margin-bottom: 5px;\n  font-size: 15px;\n  list-style-type: disc;\n`;\nconst StyledTotalPrice = styled.span`\n  width: 80px;\n  margin-left: 5px;\n  display: inline-block;\n  text-align: right;\n`;\n\nconst StyledTossPayer = styled.span`\n  display: inline-block;\n  width: 50px;\n`;\nconst StyledTossPrice = styled.span`\n  display: inline-block;\n  width: 100px;\n  text-align: right;\n`;\n","import { Select } from 'antd';\nimport React, { FC } from 'react';\n\nimport { UserItem } from '../../../../types';\n\ninterface Props {\n  userList: UserItem[];\n  value: string;\n  placeholder: string;\n  onChange(value: string): void;\n}\n\nconst { Option } = Select;\nexport const SelectUser: FC<Props> = ({\n  placeholder,\n  value,\n  userList,\n  onChange,\n}) => {\n  return (\n    <Select\n      placeholder={placeholder}\n      style={{ width: '100%' }}\n      value={value}\n      onChange={onChange}\n    >\n      {userList.map((user, index) => (\n        <Option key={index} value={user.userName}>\n          {user.userName}\n        </Option>\n      ))}\n    </Select>\n  );\n};\n","import { Tag as AntdTag } from 'antd';\nimport { CustomTagProps } from 'rc-select/lib/interface/generator';\nimport React from 'react';\n\nexport const tagColors = [\n  'pink',\n  'red',\n  'orange',\n  'cyan',\n  'green',\n  'blue',\n  'purple',\n  'geekblue',\n  'magenta',\n  'volcano',\n  'gold',\n  'success',\n  'processing',\n  'error',\n  'default',\n  'warning',\n];\n\ninterface Props extends CustomTagProps {\n  tagColor: string | null;\n}\nexport const SelectUserListTag = ({\n  tagColor,\n  value,\n  closable,\n  onClose,\n}: Props) => {\n  if (!tagColor) {\n    return <></>;\n  }\n  return (\n    <AntdTag closable={closable} color={tagColor} onClose={onClose}>\n      {value}\n    </AntdTag>\n  );\n};\n","import { Select } from 'antd';\nimport React, { FC } from 'react';\n\nimport { UserItem } from '../../../../types';\nimport { getTagColor } from '../../../../utils';\nimport { SelectUserListTag } from './SelectUserListTag';\n\ninterface Props {\n  userList: UserItem[];\n  value: string[];\n  mode?: 'tags' | 'multiple';\n  placeholder?: string;\n  changeSelect(value: string[]): void;\n}\nexport const SelectUserList: FC<Props> = ({\n  mode = 'tags',\n  value,\n  userList,\n  placeholder,\n  changeSelect,\n}) => {\n  return (\n    <Select\n      mode={mode}\n      options={userList.map((user) => ({\n        label: user.userName,\n        value: user.userName,\n      }))}\n      placeholder={placeholder}\n      style={{\n        width: '100%',\n      }}\n      tagRender={(customTag) =>\n        SelectUserListTag({\n          ...customTag,\n          tagColor: getTagColor(userList, customTag?.value as string),\n        })\n      }\n      value={value}\n      onChange={changeSelect}\n    />\n  );\n};\n","import { PlusCircleOutlined } from '@ant-design/icons';\nimport { Table } from 'antd';\nimport React, { FC } from 'react';\nimport styled from 'styled-components';\n\nimport { PaymentItem, UserItem } from '../../../../types';\nimport { SelectUser, SelectUserList } from '../User';\n\ninterface Props {\n  userList: UserItem[];\n  paymentList: PaymentItem[];\n  addPayment(): void;\n  updateTitle(value: string, index: number): void;\n  updatePaymentPrice(value: string, index: number): void;\n  updatePayerName(selectedUser: string, index: number): void;\n  updateParticipants(participants: string[], index: number): void;\n}\nexport const PaymentTable: FC<Props> = ({\n  paymentList,\n  userList,\n  addPayment,\n  updateTitle,\n  updatePaymentPrice,\n  updatePayerName,\n  updateParticipants,\n  // updatePayment,\n}) => {\n  const columns = [\n    {\n      align: 'center' as const,\n      dataIndex: 'title',\n      key: 'title',\n      render: (title: string, record: PaymentItem, index: number) => (\n        <StyledInput\n          maxLength={15}\n          placeholder=\"사용처\"\n          value={title}\n          onChange={(e) => updateTitle(e.target.value, index)}\n        />\n      ),\n      sorter: true,\n      title: '사용처',\n      width: 150,\n    },\n    {\n      align: 'center' as const,\n      dataIndex: 'paymentPrice',\n      render: (paymentPrice: number, record: PaymentItem, index: number) => (\n        <StyledInput\n          value={paymentPrice.toLocaleString()}\n          onChange={(e) => updatePaymentPrice(e.target.value, index)}\n        />\n      ),\n      sorter: true,\n      title: '지출 금액',\n      width: 150,\n    },\n    {\n      align: 'center' as const,\n      dataIndex: 'payerName',\n      key: 'payerName',\n      render: (payerName: string, record: PaymentItem, index: number) => (\n        <SelectUser\n          placeholder=\"결제자\"\n          userList={userList}\n          value={payerName}\n          onChange={(value) => updatePayerName(value, index)}\n        />\n      ),\n      sorter: true,\n      title: '결제자',\n      width: 150,\n    },\n    {\n      align: 'center' as const,\n      dataIndex: 'participants',\n      key: 'participants',\n      render: (participants: string[], record: PaymentItem, index: number) => (\n        <SelectUserList\n          changeSelect={(participants) =>\n            updateParticipants(participants, index)\n          }\n          mode=\"multiple\"\n          placeholder=\"참여자\"\n          userList={userList}\n          value={participants}\n        />\n      ),\n      title: '참여자',\n    },\n  ];\n\n  const Footer = () => (\n    <StyledFooter onClick={addPayment}>\n      <PlusCircleOutlined /> 항목 추가\n    </StyledFooter>\n  );\n\n  return (\n    <StyledContainer>\n      <Table\n        columns={columns}\n        dataSource={paymentList}\n        footer={Footer}\n        pagination={false}\n        rowKey={(record) => record.id}\n      />\n    </StyledContainer>\n  );\n};\nconst StyledContainer = styled.div`\n  table {\n    table-layout: fixed;\n  }\n  .ant-table {\n    border: 1px solid #dedede;\n    border-radius: 4px;\n    overflow: hidden;\n  }\n  .ant-table-footer {\n    padding: 0;\n  }\n`;\nconst StyledFooter = styled.button`\n  width: 100%;\n  padding: 15px;\n  text-align: center;\n  user-select: none;\n  cursor: pointer;\n  &:active,\n  &:hover {\n    opacity: 0.8;\n  }\n`;\nconst StyledInput = styled.input`\n  background: white;\n  border: 1px solid ${({ theme }) => theme.color.borderColor};\n  padding: 5px 10px;\n  border-radius: 5px;\n  width: 100%;\n`;\n","import React, { FC } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\n\nimport { updateTemplatePaymentList } from '../../../redux/template';\nimport { PaymentItem, UserItem } from '../../../types';\nimport { formatNumber } from '../../../utils';\nimport { generatePaymentItem } from '../../../utils/payment';\nimport { StepHeader } from '../components/Layout';\nimport { PaymentTable } from '../components/Payment';\n\ninterface Props {\n  userList: UserItem[];\n  paymentList: PaymentItem[];\n}\nexport const PaymentListContainer: FC<Props> = ({ userList, paymentList }) => {\n  const dispatch = useDispatch();\n\n  const addPayment = () => {\n    dispatch(\n      updateTemplatePaymentList({\n        paymentList: [...paymentList, generatePaymentItem()],\n      }),\n    );\n  };\n  const updateTitle = (value: string, index: number) => {\n    const items = [...paymentList];\n    items[index]['title'] = value;\n    dispatch(updateTemplatePaymentList({ paymentList: items }));\n  };\n  const updatePaymentPrice = (value: string, index: number) => {\n    const items = [...paymentList];\n    items[index]['paymentPrice'] = formatNumber(value);\n    dispatch(updateTemplatePaymentList({ paymentList: items }));\n  };\n  const updatePayerName = (selectedUser: string, index: number) => {\n    const items = [...paymentList];\n    items[index]['payerName'] = selectedUser;\n    dispatch(updateTemplatePaymentList({ paymentList: items }));\n  };\n  const updateParticipants = (value: string[], index: number) => {\n    const items = [...paymentList];\n    items[index]['participants'] = value;\n    dispatch(updateTemplatePaymentList({ paymentList: items }));\n  };\n\n  return (\n    <StyledSection>\n      <StepHeader description=\"결제내역 입력\" title=\"Step2\" />\n      <PaymentTable\n        addPayment={addPayment}\n        paymentList={paymentList}\n        updateParticipants={updateParticipants}\n        updatePayerName={updatePayerName}\n        updatePaymentPrice={updatePaymentPrice}\n        updateTitle={updateTitle}\n        userList={userList}\n      />\n    </StyledSection>\n  );\n};\n\nconst StyledSection = styled.section`\n  ${({ theme }) => theme.layout.section};\n`;\n","import {\n  CheckOutlined,\n  CloseOutlined,\n  DeleteOutlined,\n  EditOutlined,\n} from '@ant-design/icons';\nimport { message } from 'antd';\nimport React, { ChangeEvent, FC } from 'react';\nimport styled from 'styled-components';\n\nimport { ContentHeader } from '../../../shared/components/Content';\n\ninterface Props {\n  templateName: string;\n  editTemplateName: string;\n  isEdit: boolean;\n  setEditTemplateName(value: string): void;\n  setIsEdit(value: boolean): void;\n  onSave(): void;\n  onCancel(): void;\n  onDelete(): void;\n}\nexport const TemplateHeader: FC<Props> = ({\n  templateName,\n  editTemplateName,\n  isEdit,\n  setEditTemplateName,\n  setIsEdit,\n  onSave,\n  onCancel,\n  onDelete,\n}) => {\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n    if (value.length > 15) {\n      message.error('템플릿 이름은 최대 15자 입니다.');\n    } else {\n      setEditTemplateName(value);\n    }\n  };\n  return (\n    <StyledContainer>\n      {isEdit ? (\n        <StyledInput\n          maxLength={20}\n          placeholder=\"템플릿 이름 최대 20자\"\n          value={editTemplateName}\n          onChange={onChange}\n        />\n      ) : (\n        <ContentHeader>{templateName}</ContentHeader>\n      )}\n      <StyledIconWrap>\n        {isEdit ? (\n          <>\n            <CheckOutlined onClick={() => onSave()} />\n            <CloseOutlined onClick={() => onCancel()} />\n            <DeleteOutlined onClick={() => onDelete()} />\n          </>\n        ) : (\n          <EditOutlined onClick={() => setIsEdit(true)} />\n        )}\n      </StyledIconWrap>\n    </StyledContainer>\n  );\n};\nconst StyledContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\nconst StyledInput = styled.input`\n  width: 150px;\n  font-size: 16px;\n  border: 1px solid #dedede;\n  border-radius: 4px;\n  padding: 8px 10px;\n  margin-bottom: 14px;\n  font-weight: bold;\n`;\nconst StyledIconWrap = styled.div`\n  margin: 11px 0 0 10px;\n\n  svg {\n    font-size: 18px;\n    margin-right: 7px;\n  }\n`;\n","import { message } from 'antd';\nimport React, { FC, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport { RootState } from '../../../redux';\nimport { updateTemplateList } from '../../../redux/template';\nimport { TemplateHeader } from '../components/Template';\n\ninterface Props {\n  templateName: string;\n}\nexport const TemplateContainer: FC<Props> = ({ templateName }) => {\n  const history = useHistory();\n  const template = useSelector((state: RootState) => state.template);\n  const dispatch = useDispatch();\n  const [editTemplateName, setEditTemplateName] = useState(templateName);\n  const [isEdit, setIsEdit] = useState(false);\n\n  useEffect(() => {\n    onCancel();\n  }, [templateName, template.selectedId]);\n\n  const onCancel = () => {\n    setEditTemplateName(templateName);\n    setIsEdit(false);\n  };\n  const onDelete = () => {\n    if (template.templateList.length < 2) {\n      message.error('템플릿은 최소 하나가 있어야해요. :(');\n      return;\n    }\n    const items = [...template.templateList].filter(\n      (item) => item.id !== template.selectedId,\n    );\n    dispatch(updateTemplateList({ templateList: items }));\n    history.push(`/calc/${items[items.length - 1].id}`);\n  };\n  const onSave = () => {\n    const items = [...template.templateList];\n    const selectedTemplate = items.findIndex(\n      (item) => item.id === template.selectedId,\n    );\n    if (selectedTemplate !== -1) {\n      items[selectedTemplate].templateName = editTemplateName;\n      dispatch(updateTemplateList({ templateList: items }));\n      setIsEdit(false);\n    }\n  };\n  return (\n    <TemplateHeader\n      editTemplateName={editTemplateName}\n      isEdit={isEdit}\n      setEditTemplateName={setEditTemplateName}\n      setIsEdit={setIsEdit}\n      templateName={templateName}\n      onCancel={onCancel}\n      onDelete={onDelete}\n      onSave={onSave}\n    />\n  );\n};\n","import React, { FC } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\n\nimport {\n  deleteTemplateUser,\n  updateTemplateUserList,\n} from '../../../redux/template';\nimport { UserItem } from '../../../types/user';\nimport { StepHeader } from '../components/Layout';\nimport { SelectUserList, tagColors } from '../components/User';\n\ninterface Props {\n  userList: UserItem[];\n}\n\nexport const UserListContainer: FC<Props> = ({ userList }) => {\n  const dispatch = useDispatch();\n\n  const createUser = (userItem: UserItem) => {\n    dispatch(\n      updateTemplateUserList({\n        userList: [...userList, userItem],\n      }),\n    );\n  };\n  const removeUser = (userName: string) => {\n    dispatch(deleteTemplateUser({ userName }));\n  };\n  const changeSelect = (value: string[]) => {\n    if (value.length > userList.length) {\n      createUser({\n        tagColor: tagColors[Math.floor(Math.random() * tagColors.length)],\n        userName: value[value.length - 1],\n      });\n    } else {\n      const filteredUser = userList.filter(\n        (user) => !value.includes(user.userName),\n      );\n      removeUser(filteredUser[0].userName);\n    }\n  };\n\n  return (\n    <StyledSection>\n      <StepHeader description=\"참가자 입력\" title=\"Step1\" />\n      <SelectUserList\n        changeSelect={changeSelect}\n        placeholder=\"참가자 입력 & 선택\"\n        userList={userList}\n        value={userList.map((user) => user.userName)}\n      />\n    </StyledSection>\n  );\n};\nconst StyledSection = styled.section`\n  ${({ theme }) => theme.layout.section};\n\n  .ant-select {\n    width: 100%;\n    font-size: 15px;\n\n    .ant-select-selection-placeholder {\n      left: 22px;\n    }\n    .ant-select-selector {\n      padding: 10px 15px;\n      min-height: 54px;\n    }\n    .ant-tag {\n      margin-right: 6px;\n      font-size: 15px;\n      padding: 5px 10px;\n    }\n    .ant-tag-close-icon {\n      font-size: 12px;\n      vertical-align: middle;\n      margin: -3px 0 0 9px;\n    }\n  }\n`;\n","import React, { FC, useEffect, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { RootState } from '../../../redux';\nimport { updateSelectedId } from '../../../redux/template';\nimport { CalculateContainer } from './CalculateContainer';\nimport { PaymentListContainer } from './PaymentListContainer';\nimport { TemplateContainer } from './TemplateContainer';\nimport { UserListContainer } from './UserListContainer';\n\ninterface Props {\n  templateId: string;\n}\nexport const DutchContainer: FC<Props> = ({ templateId }) => {\n  const template = useSelector((state: RootState) => state.template);\n  const dispatch = useDispatch();\n  const selectedTemplate = useMemo(() => {\n    const filterTemplate = template.templateList.filter(\n      (item) => item.id === templateId,\n    );\n\n    if (filterTemplate.length) {\n      return filterTemplate[0];\n    }\n  }, [template, templateId]);\n\n  useEffect(() => {\n    dispatch(updateSelectedId({ templateId }));\n  }, [templateId]);\n\n  if (!selectedTemplate) {\n    return null;\n  }\n\n  return (\n    <StyledContainer>\n      <TemplateContainer templateName={selectedTemplate.templateName} />\n      <UserListContainer userList={selectedTemplate.userList} />\n      <PaymentListContainer\n        paymentList={selectedTemplate.paymentList}\n        userList={selectedTemplate.userList}\n      />\n      <CalculateContainer\n        paymentList={selectedTemplate.paymentList}\n        userList={selectedTemplate.userList}\n      />\n    </StyledContainer>\n  );\n};\nconst StyledContainer = styled.div``;\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\nimport { NavibarContainer } from '../../../shared/containers';\n\nexport const DutchPageTemplate: FC = ({ children }) => {\n  return (\n    <StyledTemplate>\n      <NavibarContainer />\n      <StyledWrap>{children}</StyledWrap>\n    </StyledTemplate>\n  );\n};\n\nconst StyledTemplate = styled.div`\n  min-height: 100vh;\n  display: flex;\n`;\nconst StyledWrap = styled.div`\n  flex: 1 1 auto;\n  padding: 16px 30px 20px;\n  border-radius: 10px;\n  border: 1px;\n  overflow: hidden;\n`;\n","import { RouteProps } from 'react-router-dom';\n\nimport { AboutPage } from '../about/pages';\nimport { DutchPage } from '../dutch/pages';\n\nexport const routes: RouteProps[] = [\n  {\n    component: AboutPage,\n    exact: true,\n    path: `/`,\n  },\n  {\n    component: DutchPage,\n    exact: true,\n    path: `/calc/:id`,\n  },\n];\n","import React, { FC } from 'react';\n\nimport { AboutContainer } from '../containers';\nimport { AboutPageTemplate } from './templates';\n\nexport const AboutPage: FC = () => {\n  return (\n    <AboutPageTemplate>\n      <AboutContainer />\n    </AboutPageTemplate>\n  );\n};\n","import React, { FC } from 'react';\nimport { useParams } from 'react-router';\n\nimport { DutchContainer } from '../containers';\nimport { DutchPageTemplate } from './templates';\n\ninterface RouterParams {\n  id: string;\n}\n\nexport const DutchPage: FC = () => {\n  const { id } = useParams<RouterParams>();\n\n  return (\n    <DutchPageTemplate>\n      <DutchContainer templateId={id} />\n    </DutchPageTemplate>\n  );\n};\n","import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nconst GlobalStyle = createGlobalStyle`\n  ${reset}\n  * {\n    box-sizing: border-box;\n  }\n  html, body{\n    color: #2f2936;\n    background-color: #fbfbfc;\n    font-size: 14px;\n    font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"Apple SD Gothic Neo\", \"Malgun Gothic\", \"맑은 고딕\", 나눔고딕, \"Nanum Gothic\", \"Noto Sans KR\", \"Noto Sans CJK KR\", arial, 돋움, Dotum, Tahoma, Geneva, sans-serif !important;\n  }\n  a {\n    color: inherit;\n    text-decoration: none;\n  }\n  input, button {\n    background-color: transparent;\n    border: none;\n    outline: none;\n  }\n  ol, ul, li {\n    list-style: none;\n  }\n  img {\n    display: block;\n    width: 100%;\n    height: 100%;\n  }\n  button {\n    &:active, &:hover {\n      opacity: 0.8;\n    }\n  }\n`;\n\nexport default GlobalStyle;\n","const breakpoint = [375, 414, 768, 960, 1280];\nconst mediaQuery = {\n  /**\n   * Large\n   * \\>= 960px\n   * @example 데스크탑\n   */\n  lg: `@media screen and (min-width: ${breakpoint[3]})`,\n\n  /**\n   * Medium\n   * \\>= 768px\n   * @example 태블릿\n   */\n  md: `@media screen and (min-width: ${breakpoint[2]})`,\n\n  /**\n   * Small\n   * \\>= 414px\n   * @example 큰 모바일 기기, iPhone 8 Plus, iPhone 11 XS Max\n   */\n  sm: `@media screen and (min-width: ${breakpoint[1]})`,\n\n  /**\n   * Extra large\n   * \\>= 1280px\n   * @example 고해상도 데스크탑\n   */\n  xl: `@media screen and (min-width: ${breakpoint[4]})`,\n\n  /**\n   * Extra small\n   * \\>= 375px\n   * @example 일반 모바일 기기, iPhone X\n   */\n  xs: `@media screen and (min-width: ${breakpoint[0]})`,\n  /* eslint-enable */\n};\n\nconst color = {\n  borderColor: '#d9d9d9',\n  githubColor: '#252525',\n  linkColor: '#c84b3a',\n  point: '#5e22e8',\n};\nconst layout = {\n  borderRadius: '5px',\n  section: `\n    margin-bottom: 20px;\n    border: 1px solid #d1cad8;\n    padding: 20px;\n    border-radius: 10px;\n    background: white;\n  `,\n};\n\nexport const theme = {\n  color,\n  layout,\n  mediaQuery,\n};\n\nexport type Theme = typeof theme;\n\nexport default theme;\n","import 'antd/dist/antd.css';\n\nimport React, { Suspense } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\n\nimport { routes } from './modules/shared/routes';\nimport GlobalStyle from './styles/GlobalStyle';\nimport { theme } from './styles/theme';\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <ThemeProvider theme={theme}>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n          <Suspense fallback={<div style={{ minHeight: '100vh' }} />}>\n            <Switch>\n              {routes.map((route, index) => (\n                <Route key={index} {...route} />\n              ))}\n            </Switch>\n          </Suspense>\n        </BrowserRouter>\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\n\nimport template from './template';\n\nconst rootReducer = combineReducers({\n  template,\n});\n\nexport default rootReducer;\nexport type RootState = ReturnType<typeof rootReducer>;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { applyMiddleware, createStore } from 'redux';\nimport Thunk from 'redux-thunk';\n\nimport App from './App';\nimport rootReducer from './redux';\n\nconst store = createStore(rootReducer, applyMiddleware(Thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}