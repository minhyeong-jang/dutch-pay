{"version":3,"sources":["modules/shared/anlaytics/AdsenseSection.tsx","modules/shared/anlaytics/Analytics.tsx","modules/shared/components/Content/ContentHeader.tsx","modules/shared/components/Content/ContentWrap.tsx","modules/about/containers/AboutContainer.tsx","utils/utils.ts","utils/payment.ts","utils/template.ts","utils/user.ts","redux/template.ts","modules/shared/components/Navibar/TemplateAddButton.tsx","modules/shared/components/Navibar/TemplateList.tsx","modules/shared/components/Navibar/Navibar.tsx","modules/shared/containers/NavibarContainer.tsx","modules/about/pages/templates/AboutPageTemplate.tsx","modules/dutch/components/User/SelectUser.tsx","modules/dutch/components/User/SelectUserListTag.tsx","modules/dutch/components/User/SelectUserList.tsx","modules/dutch/components/Calculate/ManagerGetPriceItem.tsx","modules/dutch/components/Calculate/ManagerSendTab.tsx","modules/dutch/components/Calculate/PersonalSendTab.tsx","modules/dutch/components/Calculate/CalculateTabList.tsx","modules/dutch/components/Calculate/PersonalCalculate.tsx","modules/dutch/components/Calculate/TotalPayment.tsx","modules/dutch/components/Layout/StepHeader.tsx","modules/dutch/containers/CalculateContainer.tsx","modules/dutch/components/Payment/PaymentTable.tsx","modules/dutch/containers/PaymentListContainer.tsx","modules/dutch/components/Template/TemplateHeader.tsx","modules/dutch/containers/TemplateContainer.tsx","modules/dutch/containers/UserListContainer.tsx","modules/dutch/containers/DutchContainer.tsx","modules/dutch/pages/templates/DutchPageTemplate.tsx","modules/shared/routes.ts","modules/about/pages/AboutPage.tsx","modules/dutch/pages/DutchPage.tsx","styles/GlobalStyle.ts","styles/theme/theme.ts","App.tsx","redux/index.ts","index.tsx"],"names":["AdsenseSection","slotNumber","useEffect","className","data-ad-client","data-ad-format","data-ad-slot","data-full-width-responsive","Analytics","Helmet","ContentHeader","children","props","StyledHeader","styled","div","ContentWrap","StyledContainer","StyledReponsiveContent","theme","color","linkColor","point","AboutContainer","uuidv4","replace","c","r","Math","random","toString","sumObjValue","obj","Object","keys","reduce","sum","key","floor","generatePaymentItem","id","participants","payerName","paymentPrice","title","generateTemplate","paymentList","templateName","userList","getTagColor","userName","filteredUser","filter","user","length","tagColor","CREATE_TEMPLATE","SET_TEMPLATE_LIST","UPDATE_TEMPLATE_LIST","UPDATE_SELECTED_ID","DELETE_TEMPLATE_USER","UPDATE_TEMPLATE_USER_LIST","UPDATE_TEMPLATE_PAYMENT_LIST","updateTemplateList","payload","type","updateTemplatePaymentList","initialState","selectedId","templateList","template","state","action","attachTemplateList","localStorage","setItem","JSON","stringify","templateId","targetIndex","findIndex","item","copyTemplateList","filterUserList","filterPaymentList","map","payment","TemplateAddButton","onClick","StyledLi","StyledButton","li","button","TemplateList","index","activeClassName","to","exact","Navibar","onAddTemplate","StyledNavibar","StyledFixed","StyledInfo","StyledPageName","StyledAuthorName","StyledMenu","section","Link","ul","NavibarContainer","useSelector","dispatch","useDispatch","storageTemplate","getItem","storageTemplateList","parse","addTemplate","AboutPageTemplate","StyledTemplate","StyledWrap","Option","Select","SelectUser","placeholder","value","onChange","tagColors","SelectUserList","mode","changeSelect","options","label","style","width","tagRender","customTag","closable","onClose","SelectUserListTag","ManagerGetPriceItem","sendList","isHide","payer","tossTotal","useMemo","StyledSendItem","StyledTag","StyledPrice","toLocaleString","Tag","ManagerSendTab","calculateList","calculateGetPriceList","useState","selectedUser","setSelectedUser","find","StyledDesc","StyledTitle","StyledSelectUser","StyledSendList","StyledTossLi","StyledTotalPrice","githubColor","span","PersonalSendTab","StyledTossUl","participant","TabPane","Tabs","CalculateTabList","StyledTabs","defaultActiveKey","tab","PersonalCalculate","StyledGrid","StyledPriceWrap","StyledPaymentTitle","Fragment","StyledPayment","paymentTotal","TotalPaymentComponent","TotalPayment","memo","StepHeader","description","StyledDescription","h3","CalculateContainer","setCalculateList","setcalculateGetPriceList","prev","curr","perPersonPayment","payerInfo","partName","participantInfo","differencePrice","totalPrice","floorToss","console","log","StyledSection","StyledNoResult","layout","PaymentTable","addPayment","updateTitle","updatePaymentPrice","updatePayerName","updateParticipants","columns","align","dataIndex","render","record","StyledInput","maxLength","e","target","sorter","dataSource","footer","StyledFooter","PlusCircleOutlined","pagination","rowKey","input","borderColor","PaymentListContainer","items","parseInt","formatNumber","TemplateHeader","editTemplateName","isEdit","setEditTemplateName","setIsEdit","onSave","onCancel","onDelete","message","error","StyledIconWrap","CheckOutlined","CloseOutlined","DeleteOutlined","EditOutlined","TemplateContainer","history","useHistory","push","selectedTemplate","UserListContainer","createUser","userItem","removeUser","includes","DutchContainer","filterTemplate","DutchPageTemplate","routes","component","path","useParams","GlobalStyle","createGlobalStyle","reset","breakpoint","borderRadius","mediaQuery","lg","md","sm","xl","xs","App","fallback","minHeight","route","rootReducer","combineReducers","store","createStore","applyMiddleware","Thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.00608f4f.chunk.js","sourcesContent":["/* global dataLayer */\n/* eslint-disable @typescript-eslint/no-unsafe-call */\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\nimport React, { FC, useEffect } from 'react';\n\ninterface Props {\n  slotNumber: number;\n}\nexport const AdsenseSection: FC<Props> = ({ slotNumber }) => {\n  useEffect(() => {\n    // window.dataLayer = window.dataLayer || [];\n    // dataLayer.push({ js: new Date() });\n    // dataLayer.push({ config: 'G-NFG3T2D585' });\n    // adsbygoogle = window.adsbygoogle || [];\n    // adsbygoogle.push({});\n  }, [slotNumber]);\n  return (\n    <ins\n      className=\"adsbygoogle\"\n      data-ad-client=\"ca-pub-6988376755693780\"\n      data-ad-format=\"auto\"\n      data-ad-slot={slotNumber}\n      data-full-width-responsive=\"true\"\n    />\n  );\n};\n","import React, { FC } from 'react';\nimport Helmet from 'react-helmet';\n\nexport const Analytics: FC = () => {\n  return (\n    <>\n      <Helmet>\n        {/* <script>\n          window.dataLayer = window.dataLayer || [];\n          function gtag(){dataLayer.push(arguments);}\n          gtag('js', new Date());\n\n          gtag('config', 'G-NFG3T2D585');\n        </script> */}\n        {/* <script>(adsbygoogle = window.adsbygoogle || []).push({});</script> */}\n      </Helmet>\n    </>\n  );\n};\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\nexport const ContentHeader: FC = ({ children, ...props }) => {\n  return <StyledHeader {...props}>{children}</StyledHeader>;\n};\nconst StyledHeader = styled.div`\n  display: flex;\n  margin: 8px 0px 20px;\n  font-size: 22px;\n  line-height: 22px;\n  font-weight: bold;\n  align-items: center;\n  color: rgb(74, 62, 86);\n`;\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\nexport const ContentWrap: FC = ({ children }) => {\n  return (\n    <StyledContainer>\n      <StyledReponsiveContent>{children}</StyledReponsiveContent>\n    </StyledContainer>\n  );\n};\nconst StyledContainer = styled.div`\n  background: white;\n  border: 1px solid rgb(209, 202, 216);\n  padding: 50px 20px;\n  border-radius: 5px;\n  margin: 20px 0px;\n\n  ul {\n    margin: 5px 0px 0px 40px;\n\n    li {\n      padding: 3px;\n      list-style: outside;\n      line-height: 1.5;\n    }\n  }\n  a {\n    color: ${({ theme }) => theme.color.linkColor};\n    font-weight: bold;\n    text-decoration: underline;\n  }\n  b,\n  strong {\n    font-weight: bold;\n  }\n  h1 {\n    font-size: 2.2857rem;\n    font-weight: bold;\n  }\n  h2 {\n    font-size: 1.6429rem;\n    margin: 60px 0px 20px 0px;\n    padding: 5px 15px;\n    border-left: 3px solid #5fad80;\n    font-weight: bold;\n  }\n  code {\n    font-weight: bold;\n    color: ${({ theme }) => theme.color.point} !important;\n  }\n  p {\n    font-size: 1.125rem;\n    line-height: 1.8;\n    margin: 20px 0px;\n    color: #131518;\n    letter-spacing: -0.004em;\n    word-break: keep-all;\n    overflow-wrap: break-word;\n  }\n\n  block {\n    display: block;\n    padding: 20px;\n  }\n\n  blockquote {\n    margin: 28px 0;\n    padding: 15px 28px;\n    border-left: 3px solid #f3cf00;\n\n    p {\n      margin: 0px;\n    }\n  }\n`;\nconst StyledReponsiveContent = styled.div`\n  max-width: 900px;\n  margin: 0 auto;\n`;\n","import React, { FC } from 'react';\nimport ReactMarkdown from 'react-markdown';\n\nimport { ContentHeader, ContentWrap } from '../../shared/components/Content';\n\nconst markdown = `\n# 우리 더치페이 하자!\n\n간단한 술자리부터 여행까지! 모임을 편하게 정산해 봅시다~\n\n여러분들은 아래 사항 중 하나라도 겪으셨나요??\n\n> \"나중에 계산하기 복잡해! \\`한 명이 다 계산하자.\\`\"  \n> \"1차하고 2차 \\`참여한 사람 다르니까\\` 따로따로 보내줘!\"  \n> \"카드 안 챙겨서 둘리가 내꺼 결제해 줬는데, \\`별도로 반영해 줄 수 있어?\\`\"  \n> \"길동이는 \\`둘리한테 2,000원\\` 보내고, 둘리는 \\`또치 2,000원 / 도우너 3,000원\\` 보내고...\"  \n\n이 외에도 다양하겠지만, 재미있게 놀고 왔는데 머리 아프다니.. 너무 슬프지 않나요?  \n\n그렇다면 여기서 한번 해보세요!  \n\\`빠르고 쉽게 정산\\`하고 \\`송금하는 사람도 편하도록\\` 모든 정산 방법을 넣었습니다.\n\n아직도 \\`\"내가 원하는 기능이 없어!\"\\`라고 생각하면, [Contact](https://minhyeong-jang.github.io/contact)로 문의해 주세요. 확인 후 추가해드릴게요!\n\n## 사용방법\n\n**1. 참가자 입력**\n\n- 참가자를 입력해 주세요.\n\n**2. 결제정보 입력**\n\n- 사용처, 금액을 입력해 주세요.\n- 결제자, 참가자를 선택해 주세요.\n- 나눠서 결제 한 경우, 항목을 추가해서 결제 정보를 결제한 만큼 입력해 주세요.\n- 사용처, 금액, 결제자, 참가자 중 하나라도 정보가 없다면 정산 리스트에 포함되지 않습니다.\n\n**3. 정산결과 확인**\n\n- 참가자의 결제/송금 금액이 출력되며, 각 참가자 정보에는 송금해야 하는 리스트가 출력됩니다.\n- 한 명이 송금 받아서 정산하는 방식으로 전송해도 무관합니다.\n\n## Developer\n\n- Author : [Minhyeong Jang](https://minhyeong-jang.github.io/about)  \n- Email : [public.doriri@gmail.com](mailto:public.doriri@gmail.com)\n\n## Release Note\n- May 22, 2021\n  - 정산 탭 추가 및 UI 개선\n  - URL 접근 오류 수정\n  - 기타 버그 수정\n- March 30, 2021\n  - 템플릿 저장/수정/삭제 추가\n  - 참여자 삭제 오류 수정\n  - UI 개선\n  - 기타 버그 수정\n- March 27, 2021\n  - 템플릿 리스트 적용\n- March 26, 2021\n  - 로컬스토리지 저장 기능 추가\n- March 25, 2021\n  - 단순 정보 확인이 가능하도록 수정, UI 개편\n`;\n\nexport const AboutContainer: FC = () => {\n  return (\n    <>\n      <ContentHeader>Hello Dutch Pay</ContentHeader>\n      <ContentWrap>\n        <ReactMarkdown>{markdown}</ReactMarkdown>\n      </ContentWrap>\n    </>\n  );\n};\n","export const uuidv4 = () => {\n  return 'xxxx-xxxx-xxxx-xxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0,\n      v = c == 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n\nexport const formatNumber = (value: string): number => {\n  return parseInt(value.replace(/[^0-9]/g, ''));\n};\n\n/**\n * Number 값을 가진 Object의 합을 return\n * @param obj\n * @returns number\n */\nexport const sumObjValue = (obj: { [key: string]: number }): number => {\n  return Object.keys(obj).reduce(\n    (sum, key) => sum + Math.floor(obj[key] || 0),\n    0,\n  );\n};\n","import { PaymentItem } from '../types';\nimport { uuidv4 } from './utils';\n\nexport const generatePaymentItem = (): PaymentItem => ({\n  id: uuidv4(),\n  participants: [],\n  payerName: '',\n  paymentPrice: 0,\n  title: '',\n});\n","import { TemplateItem } from '../types';\nimport { generatePaymentItem } from './payment';\nimport { uuidv4 } from './utils';\n\nexport const generateTemplate = (): TemplateItem => ({\n  id: uuidv4(),\n  paymentList: [generatePaymentItem()],\n  templateName: 'New Template',\n  userList: [],\n});\n","// import { CustomTagProps } from 'rc-select/lib/interface/generator';\n\nimport { UserItem } from '../types';\n\n/**\n * 유저 리스트에서 유저 이름으로 태그 컬러값을 리턴합니다.\n * @param userList\n * @param userName\n * @returns color, null\n */\nexport const getTagColor = (userList: UserItem[], userName: string) => {\n  const filteredUser = userList.filter((user) => user.userName === userName);\n  if (filteredUser.length) {\n    return filteredUser[0].tagColor;\n  }\n  return '';\n};\n","import { PaymentItem, TemplateItem, UserItem } from '../types';\nimport { generateTemplate } from '../utils';\n\nconst CREATE_TEMPLATE = 'template/CREATE_TEMPLATE' as const;\nconst SET_TEMPLATE_LIST = 'template/SET_TEMPLATE_LIST' as const;\nconst UPDATE_TEMPLATE_LIST = 'template/UPDATE_TEMPLATE_LIST' as const;\nconst UPDATE_SELECTED_ID = 'template/UPDATE_SELECTED_ID' as const;\nconst DELETE_TEMPLATE_USER = 'template/DELETE_TEMPLATE_USER' as const;\nconst UPDATE_TEMPLATE_USER_LIST = 'template/UPDATE_TEMPLATE_USER_LIST' as const;\nconst UPDATE_TEMPLATE_PAYMENT_LIST = 'template/UPDATE_TEMPLATE_PAYMENT_LIST' as const;\n\nexport const createTemplate = () => ({\n  type: CREATE_TEMPLATE,\n});\nexport const setTemplateList = (payload: TemplateItem[]) => ({\n  payload,\n  type: SET_TEMPLATE_LIST,\n});\ninterface UpdateTemplateList {\n  templateList: TemplateItem[];\n}\nexport const updateTemplateList = (payload: UpdateTemplateList) => ({\n  payload,\n  type: UPDATE_TEMPLATE_LIST,\n});\ninterface UpdateSelectedId {\n  templateId: string;\n}\nexport const updateSelectedId = (payload: UpdateSelectedId) => ({\n  payload,\n  type: UPDATE_SELECTED_ID,\n});\ninterface DeleteTemplateUser {\n  userName: string;\n}\nexport const deleteTemplateUser = (payload: DeleteTemplateUser) => ({\n  payload,\n  type: DELETE_TEMPLATE_USER,\n});\ninterface UpdateTemplateUserList {\n  userList: UserItem[];\n}\nexport const updateTemplateUserList = (payload: UpdateTemplateUserList) => ({\n  payload,\n  type: UPDATE_TEMPLATE_USER_LIST,\n});\n\ninterface UpdateTemplatePaymentList {\n  paymentList: PaymentItem[];\n}\nexport const updateTemplatePaymentList = (\n  payload: UpdateTemplatePaymentList,\n) => ({\n  payload,\n  type: UPDATE_TEMPLATE_PAYMENT_LIST,\n});\n\ntype TemplateAction =\n  | ReturnType<typeof createTemplate>\n  | ReturnType<typeof setTemplateList>\n  | ReturnType<typeof updateTemplateList>\n  | ReturnType<typeof updateSelectedId>\n  | ReturnType<typeof deleteTemplateUser>\n  | ReturnType<typeof updateTemplateUserList>\n  | ReturnType<typeof updateTemplatePaymentList>;\n\ntype TemplateState = {\n  selectedId: string;\n  templateList: TemplateItem[];\n};\n\nconst initialState: TemplateState = {\n  selectedId: '',\n  templateList: [generateTemplate()],\n};\n\nfunction template(\n  state: TemplateState = initialState,\n  action: TemplateAction,\n): TemplateState {\n  switch (action.type) {\n    case CREATE_TEMPLATE: {\n      const attachTemplateList = [...state.templateList, generateTemplate()];\n      localStorage.setItem('templateList', JSON.stringify(attachTemplateList));\n      return { ...state, templateList: attachTemplateList };\n    }\n    case SET_TEMPLATE_LIST: {\n      return { ...state, templateList: action.payload };\n    }\n    case UPDATE_TEMPLATE_LIST: {\n      localStorage.setItem(\n        'templateList',\n        JSON.stringify(action.payload.templateList),\n      );\n      return { ...state, templateList: action.payload.templateList };\n    }\n    case UPDATE_SELECTED_ID: {\n      return { ...state, selectedId: action.payload.templateId };\n    }\n    case DELETE_TEMPLATE_USER: {\n      const targetIndex = state.templateList.findIndex(\n        (item) => item.id === state.selectedId,\n      );\n      if (targetIndex === -1) {\n        return state;\n      }\n      const copyTemplateList = [...state.templateList];\n      const filterUserList = copyTemplateList[targetIndex].userList.filter(\n        (user) => user.userName !== action.payload.userName,\n      );\n      const filterPaymentList = copyTemplateList[targetIndex].paymentList.map(\n        (payment) => ({\n          ...payment,\n          participants: payment.participants.filter(\n            (item) => item !== action.payload.userName,\n          ),\n        }),\n      );\n      copyTemplateList[targetIndex].userList = filterUserList;\n      copyTemplateList[targetIndex].paymentList = filterPaymentList;\n      localStorage.setItem('templateList', JSON.stringify(copyTemplateList));\n      return { ...state, templateList: copyTemplateList };\n    }\n    case UPDATE_TEMPLATE_USER_LIST: {\n      const targetIndex = state.templateList.findIndex(\n        (item) => item.id === state.selectedId,\n      );\n      if (targetIndex === -1) {\n        return state;\n      }\n      const copyTemplateList = [...state.templateList];\n      copyTemplateList[targetIndex].userList = action.payload.userList;\n      localStorage.setItem('templateList', JSON.stringify(copyTemplateList));\n      return { ...state, templateList: copyTemplateList };\n    }\n    case UPDATE_TEMPLATE_PAYMENT_LIST: {\n      const targetIndex = state.templateList.findIndex(\n        (item) => item.id === state.selectedId,\n      );\n      if (targetIndex === -1) {\n        return state;\n      }\n      const copyTemplateList = [...state.templateList];\n      copyTemplateList[targetIndex].paymentList = action.payload.paymentList;\n      localStorage.setItem('templateList', JSON.stringify(copyTemplateList));\n      return { ...state, templateList: copyTemplateList };\n    }\n    default:\n      return state;\n  }\n}\n\nexport default template;\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\ninterface Props {\n  onClick(): void;\n}\nexport const TemplateAddButton: FC<Props> = ({ onClick }) => {\n  return (\n    <StyledLi>\n      <StyledButton onClick={() => onClick()}>+ Add Template</StyledButton>\n    </StyledLi>\n  );\n};\nconst StyledLi = styled.li`\n  padding-left: 12px;\n`;\nconst StyledButton = styled.button`\n  width: 100%;\n  background: none;\n  border: 1px solid #dedede;\n  color: white;\n  border-radius: 4px;\n  padding: 10px;\n  cursor: pointer;\n  display: block;\n  text-align: center;\n`;\n","import React, { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { TemplateItem } from '../../../../types';\n\ninterface Props {\n  templateList: TemplateItem[];\n}\nexport const TemplateList: FC<Props> = ({ templateList }) => {\n  return (\n    <ul>\n      {templateList.map((template, index) => (\n        <li key={index}>\n          <NavLink activeClassName=\"active\" to={`/calc/${template.id}`} exact>\n            {template.templateName}\n          </NavLink>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { TemplateItem } from '../../../../types';\nimport { TemplateAddButton } from './TemplateAddButton';\nimport { TemplateList } from './TemplateList';\n\ninterface Props {\n  templateList: TemplateItem[];\n  onAddTemplate(): void;\n}\nexport const Navibar: React.FC<Props> = ({ templateList, onAddTemplate }) => {\n  return (\n    <StyledNavibar>\n      <StyledFixed>\n        <StyledInfo>\n          <StyledPageName to=\"/\">Dutch Pay</StyledPageName>\n          <StyledAuthorName>온라인 더치페이 계산기</StyledAuthorName>\n        </StyledInfo>\n        <StyledMenu>\n          <li>\n            <NavLink activeClassName=\"active\" to=\"/\" exact>\n              Hello Dutch Pay\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              activeClassName=\"active\"\n              to={`/calc/${templateList.length ? templateList[0].id : 'null'}`}\n            >\n              Let&#39;s Start Dutch Pay!\n            </NavLink>\n            <TemplateList templateList={templateList} />\n          </li>\n          <TemplateAddButton onClick={onAddTemplate} />\n        </StyledMenu>\n      </StyledFixed>\n    </StyledNavibar>\n  );\n};\n\nconst StyledNavibar = styled.section`\n  position: relative;\n  flex: 0 0 220px;\n  background: rgba(37, 37, 37, 1);\n`;\nconst StyledFixed = styled.div`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  width: 220px;\n`;\nconst StyledInfo = styled.div`\n  display: block;\n  padding: 20px;\n`;\nconst StyledPageName = styled(Link)`\n  display: block;\n  font-weight: bold;\n  font-size: 17px;\n  line-height: 21px;\n  color: white;\n  &:hover {\n    color: rgb(220, 220, 220);\n  }\n`;\nconst StyledAuthorName = styled.div`\n  display: block;\n  font-size: 14px;\n  color: #aaa;\n  line-height: 19px;\n  font-weight: 500;\n`;\nconst StyledMenu = styled.ul`\n  margin-top: 35px;\n  padding: 0px 20px;\n  line-height: normal;\n\n  & > li {\n    margin-bottom: 10px;\n  }\n\n  ul {\n    padding-left: 13px;\n  }\n  .active {\n    color: white !important;\n    font-weight: bold !important;\n  }\n\n  li {\n    a {\n      display: block;\n      color: rgb(166, 155, 178);\n      font-size: 14px;\n      font-weight: 500;\n      padding: 10px 0px;\n      transition: color 0.2s linear;\n    }\n\n    &:hover {\n      & > a {\n        color: rgb(220, 220, 220);\n      }\n    }\n  }\n`;\n","import React, { FC, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { RootState } from '../../../redux';\nimport { createTemplate, setTemplateList } from '../../../redux/template';\nimport { TemplateItem } from '../../../types';\nimport { Navibar } from '../components/Navibar';\n\nexport const NavibarContainer: FC = () => {\n  const template = useSelector((state: RootState) => state.template);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const storageTemplate = localStorage.getItem('templateList');\n    if (storageTemplate) {\n      const storageTemplateList = JSON.parse(storageTemplate) as TemplateItem[];\n      dispatch(setTemplateList(storageTemplateList));\n    } else {\n      addTemplate();\n    }\n  }, []);\n\n  const addTemplate = () => {\n    dispatch(createTemplate());\n  };\n\n  return (\n    <Navibar templateList={template.templateList} onAddTemplate={addTemplate} />\n  );\n};\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\nimport { NavibarContainer } from '../../../shared/containers';\n\nexport const AboutPageTemplate: FC = ({ children }) => {\n  return (\n    <StyledTemplate>\n      <NavibarContainer />\n      <StyledWrap>{children}</StyledWrap>\n    </StyledTemplate>\n  );\n};\n\nconst StyledTemplate = styled.div`\n  min-height: 100vh;\n  display: flex;\n`;\nconst StyledWrap = styled.div`\n  flex: 1 1 auto;\n  padding: 16px 30px 20px;\n  border-radius: 10px;\n  border: 1px;\n  overflow: hidden;\n`;\n","import { Select } from 'antd';\nimport React, { FC } from 'react';\n\nimport { UserItem } from '../../../../types';\n\ninterface Props {\n  className?: string;\n  userList: UserItem[];\n  value: string;\n  placeholder: string;\n  onChange(value: string): void;\n}\n\nconst { Option } = Select;\nexport const SelectUser: FC<Props> = ({\n  className,\n  placeholder,\n  value,\n  userList,\n  onChange,\n}) => {\n  return (\n    <Select\n      className={className}\n      placeholder={placeholder}\n      value={value}\n      onChange={onChange}\n    >\n      {userList.map((user, index) => (\n        <Option key={index} value={user.userName}>\n          {user.userName}\n        </Option>\n      ))}\n    </Select>\n  );\n};\n","import { Tag as AntdTag } from 'antd';\nimport { CustomTagProps } from 'rc-select/lib/interface/generator';\nimport React from 'react';\n\nexport const tagColors = [\n  'pink',\n  'red',\n  'orange',\n  'cyan',\n  'green',\n  'blue',\n  'purple',\n  'geekblue',\n  'magenta',\n  'volcano',\n  'gold',\n  'success',\n  'processing',\n  'error',\n  'default',\n  'warning',\n];\n\ninterface Props extends CustomTagProps {\n  tagColor: string | null;\n}\nexport const SelectUserListTag = ({\n  tagColor,\n  value,\n  closable,\n  onClose,\n}: Props) => {\n  if (!tagColor) {\n    return <></>;\n  }\n  return (\n    <AntdTag closable={closable} color={tagColor} onClose={onClose}>\n      {value}\n    </AntdTag>\n  );\n};\n","import { Select } from 'antd';\nimport React, { FC } from 'react';\n\nimport { UserItem } from '../../../../types';\nimport { getTagColor } from '../../../../utils';\nimport { SelectUserListTag } from './SelectUserListTag';\n\ninterface Props {\n  userList: UserItem[];\n  value: string[];\n  mode?: 'tags' | 'multiple';\n  placeholder?: string;\n  changeSelect(value: string[]): void;\n}\nexport const SelectUserList: FC<Props> = ({\n  mode = 'tags',\n  value,\n  userList,\n  placeholder,\n  changeSelect,\n}) => {\n  return (\n    <Select\n      mode={mode}\n      options={userList.map((user) => ({\n        label: user.userName,\n        value: user.userName,\n      }))}\n      placeholder={placeholder}\n      style={{\n        width: '100%',\n      }}\n      tagRender={(customTag) =>\n        SelectUserListTag({\n          ...customTag,\n          tagColor: getTagColor(userList, customTag?.value as string),\n        })\n      }\n      value={value}\n      onChange={changeSelect}\n    />\n  );\n};\n","import { Tag } from 'antd';\nimport React, { FC, useMemo } from 'react';\nimport styled from 'styled-components';\n\nimport { SendList } from '../../../../types';\n\ninterface Props {\n  sendList: SendList;\n  payer: string;\n  color: string;\n  isHide: boolean;\n}\nexport const ManagerGetPriceItem: FC<Props> = ({\n  sendList,\n  color,\n  isHide,\n  payer,\n}) => {\n  if (isHide) return null;\n  const tossTotal = useMemo(() => {\n    return Object.keys(sendList).reduce(\n      (sum, key) => sum + Math.floor(sendList[key] || 0),\n      0,\n    );\n  }, [sendList]);\n\n  if (tossTotal === 0) return null;\n\n  return (\n    <StyledSendItem>\n      <StyledTag color={color}>{payer}</StyledTag>\n      <StyledPrice>{tossTotal.toLocaleString()}원</StyledPrice>\n    </StyledSendItem>\n  );\n};\nconst StyledSendItem = styled.li`\n  display: flex;\n  align-items: center;\n  margin: 10px 0px;\n`;\nconst StyledTag = styled(Tag)`\n  font-size: 15px;\n  padding: 6px 20px;\n  text-align: center;\n  margin-right: 20px;\n  min-width: 110px;\n`;\nconst StyledPrice = styled.div`\n  display: inline-block;\n  min-width: 100px;\n  text-align: right;\n`;\n","import React, { FC, useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\nimport {\n  CalculateGetPriceItem,\n  CalculateItem,\n  UserItem,\n} from '../../../../types';\nimport { getTagColor } from '../../../../utils';\nimport { SelectUser } from '../User';\nimport { ManagerGetPriceItem } from './ManagerGetPriceItem';\n\ninterface Props {\n  userList: UserItem[];\n  calculateList: CalculateItem;\n  calculateGetPriceList: CalculateGetPriceItem;\n}\nexport const ManagerSendTab: FC<Props> = ({\n  userList,\n  calculateList,\n  calculateGetPriceList,\n}) => {\n  const [selectedUser, setSelectedUser] = useState('');\n\n  useEffect(() => {\n    if (userList.length) {\n      if (!userList.find((item) => item.userName === selectedUser)) {\n        setSelectedUser(userList[0].userName);\n      }\n    } else {\n      setSelectedUser('');\n    }\n  }, [userList]);\n\n  if (!Object.keys(calculateGetPriceList).length) {\n    return null;\n  }\n  return (\n    <StyledContainer>\n      <StyledDesc>\n        <b>일괄 송금이란?</b>\n        <br />\n        대표 한 명이 모든 송금 금액을 받아 결제자들에게 분할하는 방식입니다.\n        <br />\n        효율적으로 정산하여 각자 송금하는 방식보다 송금 횟수가 줄어듭니다.\n      </StyledDesc>\n      <StyledTitle>1. 대표자 선택</StyledTitle>\n      <StyledSelectUser\n        placeholder=\"대표자\"\n        userList={userList}\n        value={selectedUser}\n        onChange={(value) => setSelectedUser(value)}\n      />\n      <StyledTitle>2. 대표자에게 송금하기</StyledTitle>\n      <StyledDesc>\n        참가자들은 아래 금액만큼 <b>{selectedUser}</b>님에게 송금해주세요.\n        <br />\n        전체 송금 금액 : {calculateGetPriceList['totalPrice'].toLocaleString()}\n        원\n      </StyledDesc>\n      <StyledSendList>\n        {Object.keys(calculateList).map((payer, index) => (\n          <ManagerGetPriceItem\n            key={index}\n            color={getTagColor(userList, payer)}\n            isHide={payer === selectedUser}\n            payer={payer}\n            sendList={calculateList[payer].sendList}\n          />\n        ))}\n      </StyledSendList>\n\n      <StyledTitle>3. 결제자에게 송금하기</StyledTitle>\n      <StyledSendList>\n        {Object.keys(calculateGetPriceList).map((payer, index) =>\n          payer !== 'totalPrice' && calculateGetPriceList[payer] !== 0 ? (\n            <StyledTossLi key={index}>\n              {payer}님이\n              <StyledTotalPrice>\n                {calculateGetPriceList[payer].toLocaleString()}\n              </StyledTotalPrice>\n              &nbsp;원을 요청해요!\n            </StyledTossLi>\n          ) : null,\n        )}\n      </StyledSendList>\n    </StyledContainer>\n  );\n};\nconst StyledContainer = styled.div``;\nconst StyledDesc = styled.div`\n  font-size: 14px;\n  color: #646464;\n  margin: 10px 0px;\n\n  b {\n    font-weight: bold;\n  }\n`;\nconst StyledTitle = styled.div`\n  font-size: 20px;\n  color: ${({ theme }) => theme.color.githubColor};\n  font-weight: bold;\n  margin: 50px 0 15px;\n`;\nconst StyledSelectUser = styled(SelectUser)`\n  width: 200px;\n`;\nconst StyledSendList = styled.ul`\n  margin: 20px 0px;\n`;\nconst StyledTossLi = styled.li`\n  margin-bottom: 5px;\n  font-size: 15px;\n`;\nconst StyledTotalPrice = styled.span`\n  width: 80px;\n  margin-left: 5px;\n  display: inline-block;\n  text-align: right;\n`;\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\nimport { CalculateItem } from '../../../../types';\n\ninterface Props {\n  calculateList: CalculateItem;\n}\nexport const PersonalSendTab: FC<Props> = ({ calculateList }) => {\n  return (\n    <StyledContainer>\n      {Object.keys(calculateList).map((payer, index) => {\n        const { sendList } = calculateList[payer];\n        return (\n          <StyledTossUl key={index}>\n            {Object.keys(sendList).map((participant, index) =>\n              sendList[participant] ? (\n                <StyledTossLi key={index}>\n                  {payer} -&gt; {participant} :&nbsp;\n                  {Math.floor(sendList[participant]).toLocaleString()}원\n                </StyledTossLi>\n              ) : null,\n            )}\n          </StyledTossUl>\n        );\n      })}\n    </StyledContainer>\n  );\n};\nconst StyledContainer = styled.div``;\n\nconst StyledTossUl = styled.ul`\n  padding-left: 20px;\n`;\nconst StyledTossLi = styled.li`\n  margin-bottom: 5px;\n  font-size: 15px;\n  list-style-type: disc;\n`;\n","import { Tabs } from 'antd';\nimport React, { FC } from 'react';\n\nconst { TabPane } = Tabs;\n\nimport styled from 'styled-components';\n\nimport {\n  CalculateGetPriceItem,\n  CalculateItem,\n  UserItem,\n} from '../../../../types';\nimport { ManagerSendTab } from './ManagerSendTab';\nimport { PersonalSendTab } from './PersonalSendTab';\n\ninterface Props {\n  userList: UserItem[];\n  calculateList: CalculateItem;\n  calculateGetPriceList: CalculateGetPriceItem;\n}\nexport const CalculateTabList: FC<Props> = ({\n  userList,\n  calculateList,\n  calculateGetPriceList,\n}) => {\n  return (\n    <StyledContainer>\n      <StyledTabs defaultActiveKey=\"1\">\n        <TabPane key=\"1\" tab=\"일괄 송금\">\n          <ManagerSendTab\n            calculateGetPriceList={calculateGetPriceList}\n            calculateList={calculateList}\n            userList={userList}\n          />\n        </TabPane>\n        <TabPane key=\"2\" tab=\"각자 송금\">\n          <PersonalSendTab calculateList={calculateList} />\n        </TabPane>\n      </StyledTabs>\n    </StyledContainer>\n  );\n};\nconst StyledContainer = styled.div`\n  margin: 20px 0px;\n`;\nconst StyledTabs = styled(Tabs)`\n  .ant-tabs-nav-wrap {\n    justify-content: center;\n\n    .ant-tabs-ink-bar {\n      background: ${({ theme }) => theme.color.point} !important;\n    }\n  }\n  .ant-tabs-tab {\n    font-size: 17px;\n\n    &.ant-tabs-tab-active .ant-tabs-tab-btn {\n      color: ${({ theme }) => theme.color.point} !important;\n      font-weight: bold;\n    }\n  }\n`;\n","import { Tag } from 'antd';\nimport React, { FC } from 'react';\nimport styled from 'styled-components';\n\nimport {\n  CalculateGetPriceItem,\n  CalculateItem,\n  UserItem,\n} from '../../../../types';\nimport { getTagColor, sumObjValue } from '../../../../utils';\n\ninterface Props {\n  userList: UserItem[];\n  calculateList: CalculateItem;\n  calculateGetPriceList: CalculateGetPriceItem;\n}\nexport const PersonalCalculate: FC<Props> = ({\n  userList,\n  calculateList,\n  calculateGetPriceList,\n}) => {\n  return (\n    <StyledContainer>\n      <StyledGrid>\n        <div />\n        <StyledPriceWrap>\n          <StyledPaymentTitle>총 경비</StyledPaymentTitle>\n          <StyledPaymentTitle>결제한 금액</StyledPaymentTitle>\n          <StyledPaymentTitle>송금할 금액</StyledPaymentTitle>\n          <StyledPaymentTitle>받을 금액</StyledPaymentTitle>\n        </StyledPriceWrap>\n\n        {Object.keys(calculateList).map((payer, index) => (\n          <React.Fragment key={index}>\n            <StyledTag color={getTagColor(userList, payer)}>{payer}</StyledTag>\n            <StyledPriceWrap>\n              <StyledPayment>\n                {(\n                  calculateList[payer].paymentTotal +\n                  sumObjValue(calculateList[payer].sendList) -\n                  (calculateGetPriceList[payer] || 0)\n                ).toLocaleString()}\n                원\n              </StyledPayment>\n              <StyledPayment>\n                {calculateList[payer].paymentTotal.toLocaleString()}원\n              </StyledPayment>\n              <StyledPayment>\n                {sumObjValue(calculateList[payer].sendList).toLocaleString()}원\n              </StyledPayment>\n              <StyledPayment>\n                {(calculateGetPriceList[payer] || 0).toLocaleString()}원\n              </StyledPayment>\n            </StyledPriceWrap>\n          </React.Fragment>\n        ))}\n      </StyledGrid>\n    </StyledContainer>\n  );\n};\nconst StyledContainer = styled.div`\n  margin: 30px 0px;\n`;\nconst StyledGrid = styled.div`\n  display: grid;\n  gap: 10px 0;\n  align-items: center;\n  grid-template-columns: 1fr 4fr;\n`;\nconst StyledPriceWrap = styled.div`\n  display: grid;\n  align-items: center;\n  grid-template-columns: repeat(4, 1fr);\n`;\nconst StyledTag = styled(Tag)`\n  font-size: 15px;\n  padding: 6px 20px;\n  text-align: center;\n`;\nconst StyledPaymentTitle = styled.span`\n  font-size: 14px;\n  font-weight: bold;\n  text-align: center;\n  color: ${({ theme }) => theme.color.githubColor};\n`;\nconst StyledPayment = styled.span`\n  font-size: 14px;\n  color: ${({ theme }) => theme.color.githubColor};\n  text-align: center;\n\n  &:not(:last-child) {\n    border-right: 2px solid #999;\n  }\n`;\n","import React, { FC, memo } from 'react';\nimport styled from 'styled-components';\n\ninterface Props {\n  paymentTotal: number;\n}\nconst TotalPaymentComponent: FC<Props> = ({ paymentTotal }) => {\n  return (\n    <StyledContainer>\n      이번 모임은\n      <StyledPayment>{paymentTotal.toLocaleString()}</StyledPayment>원을\n      사용했어요!\n    </StyledContainer>\n  );\n};\nconst StyledContainer = styled.div``;\nconst StyledPayment = styled.span`\n  color: ${({ theme }) => theme.color.point};\n  font-weight: bold;\n  font-size: 20px;\n  margin: 0 3px 0px 8px;\n`;\n\nexport const TotalPayment = memo(TotalPaymentComponent);\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\ninterface Props {\n  title: string;\n  description?: string;\n}\nexport const StepHeader: FC<Props> = ({ title, description }) => {\n  return (\n    <StyledContainer>\n      <StyledTitle>{title}</StyledTitle>\n      {description && <StyledDescription>{description}</StyledDescription>}\n    </StyledContainer>\n  );\n};\nconst StyledContainer = styled.div`\n  margin-bottom: 10px;\n  padding-bottom: 10px;\n`;\nconst StyledTitle = styled.h3`\n  display: inline-block;\n  font-size: 22px;\n  font-weight: bold;\n`;\nconst StyledDescription = styled.span`\n  display: inline-block;\n  margin-left: 15px;\n  font-size: 14px;\n`;\n","import React, { FC, useEffect, useMemo, useState } from 'react';\nimport styled from 'styled-components';\n\nimport {\n  CalculateGetPriceItem,\n  CalculateItem,\n  PaymentItem,\n  UserItem,\n} from '../../../types';\nimport {\n  CalculateTabList,\n  PersonalCalculate,\n  TotalPayment,\n} from '../components/Calculate';\nimport { StepHeader } from '../components/Layout';\n\ninterface Props {\n  userList: UserItem[];\n  paymentList: PaymentItem[];\n}\nexport const CalculateContainer: FC<Props> = ({ userList, paymentList }) => {\n  const [calculateList, setCalculateList] = useState<CalculateItem>({});\n  const [\n    calculateGetPriceList,\n    setcalculateGetPriceList,\n  ] = useState<CalculateGetPriceItem>({});\n  const paymentTotal = useMemo(\n    () => paymentList.reduce((prev, curr) => prev + curr.paymentPrice, 0),\n    [paymentList],\n  );\n\n  useEffect(() => {\n    const calculateList: CalculateItem = {};\n    const sendList = userList.reduce(\n      (prev, curr) => ({ ...prev, [curr.userName]: 0 }),\n      {},\n    );\n    userList.map((user) => {\n      calculateList[user.userName] = {\n        paymentTotal: 0,\n        sendList: { ...sendList },\n      };\n    });\n\n    paymentList.map((payment) => {\n      const { paymentPrice, participants, payerName } = payment;\n      if (!paymentPrice || !payerName || !participants.length) return;\n      const perPersonPayment = paymentPrice / participants.length;\n      const payerInfo = calculateList[payerName];\n\n      payerInfo.paymentTotal += paymentPrice;\n\n      participants.map((partName) => {\n        if (partName === payerName) return;\n        const participantInfo = calculateList[partName];\n\n        const differencePrice = payerInfo.sendList[partName] - perPersonPayment;\n        if (differencePrice >= 0) {\n          payerInfo.sendList[partName] = differencePrice;\n        } else {\n          payerInfo.sendList[partName] = 0;\n          participantInfo.sendList[payerName] += -differencePrice;\n        }\n      });\n    });\n    setCalculateList(calculateList);\n  }, [userList, paymentList]);\n\n  useEffect(() => {\n    const sendList: CalculateGetPriceItem = { totalPrice: 0 };\n\n    userList.map((user) => {\n      Object.keys(calculateList).map((payer) => {\n        const floorToss = Math.floor(\n          calculateList[payer].sendList[user.userName],\n        );\n        sendList['totalPrice'] += floorToss;\n        sendList[user.userName] = sendList[user.userName]\n          ? sendList[user.userName] + floorToss\n          : floorToss;\n      });\n    });\n\n    setcalculateGetPriceList(sendList);\n  }, [calculateList]);\n\n  if (!paymentTotal) {\n    return (\n      <StyledSection>\n        <StepHeader description=\"정산결과 확인\" title=\"Step3\" />\n        <StyledNoResult>결제내역을 먼저 입력해주세요 📝</StyledNoResult>\n      </StyledSection>\n    );\n  }\n  console.log(calculateList);\n  console.log(calculateGetPriceList);\n  return (\n    <StyledSection>\n      <StepHeader description=\"정산결과 확인\" title=\"Step3\" />\n      <TotalPayment paymentTotal={paymentTotal} />\n      <PersonalCalculate\n        calculateGetPriceList={calculateGetPriceList}\n        calculateList={calculateList}\n        userList={userList}\n      />\n      <CalculateTabList\n        calculateGetPriceList={calculateGetPriceList}\n        calculateList={calculateList}\n        userList={userList}\n      />\n    </StyledSection>\n  );\n};\n\nconst StyledSection = styled.section`\n  ${({ theme }) => theme.layout.section};\n`;\nconst StyledNoResult = styled.div`\n  font-size: 14px;\n  margin: 20px 0px 10px;\n  color: ${({ theme }) => theme.color.point};\n`;\n","import { PlusCircleOutlined } from '@ant-design/icons';\nimport { Table } from 'antd';\nimport React, { FC } from 'react';\nimport styled from 'styled-components';\n\nimport { PaymentItem, UserItem } from '../../../../types';\nimport { SelectUser, SelectUserList } from '../User';\n\ninterface Props {\n  userList: UserItem[];\n  paymentList: PaymentItem[];\n  addPayment(): void;\n  updateTitle(value: string, index: number): void;\n  updatePaymentPrice(value: string, index: number): void;\n  updatePayerName(selectedUser: string, index: number): void;\n  updateParticipants(participants: string[], index: number): void;\n}\nexport const PaymentTable: FC<Props> = ({\n  paymentList,\n  userList,\n  addPayment,\n  updateTitle,\n  updatePaymentPrice,\n  updatePayerName,\n  updateParticipants,\n  // updatePayment,\n}) => {\n  const columns = [\n    {\n      align: 'center' as const,\n      dataIndex: 'title',\n      key: 'title',\n      render: (title: string, record: PaymentItem, index: number) => (\n        <StyledInput\n          maxLength={15}\n          placeholder=\"사용처\"\n          value={title}\n          onChange={(e) => updateTitle(e.target.value, index)}\n        />\n      ),\n      sorter: true,\n      title: '사용처',\n      width: 150,\n    },\n    {\n      align: 'center' as const,\n      dataIndex: 'paymentPrice',\n      render: (paymentPrice: number, record: PaymentItem, index: number) => (\n        <StyledInput\n          value={paymentPrice.toLocaleString()}\n          onChange={(e) => updatePaymentPrice(e.target.value, index)}\n        />\n      ),\n      sorter: true,\n      title: '지출 금액',\n      width: 150,\n    },\n    {\n      align: 'center' as const,\n      dataIndex: 'payerName',\n      key: 'payerName',\n      render: (payerName: string, record: PaymentItem, index: number) => (\n        <SelectUser\n          placeholder=\"결제자\"\n          userList={userList}\n          value={payerName}\n          onChange={(value) => updatePayerName(value, index)}\n        />\n      ),\n      sorter: true,\n      title: '결제자',\n      width: 150,\n    },\n    {\n      align: 'center' as const,\n      dataIndex: 'participants',\n      key: 'participants',\n      render: (participants: string[], record: PaymentItem, index: number) => (\n        <SelectUserList\n          changeSelect={(participants) =>\n            updateParticipants(participants, index)\n          }\n          mode=\"multiple\"\n          placeholder=\"참여자\"\n          userList={userList}\n          value={participants}\n        />\n      ),\n      title: '참여자',\n    },\n  ];\n\n  const Footer = () => (\n    <StyledFooter onClick={addPayment}>\n      <PlusCircleOutlined /> 항목 추가\n    </StyledFooter>\n  );\n\n  return (\n    <StyledContainer>\n      <Table\n        columns={columns}\n        dataSource={paymentList}\n        footer={Footer}\n        pagination={false}\n        rowKey={(record) => record.id}\n      />\n    </StyledContainer>\n  );\n};\nconst StyledContainer = styled.div`\n  table {\n    table-layout: fixed;\n  }\n  .ant-table {\n    border: 1px solid #dedede;\n    border-radius: 4px;\n    overflow: hidden;\n  }\n  .ant-table-footer {\n    padding: 0;\n  }\n`;\nconst StyledFooter = styled.button`\n  width: 100%;\n  padding: 15px;\n  text-align: center;\n  user-select: none;\n  cursor: pointer;\n  &:active,\n  &:hover {\n    opacity: 0.8;\n  }\n`;\nconst StyledInput = styled.input`\n  background: white;\n  border: 1px solid ${({ theme }) => theme.color.borderColor};\n  padding: 5px 10px;\n  border-radius: 5px;\n  width: 100%;\n`;\n","import React, { FC } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\n\nimport { updateTemplatePaymentList } from '../../../redux/template';\nimport { PaymentItem, UserItem } from '../../../types';\nimport { formatNumber } from '../../../utils';\nimport { generatePaymentItem } from '../../../utils/payment';\nimport { StepHeader } from '../components/Layout';\nimport { PaymentTable } from '../components/Payment';\n\ninterface Props {\n  userList: UserItem[];\n  paymentList: PaymentItem[];\n}\nexport const PaymentListContainer: FC<Props> = ({ userList, paymentList }) => {\n  const dispatch = useDispatch();\n\n  const addPayment = () => {\n    dispatch(\n      updateTemplatePaymentList({\n        paymentList: [...paymentList, generatePaymentItem()],\n      }),\n    );\n  };\n  const updateTitle = (value: string, index: number) => {\n    const items = [...paymentList];\n    items[index]['title'] = value;\n    dispatch(updateTemplatePaymentList({ paymentList: items }));\n  };\n  const updatePaymentPrice = (value: string, index: number) => {\n    const items = [...paymentList];\n    items[index]['paymentPrice'] = formatNumber(value);\n    dispatch(updateTemplatePaymentList({ paymentList: items }));\n  };\n  const updatePayerName = (selectedUser: string, index: number) => {\n    const items = [...paymentList];\n    items[index]['payerName'] = selectedUser;\n    dispatch(updateTemplatePaymentList({ paymentList: items }));\n  };\n  const updateParticipants = (value: string[], index: number) => {\n    const items = [...paymentList];\n    items[index]['participants'] = value;\n    dispatch(updateTemplatePaymentList({ paymentList: items }));\n  };\n\n  return (\n    <StyledSection>\n      <StepHeader description=\"결제내역 입력\" title=\"Step2\" />\n      <PaymentTable\n        addPayment={addPayment}\n        paymentList={paymentList}\n        updateParticipants={updateParticipants}\n        updatePayerName={updatePayerName}\n        updatePaymentPrice={updatePaymentPrice}\n        updateTitle={updateTitle}\n        userList={userList}\n      />\n    </StyledSection>\n  );\n};\n\nconst StyledSection = styled.section`\n  ${({ theme }) => theme.layout.section};\n`;\n","import {\n  CheckOutlined,\n  CloseOutlined,\n  DeleteOutlined,\n  EditOutlined,\n} from '@ant-design/icons';\nimport { message } from 'antd';\nimport React, { ChangeEvent, FC } from 'react';\nimport styled from 'styled-components';\n\nimport { ContentHeader } from '../../../shared/components/Content';\n\ninterface Props {\n  templateName: string;\n  editTemplateName: string;\n  isEdit: boolean;\n  setEditTemplateName(value: string): void;\n  setIsEdit(value: boolean): void;\n  onSave(): void;\n  onCancel(): void;\n  onDelete(): void;\n}\nexport const TemplateHeader: FC<Props> = ({\n  templateName,\n  editTemplateName,\n  isEdit,\n  setEditTemplateName,\n  setIsEdit,\n  onSave,\n  onCancel,\n  onDelete,\n}) => {\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n    if (value.length > 15) {\n      message.error('템플릿 이름은 최대 15자 입니다.');\n    } else {\n      setEditTemplateName(value);\n    }\n  };\n  return (\n    <StyledContainer>\n      {isEdit ? (\n        <StyledInput\n          maxLength={20}\n          placeholder=\"템플릿 이름 최대 20자\"\n          value={editTemplateName}\n          onChange={onChange}\n        />\n      ) : (\n        <ContentHeader>{templateName}</ContentHeader>\n      )}\n      <StyledIconWrap>\n        {isEdit ? (\n          <>\n            <CheckOutlined onClick={() => onSave()} />\n            <CloseOutlined onClick={() => onCancel()} />\n            <DeleteOutlined onClick={() => onDelete()} />\n          </>\n        ) : (\n          <EditOutlined onClick={() => setIsEdit(true)} />\n        )}\n      </StyledIconWrap>\n    </StyledContainer>\n  );\n};\nconst StyledContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\nconst StyledInput = styled.input`\n  width: 150px;\n  font-size: 16px;\n  border: 1px solid #dedede;\n  border-radius: 4px;\n  padding: 8px 10px;\n  margin-bottom: 14px;\n  font-weight: bold;\n`;\nconst StyledIconWrap = styled.div`\n  margin: 11px 0 0 10px;\n\n  svg {\n    font-size: 18px;\n    margin-right: 7px;\n  }\n`;\n","import { message } from 'antd';\nimport React, { FC, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport { RootState } from '../../../redux';\nimport { updateTemplateList } from '../../../redux/template';\nimport { TemplateHeader } from '../components/Template';\n\ninterface Props {\n  templateName: string;\n}\nexport const TemplateContainer: FC<Props> = ({ templateName }) => {\n  const history = useHistory();\n  const template = useSelector((state: RootState) => state.template);\n  const dispatch = useDispatch();\n  const [editTemplateName, setEditTemplateName] = useState(templateName);\n  const [isEdit, setIsEdit] = useState(false);\n\n  useEffect(() => {\n    onCancel();\n  }, [templateName, template.selectedId]);\n\n  const onCancel = () => {\n    setEditTemplateName(templateName);\n    setIsEdit(false);\n  };\n  const onDelete = () => {\n    if (template.templateList.length < 2) {\n      message.error('템플릿은 최소 하나가 있어야해요. :(');\n      return;\n    }\n    const items = [...template.templateList].filter(\n      (item) => item.id !== template.selectedId,\n    );\n    dispatch(updateTemplateList({ templateList: items }));\n    history.push(`/calc/${items[items.length - 1].id}`);\n  };\n  const onSave = () => {\n    const items = [...template.templateList];\n    const selectedTemplate = items.findIndex(\n      (item) => item.id === template.selectedId,\n    );\n    if (selectedTemplate !== -1) {\n      items[selectedTemplate].templateName = editTemplateName;\n      dispatch(updateTemplateList({ templateList: items }));\n      setIsEdit(false);\n    }\n  };\n  return (\n    <TemplateHeader\n      editTemplateName={editTemplateName}\n      isEdit={isEdit}\n      setEditTemplateName={setEditTemplateName}\n      setIsEdit={setIsEdit}\n      templateName={templateName}\n      onCancel={onCancel}\n      onDelete={onDelete}\n      onSave={onSave}\n    />\n  );\n};\n","import React, { FC } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\n\nimport {\n  deleteTemplateUser,\n  updateTemplateUserList,\n} from '../../../redux/template';\nimport { UserItem } from '../../../types/user';\nimport { StepHeader } from '../components/Layout';\nimport { SelectUserList, tagColors } from '../components/User';\n\ninterface Props {\n  userList: UserItem[];\n}\n\nexport const UserListContainer: FC<Props> = ({ userList }) => {\n  const dispatch = useDispatch();\n\n  const createUser = (userItem: UserItem) => {\n    dispatch(\n      updateTemplateUserList({\n        userList: [...userList, userItem],\n      }),\n    );\n  };\n  const removeUser = (userName: string) => {\n    dispatch(deleteTemplateUser({ userName }));\n  };\n  const changeSelect = (value: string[]) => {\n    if (value.length > userList.length) {\n      createUser({\n        tagColor: tagColors[Math.floor(Math.random() * tagColors.length)],\n        userName: value[value.length - 1],\n      });\n    } else {\n      const filteredUser = userList.filter(\n        (user) => !value.includes(user.userName),\n      );\n      removeUser(filteredUser[0].userName);\n    }\n  };\n\n  return (\n    <StyledSection>\n      <StepHeader description=\"참가자 입력\" title=\"Step1\" />\n      <SelectUserList\n        changeSelect={changeSelect}\n        placeholder=\"참가자 입력 & 선택\"\n        userList={userList}\n        value={userList.map((user) => user.userName)}\n      />\n    </StyledSection>\n  );\n};\nconst StyledSection = styled.section`\n  ${({ theme }) => theme.layout.section};\n\n  .ant-select {\n    width: 100%;\n    font-size: 15px;\n\n    .ant-select-selection-placeholder {\n      left: 22px;\n    }\n    .ant-select-selector {\n      padding: 10px 15px;\n      min-height: 54px;\n    }\n    .ant-tag {\n      margin-right: 6px;\n      font-size: 15px;\n      padding: 5px 10px;\n    }\n    .ant-tag-close-icon {\n      font-size: 12px;\n      vertical-align: middle;\n      margin: -3px 0 0 9px;\n    }\n  }\n`;\n","import React, { FC, useEffect, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { RootState } from '../../../redux';\nimport { updateSelectedId } from '../../../redux/template';\nimport { AdsenseSection } from '../../shared/anlaytics';\nimport { CalculateContainer } from './CalculateContainer';\nimport { PaymentListContainer } from './PaymentListContainer';\nimport { TemplateContainer } from './TemplateContainer';\nimport { UserListContainer } from './UserListContainer';\n\ninterface Props {\n  templateId: string;\n}\nexport const DutchContainer: FC<Props> = ({ templateId }) => {\n  const template = useSelector((state: RootState) => state.template);\n  const dispatch = useDispatch();\n  const selectedTemplate = useMemo(() => {\n    const filterTemplate = template.templateList.filter(\n      (item) => item.id === templateId,\n    );\n\n    if (filterTemplate.length) {\n      return filterTemplate[0];\n    }\n  }, [template, templateId]);\n\n  useEffect(() => {\n    dispatch(updateSelectedId({ templateId }));\n  }, [templateId]);\n\n  if (!selectedTemplate) {\n    return null;\n  }\n\n  return (\n    <StyledContainer>\n      <TemplateContainer templateName={selectedTemplate.templateName} />\n      <AdsenseSection slotNumber={8775838139} />\n      <UserListContainer userList={selectedTemplate.userList} />\n      <PaymentListContainer\n        paymentList={selectedTemplate.paymentList}\n        userList={selectedTemplate.userList}\n      />\n      <CalculateContainer\n        paymentList={selectedTemplate.paymentList}\n        userList={selectedTemplate.userList}\n      />\n      <AdsenseSection slotNumber={3718968486} />\n    </StyledContainer>\n  );\n};\nconst StyledContainer = styled.div``;\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\nimport { NavibarContainer } from '../../../shared/containers';\n\nexport const DutchPageTemplate: FC = ({ children }) => {\n  return (\n    <StyledTemplate>\n      <NavibarContainer />\n      <StyledWrap>{children}</StyledWrap>\n    </StyledTemplate>\n  );\n};\n\nconst StyledTemplate = styled.div`\n  min-height: 100vh;\n  display: flex;\n`;\nconst StyledWrap = styled.div`\n  flex: 1 1 auto;\n  padding: 16px 30px 20px;\n  border-radius: 10px;\n  border: 1px;\n  overflow: hidden;\n`;\n","import { RouteProps } from 'react-router-dom';\n\nimport { AboutPage } from '../about/pages';\nimport { DutchPage } from '../dutch/pages';\n\nexport const routes: RouteProps[] = [\n  {\n    component: AboutPage,\n    exact: true,\n    path: `/`,\n  },\n  {\n    component: DutchPage,\n    exact: true,\n    path: `/calc/:id`,\n  },\n];\n","import React, { FC } from 'react';\n\nimport { AboutContainer } from '../containers';\nimport { AboutPageTemplate } from './templates';\n\nexport const AboutPage: FC = () => {\n  return (\n    <AboutPageTemplate>\n      <AboutContainer />\n    </AboutPageTemplate>\n  );\n};\n","import React, { FC } from 'react';\nimport { useParams } from 'react-router';\n\nimport { DutchContainer } from '../containers';\nimport { DutchPageTemplate } from './templates';\n\ninterface RouterParams {\n  id: string;\n}\n\nexport const DutchPage: FC = () => {\n  const { id } = useParams<RouterParams>();\n\n  return (\n    <DutchPageTemplate>\n      <DutchContainer templateId={id} />\n    </DutchPageTemplate>\n  );\n};\n","import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nconst GlobalStyle = createGlobalStyle`\n  ${reset}\n  * {\n    box-sizing: border-box;\n  }\n  html, body{\n    color: #2f2936;\n    background-color: #fbfbfc;\n    font-size: 14px;\n    font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"Apple SD Gothic Neo\", \"Malgun Gothic\", \"맑은 고딕\", 나눔고딕, \"Nanum Gothic\", \"Noto Sans KR\", \"Noto Sans CJK KR\", arial, 돋움, Dotum, Tahoma, Geneva, sans-serif !important;\n  }\n  a {\n    color: inherit;\n    text-decoration: none;\n  }\n  input, button {\n    background-color: transparent;\n    border: none;\n    outline: none;\n  }\n  ol, ul, li {\n    list-style: none;\n  }\n  img {\n    display: block;\n    width: 100%;\n    height: 100%;\n  }\n  button {\n    &:active, &:hover {\n      opacity: 0.8;\n    }\n  }\n`;\n\nexport default GlobalStyle;\n","const breakpoint = [375, 414, 768, 960, 1280];\nconst mediaQuery = {\n  /**\n   * Large\n   * \\>= 960px\n   * @example 데스크탑\n   */\n  lg: `@media screen and (min-width: ${breakpoint[3]})`,\n\n  /**\n   * Medium\n   * \\>= 768px\n   * @example 태블릿\n   */\n  md: `@media screen and (min-width: ${breakpoint[2]})`,\n\n  /**\n   * Small\n   * \\>= 414px\n   * @example 큰 모바일 기기, iPhone 8 Plus, iPhone 11 XS Max\n   */\n  sm: `@media screen and (min-width: ${breakpoint[1]})`,\n\n  /**\n   * Extra large\n   * \\>= 1280px\n   * @example 고해상도 데스크탑\n   */\n  xl: `@media screen and (min-width: ${breakpoint[4]})`,\n\n  /**\n   * Extra small\n   * \\>= 375px\n   * @example 일반 모바일 기기, iPhone X\n   */\n  xs: `@media screen and (min-width: ${breakpoint[0]})`,\n  /* eslint-enable */\n};\n\nconst color = {\n  borderColor: '#d9d9d9',\n  githubColor: '#252525',\n  linkColor: '#c84b3a',\n  point: '#5e22e8',\n};\nconst layout = {\n  borderRadius: '5px',\n  section: `\n    margin-bottom: 20px;\n    border: 1px solid #d1cad8;\n    padding: 20px;\n    border-radius: 10px;\n    background: white;\n  `,\n};\n\nexport const theme = {\n  color,\n  layout,\n  mediaQuery,\n};\n\nexport type Theme = typeof theme;\n\nexport default theme;\n","import 'antd/dist/antd.css';\n\nimport React, { Suspense } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\n\nimport { Analytics } from './modules/shared/anlaytics';\nimport { routes } from './modules/shared/routes';\nimport GlobalStyle from './styles/GlobalStyle';\nimport { theme } from './styles/theme';\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <ThemeProvider theme={theme}>\n        <Analytics />\n        <HashRouter>\n          <Suspense fallback={<div style={{ minHeight: '100vh' }} />}>\n            <Switch>\n              {routes.map((route, index) => (\n                <Route key={index} {...route} />\n              ))}\n            </Switch>\n          </Suspense>\n        </HashRouter>\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\n\nimport template from './template';\n\nconst rootReducer = combineReducers({\n  template,\n});\n\nexport default rootReducer;\nexport type RootState = ReturnType<typeof rootReducer>;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { applyMiddleware, createStore } from 'redux';\nimport Thunk from 'redux-thunk';\n\nimport App from './App';\nimport rootReducer from './redux';\n\nconst store = createStore(rootReducer, applyMiddleware(Thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}