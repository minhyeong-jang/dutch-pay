{"version":3,"sources":["modules/shared/components/Content/ContentHeader.tsx","modules/shared/components/Content/ContentWrap.tsx","modules/about/containers/AboutContainer.tsx","modules/about/pages/templates/AboutPageTemplate.tsx","modules/about/pages/AboutPage.tsx","modules/shared/components/Navibar/TemplateAddButton.tsx","modules/shared/components/Navibar/TemplateList.tsx","modules/shared/components/Navibar/Navibar.tsx","modules/shared/containers/NavibarContainer.tsx"],"names":["ContentHeader","children","props","StyledHeader","styled","div","ContentWrap","StyledContainer","StyledReponsiveContent","theme","color","linkColor","point","AboutContainer","Content","AboutPageTemplate","StyledTemplate","StyledWrap","AboutPage","TemplateAddButton","onClick","StyledLi","StyledButton","li","button","TemplateList","templateList","map","template","index","className","isActive","to","id","templateName","Navibar","onAddTemplate","StyledNavibar","StyledFixed","StyledInfo","StyledPageName","StyledAuthorName","StyledMenu","location","pathname","includes","length","section","Link","ul","NavibarContainer","useSelector","state","dispatch","useDispatch","useEffect","storageTemplate","localStorage","getItem","storageTemplateList","JSON","parse","setTemplateList","addTemplate","createTemplate"],"mappings":"wcAGO,IAAMA,EAAoB,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAaC,EAAY,4BAC3D,OAAO,cAACC,EAAD,2BAAkBD,GAAlB,aAA0BD,MAE7BE,EAAeC,IAAOC,IAAV,K,svCCHX,IAAMC,EAAkB,SAAC,GAAkB,IAAhBL,EAAe,EAAfA,SAChC,OACE,cAACM,EAAD,UACE,cAACC,EAAD,UAAyBP,OAIzBM,EAAkBH,IAAOC,IAAV,KAiBR,qBAAGI,MAAkBC,MAAMC,aAqB3B,qBAAGF,MAAkBC,MAAME,SA2BlCJ,EAAyBJ,IAAOC,IAAV,M,qFCVfQ,EAAqB,WAChC,OACE,qCACE,cAACC,EAAA,EAAD,8BACA,cAACA,EAAA,EAAD,UACE,cAAC,IAAD,UAjEM,k1H,yTCAP,IAAMC,EAAwB,SAAC,GAAkB,IAAhBd,EAAe,EAAfA,SACtC,OACE,eAACe,EAAD,WACE,cAAC,IAAD,IACA,cAACC,EAAD,UAAahB,QAKbe,EAAiBZ,IAAOC,IAAV,KAIdY,EAAab,IAAOC,IAAV,KCLDa,UARO,WACpB,OACE,cAAC,EAAD,UACE,cAAC,EAAD,Q,2dCFC,IAAMC,EAA+B,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC7C,OACE,cAACC,EAAD,UACE,cAACC,EAAD,CAAcF,QAAO,8GAAE,kBAAMA,OAA7B,+BAIAC,EAAWjB,IAAOmB,GAAV,KAGRD,EAAelB,IAAOoB,OAAV,KCRLC,EAA0B,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACxC,OACE,6BACGA,EAAaC,KAAI,SAACC,EAAUC,GAAX,OAChB,6BACE,cAAC,IAAD,CACEC,UAAW,qBAAGC,SAA2B,SAAW,IACpDC,GAAE,gBAAWJ,EAASK,IAFxB,SAIGL,EAASM,gBALLL,S,w2CCAV,IAAMM,EAA2B,SAAC,GAAqC,IAAnCT,EAAkC,EAAlCA,aAAcU,EAAoB,EAApBA,cACvD,OACE,cAACC,EAAD,UACE,eAACC,EAAD,WACE,eAACC,EAAD,WACE,cAACC,EAAD,CAAgBR,GAAG,IAAnB,uBACA,cAACS,EAAD,gFAEF,eAACC,EAAD,WACE,6BACE,cAAC,IAAD,CACEZ,UAAW,qBAAGC,SAA2B,SAAW,IACpDC,GAAG,IAFL,kEAOF,+BACE,cAAC,IAAD,CACEF,UAAWa,SAASC,SAASC,SAAS,SAAW,SAAW,GAC5Db,GAAE,gBAAWN,EAAaoB,OAASpB,EAAa,GAAGO,GAAK,QAF1D,oCAMA,cAAC,EAAD,CAAcP,aAAcA,OAE9B,cAAC,EAAD,CAAmBN,QAASgB,aAOhCC,EAAgBjC,IAAO2C,QAAV,KAKbT,EAAclC,IAAOC,IAAV,KAOXkC,EAAanC,IAAOC,IAAV,KAIVmC,EAAiBpC,YAAO4C,IAAP5C,CAAH,KAUdqC,EAAmBrC,IAAOC,IAAV,KAOhBqC,EAAatC,IAAO6C,GAAV,KCtEHC,EAAuB,WAClC,IAAMtB,EAAWuB,aAAY,SAACC,GAAD,OAAsBA,EAAMxB,YACnDyB,EAAWC,cAEjBC,qBAAU,WACR,IAAMC,EAAkBC,aAAaC,QAAQ,gBAC7C,GAAIF,EAAiB,CACnB,IAAMG,EAAsBC,KAAKC,MAAML,GACvCH,EAASS,YAAgBH,SAEzBI,MAED,IAEH,IAAMA,EAAc,WAClBV,EAASW,gBAGX,OACE,cAAC,EAAD,CAAStC,aAAcE,EAASF,aAAcU,cAAe2B","file":"static/js/6.13ec0a63.chunk.js","sourcesContent":["import React, { FC } from 'react';\nimport styled from 'styled-components';\n\nexport const ContentHeader: FC = ({ children, ...props }) => {\n  return <StyledHeader {...props}>{children}</StyledHeader>;\n};\nconst StyledHeader = styled.div`\n  display: flex;\n  margin: 8px 0px 20px;\n  font-size: 22px;\n  line-height: 22px;\n  font-weight: bold;\n  align-items: center;\n  color: rgb(74, 62, 86);\n`;\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\nexport const ContentWrap: FC = ({ children }) => {\n  return (\n    <StyledContainer>\n      <StyledReponsiveContent>{children}</StyledReponsiveContent>\n    </StyledContainer>\n  );\n};\nconst StyledContainer = styled.div`\n  background: white;\n  border: 1px solid rgb(209, 202, 216);\n  padding: 50px 20px;\n  border-radius: 5px;\n  margin: 20px 0px;\n\n  ul {\n    margin: 5px 0px 0px 40px;\n\n    li {\n      padding: 3px;\n      list-style: outside;\n      line-height: 1.5;\n    }\n  }\n  a {\n    color: ${({ theme }) => theme.color.linkColor};\n    font-weight: bold;\n    text-decoration: underline;\n  }\n  b,\n  strong {\n    font-weight: bold;\n  }\n  h1 {\n    font-size: 2.2857rem;\n    font-weight: bold;\n  }\n  h2 {\n    font-size: 1.6429rem;\n    margin: 60px 0px 20px 0px;\n    padding: 5px 15px;\n    border-left: 3px solid #5fad80;\n    font-weight: bold;\n  }\n  code {\n    font-weight: bold;\n    color: ${({ theme }) => theme.color.point} !important;\n  }\n  p {\n    font-size: 1.125rem;\n    line-height: 1.8;\n    margin: 20px 0px;\n    color: #131518;\n    letter-spacing: -0.004em;\n    word-break: keep-all;\n    overflow-wrap: break-word;\n  }\n\n  block {\n    display: block;\n    padding: 20px;\n  }\n\n  blockquote {\n    margin: 28px 0;\n    padding: 15px 28px;\n    border-left: 3px solid #f3cf00;\n\n    p {\n      margin: 0px;\n    }\n  }\n`;\nconst StyledReponsiveContent = styled.div`\n  max-width: 900px;\n  margin: 0 auto;\n`;\n","import React, { FC } from 'react';\nimport ReactMarkdown from 'react-markdown';\n\nimport { ContentHeader, ContentWrap } from '../../shared/components/Content';\n\nconst markdown = `\n# 우리 더치페이 하자!\n\n간단한 술자리부터 여행까지! 모임을 편하게 정산해 봅시다~\n\n여러분들은 아래 사항 중 하나라도 겪으셨나요??\n\n> \"나중에 계산하기 복잡해! \\`한 명이 다 계산하자.\\`\"  \n> \"1차하고 2차 \\`참여한 사람 다르니까\\` 따로따로 보내줘!\"  \n> \"카드 안 챙겨서 둘리가 내꺼 결제해 줬는데, \\`별도로 반영해 줄 수 있어?\\`\"  \n> \"길동이는 \\`둘리한테 2,000원\\` 보내고, 둘리는 \\`또치 2,000원 / 도우너 3,000원\\` 보내고...\"  \n\n이 외에도 다양하겠지만, 재미있게 놀고 왔는데 머리 아프다니.. 너무 슬프지 않나요?  \n\n그렇다면 여기서 한번 해보세요!  \n\\`빠르고 쉽게 정산\\`하고 \\`송금하는 사람도 편하도록\\` 모든 정산 방법을 넣었습니다.\n\n아직도 \\`\"내가 원하는 기능이 없어!\"\\`라고 생각하면, [Contact](https://minhyeong-jang.github.io/contact)로 문의해 주세요. 확인 후 추가해드릴게요!\n\n## 사용방법\n\n**1. 참가자 입력**\n\n- 참가자를 입력해 주세요.\n\n**2. 결제정보 입력**\n\n- 사용처, 금액을 입력해 주세요.\n- 결제자, 참가자를 선택해 주세요.\n- 나눠서 결제 한 경우, 항목을 추가해서 결제 정보를 결제한 만큼 입력해 주세요.\n- 사용처, 금액, 결제자, 참가자 중 하나라도 정보가 없다면 정산 리스트에 포함되지 않습니다.\n\n**3. 정산결과 확인**\n\n- 참가자의 결제/송금 금액이 출력되며, 각 참가자 정보에는 송금해야 하는 리스트가 출력됩니다.\n- 한 명이 송금 받아서 정산하는 방식으로 전송해도 무관합니다.\n\n## Developer\n\n- Author : [Minhyeong Jang](https://minhyeong-jang.github.io/about)  \n- Email : [public.doriri@gmail.com](mailto:public.doriri@gmail.com)\n\n## Release Note\n- May 22, 2021\n  - 정산 탭 추가 및 UI 개선\n  - URL 접근 오류 수정\n  - 기타 버그 수정\n- March 30, 2021\n  - 템플릿 저장/수정/삭제 추가\n  - 참여자 삭제 오류 수정\n  - UI 개선\n  - 기타 버그 수정\n- March 27, 2021\n  - 템플릿 리스트 적용\n- March 26, 2021\n  - 로컬스토리지 저장 기능 추가\n- March 25, 2021\n  - 단순 정보 확인이 가능하도록 수정, UI 개편\n`;\n\nexport const AboutContainer: FC = () => {\n  return (\n    <>\n      <ContentHeader>Hello Dutch Pay</ContentHeader>\n      <ContentWrap>\n        <ReactMarkdown>{markdown}</ReactMarkdown>\n      </ContentWrap>\n    </>\n  );\n};\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\nimport { NavibarContainer } from '../../../shared/containers';\n\nexport const AboutPageTemplate: FC = ({ children }) => {\n  return (\n    <StyledTemplate>\n      <NavibarContainer />\n      <StyledWrap>{children}</StyledWrap>\n    </StyledTemplate>\n  );\n};\n\nconst StyledTemplate = styled.div`\n  min-height: 100vh;\n  display: flex;\n`;\nconst StyledWrap = styled.div`\n  flex: 1 1 auto;\n  padding: 16px 30px 20px;\n  border-radius: 10px;\n  border: 1px;\n  overflow: hidden;\n`;\n","import React, { FC } from 'react';\n\nimport { AboutContainer } from '../containers';\nimport { AboutPageTemplate } from './templates';\n\nconst AboutPage: FC = () => {\n  return (\n    <AboutPageTemplate>\n      <AboutContainer />\n    </AboutPageTemplate>\n  );\n};\n\nexport default AboutPage;\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\ninterface Props {\n  onClick(): void;\n}\nexport const TemplateAddButton: FC<Props> = ({ onClick }) => {\n  return (\n    <StyledLi>\n      <StyledButton onClick={() => onClick()}>+ Add Template</StyledButton>\n    </StyledLi>\n  );\n};\nconst StyledLi = styled.li`\n  padding-left: 12px;\n`;\nconst StyledButton = styled.button`\n  width: 100%;\n  background: none;\n  border: 1px solid #dedede;\n  color: white;\n  border-radius: 4px;\n  padding: 10px;\n  cursor: pointer;\n  display: block;\n  text-align: center;\n`;\n","import React, { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { TemplateItem } from '../../../../types';\n\ninterface Props {\n  templateList: TemplateItem[];\n}\nexport const TemplateList: FC<Props> = ({ templateList }) => {\n  return (\n    <ul>\n      {templateList.map((template, index) => (\n        <li key={index}>\n          <NavLink\n            className={({ isActive }) => (isActive ? 'active' : '')}\n            to={`/calc/${template.id}`}\n          >\n            {template.templateName}\n          </NavLink>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { TemplateItem } from '../../../../types';\nimport { TemplateAddButton } from './TemplateAddButton';\nimport { TemplateList } from './TemplateList';\n\ninterface Props {\n  templateList: TemplateItem[];\n  onAddTemplate(): void;\n}\nexport const Navibar: React.FC<Props> = ({ templateList, onAddTemplate }) => {\n  return (\n    <StyledNavibar>\n      <StyledFixed>\n        <StyledInfo>\n          <StyledPageName to=\"/\">Dutch Pay</StyledPageName>\n          <StyledAuthorName>온라인 더치페이 계산기</StyledAuthorName>\n        </StyledInfo>\n        <StyledMenu>\n          <li>\n            <NavLink\n              className={({ isActive }) => (isActive ? 'active' : '')}\n              to=\"/\"\n            >\n              온라인 더치페이란?\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              className={location.pathname.includes('/calc') ? 'active' : ''}\n              to={`/calc/${templateList.length ? templateList[0].id : 'null'}`}\n            >\n              Let&#39;s Start Dutch Pay!\n            </NavLink>\n            <TemplateList templateList={templateList} />\n          </li>\n          <TemplateAddButton onClick={onAddTemplate} />\n        </StyledMenu>\n      </StyledFixed>\n    </StyledNavibar>\n  );\n};\n\nconst StyledNavibar = styled.section`\n  position: relative;\n  flex: 0 0 220px;\n  background: rgba(37, 37, 37, 1);\n`;\nconst StyledFixed = styled.div`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  width: 220px;\n`;\nconst StyledInfo = styled.div`\n  display: block;\n  padding: 20px;\n`;\nconst StyledPageName = styled(Link)`\n  display: block;\n  font-weight: bold;\n  font-size: 17px;\n  line-height: 21px;\n  color: white;\n  &:hover {\n    color: rgb(220, 220, 220);\n  }\n`;\nconst StyledAuthorName = styled.div`\n  display: block;\n  font-size: 14px;\n  color: #aaa;\n  line-height: 19px;\n  font-weight: 500;\n`;\nconst StyledMenu = styled.ul`\n  margin-top: 35px;\n  padding: 0px 20px;\n  line-height: normal;\n\n  & > li {\n    margin-bottom: 10px;\n  }\n\n  ul {\n    padding-left: 13px;\n  }\n  .active {\n    color: white !important;\n    font-weight: bold !important;\n  }\n\n  li {\n    a {\n      display: block;\n      color: rgb(166, 155, 178);\n      font-size: 14px;\n      font-weight: 500;\n      padding: 10px 0px;\n      transition: color 0.2s linear;\n    }\n\n    &:hover {\n      & > a {\n        color: rgb(220, 220, 220);\n      }\n    }\n  }\n`;\n","import React, { FC, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { RootState } from '../../../redux';\nimport { createTemplate, setTemplateList } from '../../../redux/template';\nimport { TemplateItem } from '../../../types';\nimport { Navibar } from '../components/Navibar';\n\nexport const NavibarContainer: FC = () => {\n  const template = useSelector((state: RootState) => state.template);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const storageTemplate = localStorage.getItem('templateList');\n    if (storageTemplate) {\n      const storageTemplateList = JSON.parse(storageTemplate) as TemplateItem[];\n      dispatch(setTemplateList(storageTemplateList));\n    } else {\n      addTemplate();\n    }\n  }, []);\n\n  const addTemplate = () => {\n    dispatch(createTemplate());\n  };\n\n  return (\n    <Navibar templateList={template.templateList} onAddTemplate={addTemplate} />\n  );\n};\n"],"sourceRoot":""}